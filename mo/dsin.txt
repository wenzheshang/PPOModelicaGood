#1
char Aclass(3,24)
Adymosim
1.4
Modelica experiment file


#    Experiment parameters
double experiment(7,1)
       0                   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
   86400                   # StopTime     Time at which integration stops
       0                   # Increment    Communication step size, if > 0
     500                   # nInterval    Number of communication intervals, if > 0
 1.0000000000000000E-002   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
       0                   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
       8                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       1                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
 2.0000000000000000E-014   # teps     Bound to check, if 2 equal time instants
 1.0000000000000000E-010   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
 9.9999999999999995E-007   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 0                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 1                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 1                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(2417,81)
G_p
C_x
eta_z
eta_hp
D
C1
der(C1)
C2
der(C2)
C3
der(C3)
C_s
C_h
Q_h
G_s_1
G_s_2
G_s_3
sinAir1.nPorts
sinAir1.verifyInputs
sinAir1.ports[1].m_flow
sinAir1.ports[1].h_outflow
sinAir1.flowDirection
sinAir1.X_in_internal[1]
sinAir1.X_in_internal[2]
sinAir1.use_X_in
sinAir1.use_Xi_in
sinAir1.use_C_in
sinAir1.X[1]
sinAir1.X[2]
sinAir1.use_p_in
sinAir1.p
sinAir1.use_T_in
sinAir1.T
sinAir1.checkWaterPressure
sinAir1.checkAirPressure
fan11.energyDynamics
fan11.massDynamics
fan11.substanceDynamics
fan11.traceDynamics
fan11.p_start
fan11.T_start
fan11.X_start[1]
fan11.X_start[2]
fan11.mSenFac
fan11.allowFlowReversal
fan11.port_a.m_flow
fan11.port_a.p
fan11.port_a.h_outflow
fan11.port_a.Xi_outflow[1]
fan11.port_b.m_flow
fan11.port_b.p
fan11.port_b.h_outflow
fan11.port_b.Xi_outflow[1]
fan11.m_flow_nominal
fan11.m_flow_small
fan11.show_T
fan11.dp
fan11._m_flow_start
fan11._dp_start
fan11.per.pressure.V_flow[1]
fan11.per.pressure.V_flow[2]
fan11.per.pressure.dp[1]
fan11.per.pressure.dp[2]
fan11.per.use_powerCharacteristic
fan11.per.hydraulicEfficiency.V_flow[1]
fan11.per.hydraulicEfficiency.eta[1]
fan11.per.motorEfficiency.V_flow[1]
fan11.per.motorEfficiency.eta[1]
fan11.per.power.V_flow[1]
fan11.per.power.P[1]
fan11.per.motorCooledByFluid
fan11.per.speed_nominal
fan11.per.constantSpeed
fan11.per.speeds[1]
fan11.per.speed_rpm_nominal
fan11.per.constantSpeed_rpm
fan11.per.speeds_rpm[1]
fan11.per.havePressureCurve
fan11.inputType
fan11.constInput
fan11.stageInputs[1]
fan11.computePowerUsingSimilarityLaws
fan11.addPowerToMedium
fan11.nominalValuesDefineDefaultPressureCurve
fan11.tau
fan11.use_inputFilter
fan11.riseTime
fan11.init
fan11.y_start
fan11.y_actual
fan11.P
fan11.heatPort.T
fan11.heatPort.Q_flow
fan11.VMachine_flow
fan11.dpMachine
fan11.eta
fan11.etaHyd
fan11.etaMot
fan11._VMachine_flow
fan11.preVar
fan11.speedIsInput
fan11.nOri
fan11.haveVMax
fan11.V_flow_max
fan11.rho_default
fan11.sta_start.p
fan11.sta_start.T
fan11.sta_start.X[1]
fan11.sta_start.X[2]
fan11.h_outflow_start
fan11.vol.energyDynamics
fan11.vol.massDynamics
fan11.vol.substanceDynamics
fan11.vol.traceDynamics
fan11.vol.p_start
fan11.vol.T_start
fan11.vol.X_start[1]
fan11.vol.X_start[2]
fan11.vol.mSenFac
fan11.vol.initialize_p
fan11.vol.prescribedHeatFlowRate
fan11.vol.simplify_mWat_flow
fan11.vol.m_flow_nominal
fan11.vol.nPorts
fan11.vol.m_flow_small
fan11.vol.allowFlowReversal
fan11.vol.V
fan11.vol.rho_start
_GlobalScope.Modelica.Media.Interfaces.PartialMixtureMedium.X_default[1]
_GlobalScope.Modelica.Media.Interfaces.PartialMixtureMedium.X_default[2]
fan11.vol.state_default.p
fan11.vol.state_default.T
fan11.vol.state_default.X[1]
fan11.vol.state_default.X[2]
fan11.vol.rho_default
fan11.vol.state_start.p
fan11.vol.state_start.T
fan11.vol.state_start.X[1]
fan11.vol.state_start.X[2]
fan11.vol.useSteadyStateTwoPort
fan11.vol.preTem.port.Q_flow
fan11.vol.heaFloSen.Q_flow
fan11.vol.heaFloSen.port_a.Q_flow
fan11.vol.heaFloSen.port_b.Q_flow
fan11.vol.use_C_flow
fan11.vol.heatPort.Q_flow
fan11.vol.tau
fan11.vol.V_nominal
fan11.filter.analogFilter
fan11.filter.filterType
fan11.filter.order
fan11.filter.f_cut
fan11.filter.gain
fan11.filter.A_ripple
fan11.filter.f_min
fan11.filter.normalized
fan11.filter.init
fan11.filter.nx
fan11.filter.x_start[1]
fan11.filter.x_start[2]
fan11.filter.y_start
fan11.filter.u_nominal
fan11.filter.x[1]
fan11.filter.der(x[1])
fan11.filter.x[2]
fan11.filter.der(x[2])
fan11.filter.ncr
fan11.filter.nc0
fan11.filter.na
fan11.filter.nr
fan11.filter.cr[1]
fan11.filter.cr[2]
fan11.filter.r[1]
fan11.filter.r[2]
fan11.filter.uu[1]
fan11.preSou.allowFlowReversal
fan11.preSou.port_a.h_outflow
fan11.preSou.port_a.Xi_outflow[1]
fan11.preSou.dp_start
fan11.preSou.m_flow_start
fan11.preSou.m_flow_small
fan11.preSou.show_T
fan11.preSou.show_V_flow
fan11.preSou.V_flow
fan11.preSou.control_m_flow
fan11.preSou.control_dp
fan11.preSou.dp_internal
fan11.rho_inlet.y
fan11.senMasFlo.allowFlowReversal
fan11.senMasFlo.m_flow_nominal
fan11.senMasFlo.m_flow_small
_GlobalScope.Modelica.Media.Interfaces.PartialMixtureMedium.X_default_Unique15[1]
_GlobalScope.Modelica.Media.Interfaces.PartialMixtureMedium.X_default_Unique15[2]
fan11.senRelPre.port_a.m_flow
fan11.senRelPre.port_a.h_outflow
fan11.senRelPre.port_a.Xi_outflow[1]
fan11.senRelPre.port_b.m_flow
fan11.senRelPre.port_b.h_outflow
fan11.senRelPre.port_b.Xi_outflow[1]
fan11.senRelPre.p_rel
fan11.eff.homotopyInitialization
fan11.eff.per.pressure.V_flow[1]
fan11.eff.per.pressure.V_flow[2]
fan11.eff.per.pressure.dp[1]
fan11.eff.per.pressure.dp[2]
fan11.eff.per.use_powerCharacteristic
fan11.eff.per.hydraulicEfficiency.V_flow[1]
fan11.eff.per.hydraulicEfficiency.eta[1]
fan11.eff.per.motorEfficiency.V_flow[1]
fan11.eff.per.motorEfficiency.eta[1]
fan11.eff.per.power.V_flow[1]
fan11.eff.per.power.P[1]
fan11.eff.per.motorCooledByFluid
fan11.eff.per.speed_nominal
fan11.eff.per.constantSpeed
fan11.eff.per.speeds[1]
fan11.eff.per.speed_rpm_nominal
fan11.eff.per.constantSpeed_rpm
fan11.eff.per.speeds_rpm[1]
fan11.eff.per.havePressureCurve
fan11.eff.preVar
fan11.eff.computePowerUsingSimilarityLaws
fan11.eff.V_flow_nominal
fan11.eff.rho_default
fan11.eff.haveVMax
fan11.eff.V_flow_max
fan11.eff.nOri
fan11.eff.y_out
fan11.eff.WFlo
fan11.eff.r_N
fan11.eff.r_V
fan11.eff.preSpe
fan11.eff.prePre
fan11.eff.motDer[1]
fan11.eff.hydDer[1]
fan11.eff.dpMax
fan11.eff.delta
fan11.eff.kRes
fan11.eff.curve
fan11.eff.pCur1.n
fan11.eff.pCur1.V_flow[1]
fan11.eff.pCur1.V_flow[2]
fan11.eff.pCur1.dp[1]
fan11.eff.pCur1.dp[2]
fan11.eff.pCur2.n
fan11.eff.pCur2.V_flow[1]
fan11.eff.pCur2.V_flow[2]
fan11.eff.pCur2.V_flow[3]
fan11.eff.pCur2.dp[1]
fan11.eff.pCur2.dp[2]
fan11.eff.pCur2.dp[3]
fan11.eff.pCur3.n
fan11.eff.pCur3.V_flow[1]
fan11.eff.pCur3.V_flow[2]
fan11.eff.pCur3.V_flow[3]
fan11.eff.pCur3.V_flow[4]
fan11.eff.pCur3.dp[1]
fan11.eff.pCur3.dp[2]
fan11.eff.pCur3.dp[3]
fan11.eff.pCur3.dp[4]
fan11.eff.preDer1[1]
fan11.eff.preDer1[2]
fan11.eff.preDer2[1]
fan11.eff.preDer2[2]
fan11.eff.preDer2[3]
fan11.eff.preDer3[1]
fan11.eff.preDer3[2]
fan11.eff.preDer3[3]
fan11.eff.preDer3[4]
fan11.eff.powDer[1]
fan11.eff.haveMinimumDecrease
fan11.eff.haveDPMax
fan11.dp_nominal
fan11.m_flow_start
fan11.constantMassFlowRate
fan11.massFlowRates[1]
damExp.allowFlowReversal
damExp.port_a.m_flow
damExp.port_a.p
damExp.port_a.h_outflow
damExp.port_a.Xi_outflow[1]
damExp.port_b.p
damExp.port_b.h_outflow
damExp.port_b.Xi_outflow[1]
damExp.m_flow_nominal
damExp.m_flow_small
damExp.show_T
damExp.dp
damExp._m_flow_start
damExp._dp_start
damExp.homotopyInitialization
damExp.from_dp
damExp.dp_nominal
damExp.linearized
damExp.m_flow_turbulent
damExp.sta_default.p
damExp.sta_default.T
damExp.sta_default.X[1]
damExp.sta_default.X[2]
damExp.eta_default
damExp.m_flow_nominal_pos
damExp.dp_nominal_pos
damExp.use_inputFilter
damExp.riseTime
damExp.order
damExp.init
damExp.y_start
damExp.y
damExp.y_actual
damExp.casePreInd
damExp.filter.analogFilter
damExp.filter.filterType
damExp.filter.order
damExp.filter.f_cut
damExp.filter.gain
damExp.filter.A_ripple
damExp.filter.f_min
damExp.filter.normalized
damExp.filter.init
damExp.filter.nx
damExp.filter.x_start[1]
damExp.filter.x_start[2]
damExp.filter.y_start
damExp.filter.u_nominal
damExp.filter.x[1]
damExp.filter.der(x[1])
damExp.filter.x[2]
damExp.filter.der(x[2])
damExp.filter.ncr
damExp.filter.nc0
damExp.filter.na
damExp.filter.nr
damExp.filter.cr[1]
damExp.filter.cr[2]
damExp.filter.r[1]
damExp.filter.r[2]
damExp.filter.uu[1]
damExp.dpDamper_nominal
damExp.dpFixed_nominal
damExp.use_deltaM
damExp.deltaM
damExp.v_nominal
damExp.A
damExp.roundDuct
damExp.ReC
damExp.a
damExp.b
damExp.yL
damExp.yU
damExp.k0
damExp.k1
damExp.l
damExp.use_constant_density
damExp.kFixed
damExp.kDam
damExp.rho_default
damExp.facRouDuc
damExp.kL
damExp.kU
damExp.cL[1]
damExp.cL[2]
damExp.cL[3]
damExp.cU[1]
damExp.cU[2]
damExp.cU[3]
damExp.kDamMax
damExp.kTotMax
damExp.kDamMin
damExp.kTotMin
GasRoom.energyDynamics
GasRoom.massDynamics
GasRoom.substanceDynamics
GasRoom.traceDynamics
GasRoom.p_start
GasRoom.T_start
GasRoom.X_start[1]
GasRoom.X_start[2]
GasRoom.mSenFac
GasRoom.initialize_p
GasRoom.prescribedHeatFlowRate
GasRoom.simplify_mWat_flow
GasRoom.m_flow_nominal
GasRoom.nPorts
GasRoom.m_flow_small
GasRoom.allowFlowReversal
GasRoom.V
GasRoom.ports[2].m_flow
GasRoom.ports[3].m_flow
GasRoom.ports[6].m_flow
GasRoom.ports[7].m_flow
GasRoom.ports[8].m_flow
GasRoom.T
GasRoom.rho_start
GasRoom.state_default.p
GasRoom.state_default.T
GasRoom.state_default.X[1]
GasRoom.state_default.X[2]
GasRoom.rho_default
GasRoom.state_start.p
GasRoom.state_start.T
GasRoom.state_start.X[1]
GasRoom.state_start.X[2]
GasRoom.useSteadyStateTwoPort
GasRoom.preTem.port.Q_flow
GasRoom.heaFloSen.Q_flow
GasRoom.heaFloSen.port_a.Q_flow
GasRoom.heaFloSen.port_b.Q_flow
GasRoom.use_C_flow
GasRoom.heatPort.Q_flow
damExp1.allowFlowReversal
damExp1.port_a.h_outflow
damExp1.port_a.Xi_outflow[1]
damExp1.port_b.p
damExp1.m_flow_nominal
damExp1.m_flow_small
damExp1.show_T
damExp1.dp
damExp1._m_flow_start
damExp1._dp_start
damExp1.homotopyInitialization
damExp1.from_dp
damExp1.dp_nominal
damExp1.linearized
damExp1.m_flow_turbulent
damExp1.sta_default.p
damExp1.sta_default.T
damExp1.sta_default.X[1]
damExp1.sta_default.X[2]
damExp1.eta_default
damExp1.m_flow_nominal_pos
damExp1.dp_nominal_pos
damExp1.use_inputFilter
damExp1.riseTime
damExp1.order
damExp1.init
damExp1.y_start
damExp1.y
damExp1.y_actual
damExp1.casePreInd
damExp1.filter.analogFilter
damExp1.filter.filterType
damExp1.filter.order
damExp1.filter.f_cut
damExp1.filter.gain
damExp1.filter.A_ripple
damExp1.filter.f_min
damExp1.filter.normalized
damExp1.filter.init
damExp1.filter.nx
damExp1.filter.x_start[1]
damExp1.filter.x_start[2]
damExp1.filter.y_start
damExp1.filter.u_nominal
damExp1.filter.x[1]
damExp1.filter.der(x[1])
damExp1.filter.x[2]
damExp1.filter.der(x[2])
damExp1.filter.ncr
damExp1.filter.nc0
damExp1.filter.na
damExp1.filter.nr
damExp1.filter.cr[1]
damExp1.filter.cr[2]
damExp1.filter.r[1]
damExp1.filter.r[2]
damExp1.filter.uu[1]
damExp1.dpDamper_nominal
damExp1.dpFixed_nominal
damExp1.use_deltaM
damExp1.deltaM
damExp1.v_nominal
damExp1.A
damExp1.roundDuct
damExp1.ReC
damExp1.a
damExp1.b
damExp1.yL
damExp1.yU
damExp1.k0
damExp1.k1
damExp1.l
damExp1.use_constant_density
damExp1.kFixed
damExp1.kDam
damExp1.rho_default
damExp1.facRouDuc
damExp1.kL
damExp1.kU
damExp1.cL[1]
damExp1.cL[2]
damExp1.cL[3]
damExp1.cU[1]
damExp1.cU[2]
damExp1.cU[3]
damExp1.kDamMax
damExp1.kTotMax
damExp1.kDamMin
damExp1.kTotMin
sinAir2.nPorts
sinAir2.verifyInputs
sinAir2.ports[1].h_outflow
sinAir2.ports[2].m_flow
sinAir2.ports[3].m_flow
sinAir2.ports[4].m_flow
sinAir2.ports[5].m_flow
sinAir2.ports[6].m_flow
sinAir2.flowDirection
sinAir2.X_in_internal[1]
sinAir2.X_in_internal[2]
sinAir2.use_X_in
sinAir2.use_Xi_in
sinAir2.use_C_in
sinAir2.X[1]
sinAir2.X[2]
sinAir2.use_p_in
sinAir2.p
sinAir2.use_T_in
sinAir2.T
sinAir2.checkWaterPressure
sinAir2.checkAirPressure
res1.allowFlowReversal
res1.port_a.h_outflow
res1.port_a.Xi_outflow[1]
res1.port_b.p
res1.m_flow_nominal
res1.m_flow_small
res1.show_T
res1.dp
res1._m_flow_start
res1._dp_start
res1.homotopyInitialization
res1.from_dp
res1.dp_nominal
res1.linearized
res1.m_flow_turbulent
res1.sta_default.p
res1.sta_default.T
res1.sta_default.X[1]
res1.sta_default.X[2]
res1.eta_default
res1.m_flow_nominal_pos
res1.dp_nominal_pos
res1.deltaM
res1.k
res1.computeFlowResistance
res1.coeff
res0.allowFlowReversal
res0.m_flow_nominal
res0.m_flow_small
res0.show_T
res0.dp
res0._m_flow_start
res0._dp_start
res0.homotopyInitialization
res0.from_dp
res0.dp_nominal
res0.linearized
res0.m_flow_turbulent
res0.sta_default.p
res0.sta_default.T
res0.sta_default.X[1]
res0.sta_default.X[2]
res0.eta_default
res0.m_flow_nominal_pos
res0.dp_nominal_pos
res0.deltaM
res0.k
res0.computeFlowResistance
res0.coeff
res2.allowFlowReversal
res2.port_b.h_outflow
res2.port_b.Xi_outflow[1]
res2.m_flow_nominal
res2.m_flow_small
res2.show_T
res2.dp
res2._m_flow_start
res2._dp_start
res2.homotopyInitialization
res2.from_dp
res2.dp_nominal
res2.linearized
res2.m_flow_turbulent
res2.sta_default.p
res2.sta_default.T
res2.sta_default.X[1]
res2.sta_default.X[2]
res2.eta_default
res2.m_flow_nominal_pos
res2.dp_nominal_pos
res2.deltaM
res2.k
res2.computeFlowResistance
res2.coeff
GasRoom1.energyDynamics
GasRoom1.massDynamics
GasRoom1.substanceDynamics
GasRoom1.traceDynamics
GasRoom1.p_start
GasRoom1.T_start
GasRoom1.X_start[1]
GasRoom1.X_start[2]
GasRoom1.mSenFac
GasRoom1.initialize_p
GasRoom1.prescribedHeatFlowRate
GasRoom1.simplify_mWat_flow
GasRoom1.m_flow_nominal
GasRoom1.nPorts
GasRoom1.m_flow_small
GasRoom1.allowFlowReversal
GasRoom1.V
GasRoom1.ports[1].m_flow
GasRoom1.ports[1].p
GasRoom1.ports[1].h_outflow
GasRoom1.ports[1].Xi_outflow[1]
GasRoom1.ports[2].m_flow
GasRoom1.ports[6].m_flow
GasRoom1.ports[7].m_flow
GasRoom1.ports[8].m_flow
GasRoom1.T
GasRoom1.rho_start
GasRoom1.state_default.p
GasRoom1.state_default.T
GasRoom1.state_default.X[1]
GasRoom1.state_default.X[2]
GasRoom1.rho_default
GasRoom1.state_start.p
GasRoom1.state_start.T
GasRoom1.state_start.X[1]
GasRoom1.state_start.X[2]
GasRoom1.useSteadyStateTwoPort
GasRoom1.preTem.port.Q_flow
GasRoom1.heaFloSen.Q_flow
GasRoom1.heaFloSen.port_a.Q_flow
GasRoom1.heaFloSen.port_b.Q_flow
GasRoom1.use_C_flow
GasRoom1.heatPort.Q_flow
damExp2.allowFlowReversal
damExp2.port_a.p
damExp2.port_b.h_outflow
damExp2.port_b.Xi_outflow[1]
damExp2.m_flow_nominal
damExp2.m_flow_small
damExp2.show_T
damExp2.dp
damExp2._m_flow_start
damExp2._dp_start
damExp2.homotopyInitialization
damExp2.from_dp
damExp2.dp_nominal
damExp2.linearized
damExp2.m_flow_turbulent
damExp2.sta_default.p
damExp2.sta_default.T
damExp2.sta_default.X[1]
damExp2.sta_default.X[2]
damExp2.eta_default
damExp2.m_flow_nominal_pos
damExp2.dp_nominal_pos
damExp2.use_inputFilter
damExp2.riseTime
damExp2.order
damExp2.init
damExp2.y_start
damExp2.y
damExp2.y_actual
damExp2.casePreInd
damExp2.filter.analogFilter
damExp2.filter.filterType
damExp2.filter.order
damExp2.filter.f_cut
damExp2.filter.gain
damExp2.filter.A_ripple
damExp2.filter.f_min
damExp2.filter.normalized
damExp2.filter.init
damExp2.filter.nx
damExp2.filter.x_start[1]
damExp2.filter.x_start[2]
damExp2.filter.y_start
damExp2.filter.u_nominal
damExp2.filter.x[1]
damExp2.filter.der(x[1])
damExp2.filter.x[2]
damExp2.filter.der(x[2])
damExp2.filter.ncr
damExp2.filter.nc0
damExp2.filter.na
damExp2.filter.nr
damExp2.filter.cr[1]
damExp2.filter.cr[2]
damExp2.filter.r[1]
damExp2.filter.r[2]
damExp2.filter.uu[1]
damExp2.dpDamper_nominal
damExp2.dpFixed_nominal
damExp2.use_deltaM
damExp2.deltaM
damExp2.v_nominal
damExp2.A
damExp2.roundDuct
damExp2.ReC
damExp2.a
damExp2.b
damExp2.yL
damExp2.yU
damExp2.k0
damExp2.k1
damExp2.l
damExp2.use_constant_density
damExp2.kFixed
damExp2.kDam
damExp2.rho_default
damExp2.facRouDuc
damExp2.kL
damExp2.kU
damExp2.cL[1]
damExp2.cL[2]
damExp2.cL[3]
damExp2.cU[1]
damExp2.cU[2]
damExp2.cU[3]
damExp2.kDamMax
damExp2.kTotMax
damExp2.kDamMin
damExp2.kTotMin
damExp3.allowFlowReversal
damExp3.port_a.h_outflow
damExp3.port_a.Xi_outflow[1]
damExp3.port_b.p
damExp3.m_flow_nominal
damExp3.m_flow_small
damExp3.show_T
damExp3.dp
damExp3._m_flow_start
damExp3._dp_start
damExp3.homotopyInitialization
damExp3.from_dp
damExp3.dp_nominal
damExp3.linearized
damExp3.m_flow_turbulent
damExp3.sta_default.p
damExp3.sta_default.T
damExp3.sta_default.X[1]
damExp3.sta_default.X[2]
damExp3.eta_default
damExp3.m_flow_nominal_pos
damExp3.dp_nominal_pos
damExp3.use_inputFilter
damExp3.riseTime
damExp3.order
damExp3.init
damExp3.y_start
damExp3.y
damExp3.y_actual
damExp3.casePreInd
damExp3.filter.analogFilter
damExp3.filter.filterType
damExp3.filter.order
damExp3.filter.f_cut
damExp3.filter.gain
damExp3.filter.A_ripple
damExp3.filter.f_min
damExp3.filter.normalized
damExp3.filter.init
damExp3.filter.nx
damExp3.filter.x_start[1]
damExp3.filter.x_start[2]
damExp3.filter.y_start
damExp3.filter.u_nominal
damExp3.filter.x[1]
damExp3.filter.der(x[1])
damExp3.filter.x[2]
damExp3.filter.der(x[2])
damExp3.filter.ncr
damExp3.filter.nc0
damExp3.filter.na
damExp3.filter.nr
damExp3.filter.cr[1]
damExp3.filter.cr[2]
damExp3.filter.r[1]
damExp3.filter.r[2]
damExp3.filter.uu[1]
damExp3.dpDamper_nominal
damExp3.dpFixed_nominal
damExp3.use_deltaM
damExp3.deltaM
damExp3.v_nominal
damExp3.A
damExp3.roundDuct
damExp3.ReC
damExp3.a
damExp3.b
damExp3.yL
damExp3.yU
damExp3.k0
damExp3.k1
damExp3.l
damExp3.use_constant_density
damExp3.kFixed
damExp3.kDam
damExp3.rho_default
damExp3.facRouDuc
damExp3.kL
damExp3.kU
damExp3.cL[1]
damExp3.cL[2]
damExp3.cL[3]
damExp3.cU[1]
damExp3.cU[2]
damExp3.cU[3]
damExp3.kDamMax
damExp3.kTotMax
damExp3.kDamMin
damExp3.kTotMin
res01.allowFlowReversal
res01.m_flow_nominal
res01.m_flow_small
res01.show_T
res01.dp
res01._m_flow_start
res01._dp_start
res01.homotopyInitialization
res01.from_dp
res01.dp_nominal
res01.linearized
res01.m_flow_turbulent
res01.sta_default.p
res01.sta_default.T
res01.sta_default.X[1]
res01.sta_default.X[2]
res01.eta_default
res01.m_flow_nominal_pos
res01.dp_nominal_pos
res01.deltaM
res01.k
res01.computeFlowResistance
res01.coeff
res3.allowFlowReversal
res3.m_flow_nominal
res3.m_flow_small
res3.show_T
res3.dp
res3._m_flow_start
res3._dp_start
res3.homotopyInitialization
res3.from_dp
res3.dp_nominal
res3.linearized
res3.m_flow_turbulent
res3.sta_default.p
res3.sta_default.T
res3.sta_default.X[1]
res3.sta_default.X[2]
res3.eta_default
res3.m_flow_nominal_pos
res3.dp_nominal_pos
res3.deltaM
res3.k
res3.computeFlowResistance
res3.coeff
res4.allowFlowReversal
res4.m_flow_nominal
res4.m_flow_small
res4.show_T
res4.dp
res4._m_flow_start
res4._dp_start
res4.homotopyInitialization
res4.from_dp
res4.dp_nominal
res4.linearized
res4.m_flow_turbulent
res4.sta_default.p
res4.sta_default.T
res4.sta_default.X[1]
res4.sta_default.X[2]
res4.eta_default
res4.m_flow_nominal_pos
res4.dp_nominal_pos
res4.deltaM
res4.k
res4.computeFlowResistance
res4.coeff
res5.allowFlowReversal
res5.m_flow_nominal
res5.m_flow_small
res5.show_T
res5.dp
res5._m_flow_start
res5._dp_start
res5.homotopyInitialization
res5.from_dp
res5.dp_nominal
res5.linearized
res5.m_flow_turbulent
res5.sta_default.p
res5.sta_default.T
res5.sta_default.X[1]
res5.sta_default.X[2]
res5.eta_default
res5.m_flow_nominal_pos
res5.dp_nominal_pos
res5.deltaM
res5.k
res5.computeFlowResistance
res5.coeff
res6.allowFlowReversal
res6.m_flow_nominal
res6.m_flow_small
res6.show_T
res6.dp
res6._m_flow_start
res6._dp_start
res6.homotopyInitialization
res6.from_dp
res6.dp_nominal
res6.linearized
res6.m_flow_turbulent
res6.sta_default.p
res6.sta_default.T
res6.sta_default.X[1]
res6.sta_default.X[2]
res6.eta_default
res6.m_flow_nominal_pos
res6.dp_nominal_pos
res6.deltaM
res6.k
res6.computeFlowResistance
res6.coeff
GasRoom2.energyDynamics
GasRoom2.massDynamics
GasRoom2.substanceDynamics
GasRoom2.traceDynamics
GasRoom2.p_start
GasRoom2.T_start
GasRoom2.X_start[1]
GasRoom2.X_start[2]
GasRoom2.mSenFac
GasRoom2.initialize_p
GasRoom2.prescribedHeatFlowRate
GasRoom2.simplify_mWat_flow
GasRoom2.m_flow_nominal
GasRoom2.nPorts
GasRoom2.m_flow_small
GasRoom2.allowFlowReversal
GasRoom2.V
GasRoom2.ports[1].m_flow
GasRoom2.ports[1].p
GasRoom2.ports[1].h_outflow
GasRoom2.ports[1].Xi_outflow[1]
GasRoom2.ports[3].m_flow
GasRoom2.ports[6].m_flow
GasRoom2.ports[7].m_flow
GasRoom2.ports[8].m_flow
GasRoom2.T
GasRoom2.rho_start
GasRoom2.state_default.p
GasRoom2.state_default.T
GasRoom2.state_default.X[1]
GasRoom2.state_default.X[2]
GasRoom2.rho_default
GasRoom2.state_start.p
GasRoom2.state_start.T
GasRoom2.state_start.X[1]
GasRoom2.state_start.X[2]
GasRoom2.useSteadyStateTwoPort
GasRoom2.preTem.port.Q_flow
GasRoom2.heaFloSen.Q_flow
GasRoom2.heaFloSen.port_a.Q_flow
GasRoom2.heaFloSen.port_b.Q_flow
GasRoom2.use_C_flow
GasRoom2.heatPort.Q_flow
res7.allowFlowReversal
res7.port_b.p
res7.port_b.h_outflow
res7.port_b.Xi_outflow[1]
res7.m_flow_nominal
res7.m_flow_small
res7.show_T
res7.dp
res7._m_flow_start
res7._dp_start
res7.homotopyInitialization
res7.from_dp
res7.dp_nominal
res7.linearized
res7.m_flow_turbulent
res7.sta_default.p
res7.sta_default.T
res7.sta_default.X[1]
res7.sta_default.X[2]
res7.eta_default
res7.m_flow_nominal_pos
res7.dp_nominal_pos
res7.deltaM
res7.k
res7.computeFlowResistance
res7.coeff
damExp4.allowFlowReversal
damExp4.m_flow_nominal
damExp4.m_flow_small
damExp4.show_T
damExp4.dp
damExp4._m_flow_start
damExp4._dp_start
damExp4.homotopyInitialization
damExp4.from_dp
damExp4.dp_nominal
damExp4.linearized
damExp4.m_flow_turbulent
damExp4.sta_default.p
damExp4.sta_default.T
damExp4.sta_default.X[1]
damExp4.sta_default.X[2]
damExp4.eta_default
damExp4.m_flow_nominal_pos
damExp4.dp_nominal_pos
damExp4.use_inputFilter
damExp4.riseTime
damExp4.order
damExp4.init
damExp4.y_start
damExp4.y
damExp4.y_actual
damExp4.casePreInd
damExp4.filter.analogFilter
damExp4.filter.filterType
damExp4.filter.order
damExp4.filter.f_cut
damExp4.filter.gain
damExp4.filter.A_ripple
damExp4.filter.f_min
damExp4.filter.normalized
damExp4.filter.init
damExp4.filter.nx
damExp4.filter.x_start[1]
damExp4.filter.x_start[2]
damExp4.filter.y_start
damExp4.filter.u_nominal
damExp4.filter.x[1]
damExp4.filter.der(x[1])
damExp4.filter.x[2]
damExp4.filter.der(x[2])
damExp4.filter.ncr
damExp4.filter.nc0
damExp4.filter.na
damExp4.filter.nr
damExp4.filter.cr[1]
damExp4.filter.cr[2]
damExp4.filter.r[1]
damExp4.filter.r[2]
damExp4.filter.uu[1]
damExp4.dpDamper_nominal
damExp4.dpFixed_nominal
damExp4.use_deltaM
damExp4.deltaM
damExp4.v_nominal
damExp4.A
damExp4.roundDuct
damExp4.ReC
damExp4.a
damExp4.b
damExp4.yL
damExp4.yU
damExp4.k0
damExp4.k1
damExp4.l
damExp4.use_constant_density
damExp4.kFixed
damExp4.kDam
damExp4.rho_default
damExp4.facRouDuc
damExp4.kL
damExp4.kU
damExp4.cL[1]
damExp4.cL[2]
damExp4.cL[3]
damExp4.cU[1]
damExp4.cU[2]
damExp4.cU[3]
damExp4.kDamMax
damExp4.kTotMax
damExp4.kDamMin
damExp4.kTotMin
res02.allowFlowReversal
res02.m_flow_nominal
res02.m_flow_small
res02.show_T
res02.dp
res02._m_flow_start
res02._dp_start
res02.homotopyInitialization
res02.from_dp
res02.dp_nominal
res02.linearized
res02.m_flow_turbulent
res02.sta_default.p
res02.sta_default.T
res02.sta_default.X[1]
res02.sta_default.X[2]
res02.eta_default
res02.m_flow_nominal_pos
res02.dp_nominal_pos
res02.deltaM
res02.k
res02.computeFlowResistance
res02.coeff
damExp5.allowFlowReversal
damExp5.port_a.h_outflow
damExp5.port_a.Xi_outflow[1]
damExp5.port_b.p
damExp5.m_flow_nominal
damExp5.m_flow_small
damExp5.show_T
damExp5.dp
damExp5._m_flow_start
damExp5._dp_start
damExp5.homotopyInitialization
damExp5.from_dp
damExp5.dp_nominal
damExp5.linearized
damExp5.m_flow_turbulent
damExp5.sta_default.p
damExp5.sta_default.T
damExp5.sta_default.X[1]
damExp5.sta_default.X[2]
damExp5.eta_default
damExp5.m_flow_nominal_pos
damExp5.dp_nominal_pos
damExp5.use_inputFilter
damExp5.riseTime
damExp5.order
damExp5.init
damExp5.y_start
damExp5.y
damExp5.y_actual
damExp5.casePreInd
damExp5.filter.analogFilter
damExp5.filter.filterType
damExp5.filter.order
damExp5.filter.f_cut
damExp5.filter.gain
damExp5.filter.A_ripple
damExp5.filter.f_min
damExp5.filter.normalized
damExp5.filter.init
damExp5.filter.nx
damExp5.filter.x_start[1]
damExp5.filter.x_start[2]
damExp5.filter.y_start
damExp5.filter.u_nominal
damExp5.filter.x[1]
damExp5.filter.der(x[1])
damExp5.filter.x[2]
damExp5.filter.der(x[2])
damExp5.filter.ncr
damExp5.filter.nc0
damExp5.filter.na
damExp5.filter.nr
damExp5.filter.cr[1]
damExp5.filter.cr[2]
damExp5.filter.r[1]
damExp5.filter.r[2]
damExp5.filter.uu[1]
damExp5.dpDamper_nominal
damExp5.dpFixed_nominal
damExp5.use_deltaM
damExp5.deltaM
damExp5.v_nominal
damExp5.A
damExp5.roundDuct
damExp5.ReC
damExp5.a
damExp5.b
damExp5.yL
damExp5.yU
damExp5.k0
damExp5.k1
damExp5.l
damExp5.use_constant_density
damExp5.kFixed
damExp5.kDam
damExp5.rho_default
damExp5.facRouDuc
damExp5.kL
damExp5.kU
damExp5.cL[1]
damExp5.cL[2]
damExp5.cL[3]
damExp5.cU[1]
damExp5.cU[2]
damExp5.cU[3]
damExp5.kDamMax
damExp5.kTotMax
damExp5.kDamMin
damExp5.kTotMin
ori.allowFlowReversal
ori.m_flow_nominal
ori.m_flow_small
ori.show_T
ori.dp
ori._m_flow_start
ori._dp_start
ori.forceErrorControlOnFlow
ori.homotopyInitialization
ori.m
ori.useDefaultProperties
ori.dp_turbulent
ori.V_flow
ori.v
ori.gamma
ori.k
ori.sta_default.p
ori.sta_default.T
ori.sta_default.X[1]
ori.sta_default.X[2]
ori.rho_default
ori.dynVis_default
ori.a
ori.b
ori.c
ori.d
ori.mExc
ori.der(mExc)
ori.A
ori.CD
ori1.allowFlowReversal
ori1.m_flow_nominal
ori1.m_flow_small
ori1.show_T
ori1.dp
ori1._m_flow_start
ori1._dp_start
ori1.forceErrorControlOnFlow
ori1.homotopyInitialization
ori1.m
ori1.useDefaultProperties
ori1.dp_turbulent
ori1.V_flow
ori1.v
ori1.gamma
ori1.k
ori1.sta_default.p
ori1.sta_default.T
ori1.sta_default.X[1]
ori1.sta_default.X[2]
ori1.rho_default
ori1.dynVis_default
ori1.a
ori1.b
ori1.c
ori1.d
ori1.mExc
ori1.der(mExc)
ori1.A
ori1.CD
ori5.allowFlowReversal
ori5.m_flow_nominal
ori5.m_flow_small
ori5.show_T
ori5.dp
ori5._m_flow_start
ori5._dp_start
ori5.forceErrorControlOnFlow
ori5.homotopyInitialization
ori5.m
ori5.useDefaultProperties
ori5.dp_turbulent
ori5.V_flow
ori5.v
ori5.gamma
ori5.k
ori5.sta_default.p
ori5.sta_default.T
ori5.sta_default.X[1]
ori5.sta_default.X[2]
ori5.rho_default
ori5.dynVis_default
ori5.a
ori5.b
ori5.c
ori5.d
ori5.mExc
ori5.der(mExc)
ori5.A
ori5.CD
combiTimeTable.nout
combiTimeTable.y[1]
combiTimeTable.y[2]
combiTimeTable.y[3]
combiTimeTable.y[4]
combiTimeTable.tableOnFile
combiTimeTable.table[1, 1]
combiTimeTable.table[1, 2]
combiTimeTable.table[1, 3]
combiTimeTable.table[1, 4]
combiTimeTable.table[1, 5]
combiTimeTable.table[2, 1]
combiTimeTable.table[2, 2]
combiTimeTable.table[2, 3]
combiTimeTable.table[2, 4]
combiTimeTable.table[2, 5]
combiTimeTable.table[3, 1]
combiTimeTable.table[3, 2]
combiTimeTable.table[3, 3]
combiTimeTable.table[3, 4]
combiTimeTable.table[3, 5]
combiTimeTable.table[4, 1]
combiTimeTable.table[4, 2]
combiTimeTable.table[4, 3]
combiTimeTable.table[4, 4]
combiTimeTable.table[4, 5]
combiTimeTable.table[5, 1]
combiTimeTable.table[5, 2]
combiTimeTable.table[5, 3]
combiTimeTable.table[5, 4]
combiTimeTable.table[5, 5]
combiTimeTable.table[6, 1]
combiTimeTable.table[6, 2]
combiTimeTable.table[6, 3]
combiTimeTable.table[6, 4]
combiTimeTable.table[6, 5]
combiTimeTable.table[7, 1]
combiTimeTable.table[7, 2]
combiTimeTable.table[7, 3]
combiTimeTable.table[7, 4]
combiTimeTable.table[7, 5]
combiTimeTable.table[8, 1]
combiTimeTable.table[8, 2]
combiTimeTable.table[8, 3]
combiTimeTable.table[8, 4]
combiTimeTable.table[8, 5]
combiTimeTable.table[9, 1]
combiTimeTable.table[9, 2]
combiTimeTable.table[9, 3]
combiTimeTable.table[9, 4]
combiTimeTable.table[9, 5]
combiTimeTable.table[10, 1]
combiTimeTable.table[10, 2]
combiTimeTable.table[10, 3]
combiTimeTable.table[10, 4]
combiTimeTable.table[10, 5]
combiTimeTable.table[11, 1]
combiTimeTable.table[11, 2]
combiTimeTable.table[11, 3]
combiTimeTable.table[11, 4]
combiTimeTable.table[11, 5]
combiTimeTable.table[12, 1]
combiTimeTable.table[12, 2]
combiTimeTable.table[12, 3]
combiTimeTable.table[12, 4]
combiTimeTable.table[12, 5]
combiTimeTable.table[13, 1]
combiTimeTable.table[13, 2]
combiTimeTable.table[13, 3]
combiTimeTable.table[13, 4]
combiTimeTable.table[13, 5]
combiTimeTable.table[14, 1]
combiTimeTable.table[14, 2]
combiTimeTable.table[14, 3]
combiTimeTable.table[14, 4]
combiTimeTable.table[14, 5]
combiTimeTable.table[15, 1]
combiTimeTable.table[15, 2]
combiTimeTable.table[15, 3]
combiTimeTable.table[15, 4]
combiTimeTable.table[15, 5]
combiTimeTable.table[16, 1]
combiTimeTable.table[16, 2]
combiTimeTable.table[16, 3]
combiTimeTable.table[16, 4]
combiTimeTable.table[16, 5]
combiTimeTable.table[17, 1]
combiTimeTable.table[17, 2]
combiTimeTable.table[17, 3]
combiTimeTable.table[17, 4]
combiTimeTable.table[17, 5]
combiTimeTable.table[18, 1]
combiTimeTable.table[18, 2]
combiTimeTable.table[18, 3]
combiTimeTable.table[18, 4]
combiTimeTable.table[18, 5]
combiTimeTable.table[19, 1]
combiTimeTable.table[19, 2]
combiTimeTable.table[19, 3]
combiTimeTable.table[19, 4]
combiTimeTable.table[19, 5]
combiTimeTable.table[20, 1]
combiTimeTable.table[20, 2]
combiTimeTable.table[20, 3]
combiTimeTable.table[20, 4]
combiTimeTable.table[20, 5]
combiTimeTable.table[21, 1]
combiTimeTable.table[21, 2]
combiTimeTable.table[21, 3]
combiTimeTable.table[21, 4]
combiTimeTable.table[21, 5]
combiTimeTable.table[22, 1]
combiTimeTable.table[22, 2]
combiTimeTable.table[22, 3]
combiTimeTable.table[22, 4]
combiTimeTable.table[22, 5]
combiTimeTable.table[23, 1]
combiTimeTable.table[23, 2]
combiTimeTable.table[23, 3]
combiTimeTable.table[23, 4]
combiTimeTable.table[23, 5]
combiTimeTable.table[24, 1]
combiTimeTable.table[24, 2]
combiTimeTable.table[24, 3]
combiTimeTable.table[24, 4]
combiTimeTable.table[24, 5]
combiTimeTable.table[25, 1]
combiTimeTable.table[25, 2]
combiTimeTable.table[25, 3]
combiTimeTable.table[25, 4]
combiTimeTable.table[25, 5]
combiTimeTable.table[26, 1]
combiTimeTable.table[26, 2]
combiTimeTable.table[26, 3]
combiTimeTable.table[26, 4]
combiTimeTable.table[26, 5]
combiTimeTable.verboseRead
combiTimeTable.columns[1]
combiTimeTable.columns[2]
combiTimeTable.columns[3]
combiTimeTable.columns[4]
combiTimeTable.smoothness
combiTimeTable.extrapolation
combiTimeTable.offset[1]
combiTimeTable.startTime
combiTimeTable.timeScale
combiTimeTable.t_min
combiTimeTable.t_max
combiTimeTable.t_minScaled
combiTimeTable.t_maxScaled
combiTimeTable.p_offset[1]
combiTimeTable.p_offset[2]
combiTimeTable.p_offset[3]
combiTimeTable.p_offset[4]
combiTimeTable.tableID.id
combiTimeTable.nextTimeEvent
combiTimeTable.nextTimeEventScaled
combiTimeTable.tableOnFileRead
combiTimeTable.DBL_MAX
combiTimeTable.timeScaled
realValue.use_numberPort
realValue.number
realValue.significantDigits
realValue2.use_numberPort
realValue2.number
realValue2.significantDigits
realValue3.use_numberPort
realValue3.number
realValue3.significantDigits
senRelPre.port_a.m_flow
senRelPre.port_a.h_outflow
senRelPre.port_a.Xi_outflow[1]
senRelPre.port_b.m_flow
senRelPre.port_b.h_outflow
senRelPre.port_b.Xi_outflow[1]
senRelPre.p_rel
senRelPre1.port_a.m_flow
senRelPre1.port_a.h_outflow
senRelPre1.port_a.Xi_outflow[1]
senRelPre1.port_b.m_flow
senRelPre1.port_b.h_outflow
senRelPre1.port_b.Xi_outflow[1]
senRelPre1.p_rel
senRelPre2.port_a.m_flow
senRelPre2.port_a.h_outflow
senRelPre2.port_a.Xi_outflow[1]
senRelPre2.port_b.m_flow
senRelPre2.port_b.h_outflow
senRelPre2.port_b.Xi_outflow[1]
senRelPre2.p_rel
senRelPre3.port_a.m_flow
senRelPre3.port_a.h_outflow
senRelPre3.port_a.Xi_outflow[1]
senRelPre3.port_b.m_flow
senRelPre3.port_b.h_outflow
senRelPre3.port_b.Xi_outflow[1]
senRelPre3.p_rel
conPID.u_s
conPID.controlError
conPID.controllerType
conPID.k
conPID.Ti
conPID.Td
conPID.yMax
conPID.yMin
conPID.wp
conPID.wd
conPID.Ni
conPID.Nd
conPID.initType
conPID.xi_start
conPID.xd_start
conPID.y_start
conPID.strict
conPID.reverseAction
conPID.reset
conPID.y_reset
conPID.addP.y
conPID.addP.k1
conPID.addP.k2
conPID.P.k
conPID.P.y
conPID.addPID.k1
conPID.addPID.k2
conPID.addPID.k3
conPID.addPID.u2
conPID.addPID.y
conPID.unitTime
conPID.revAct
conPID.with_I
conPID.with_D
conPID.y_reset_internal
conPID.addI.k1
conPID.addI.k2
conPID.addI.k3
conPID.addI.u3
conPID.addI.y
conPID.addSat.y
conPID.addSat.k1
conPID.addSat.k2
conPID.gainPID.k
conPID.gainPID.y
conPID.gainTrack.k
conPID.limiter.uMax
conPID.limiter.uMin
conPID.limiter.strict
conPID.limiter.limitsAtInit
senRelPre4.port_a.m_flow
senRelPre4.port_a.h_outflow
senRelPre4.port_a.Xi_outflow[1]
senRelPre4.port_b.m_flow
senRelPre4.port_b.h_outflow
senRelPre4.port_b.Xi_outflow[1]
senRelPre4.p_rel
senRelPre5.port_a.m_flow
senRelPre5.port_a.h_outflow
senRelPre5.port_a.Xi_outflow[1]
senRelPre5.port_b.m_flow
senRelPre5.port_b.h_outflow
senRelPre5.port_b.Xi_outflow[1]
senRelPre5.p_rel
realExpression7.y
realExpression8.y
combiTimeTable_huanchong.nout
combiTimeTable_huanchong.y[1]
combiTimeTable_huanchong.tableOnFile
combiTimeTable_huanchong.table[1, 1]
combiTimeTable_huanchong.table[1, 2]
combiTimeTable_huanchong.table[2, 1]
combiTimeTable_huanchong.table[2, 2]
combiTimeTable_huanchong.table[3, 1]
combiTimeTable_huanchong.table[3, 2]
combiTimeTable_huanchong.table[4, 1]
combiTimeTable_huanchong.table[4, 2]
combiTimeTable_huanchong.table[5, 1]
combiTimeTable_huanchong.table[5, 2]
combiTimeTable_huanchong.table[6, 1]
combiTimeTable_huanchong.table[6, 2]
combiTimeTable_huanchong.table[7, 1]
combiTimeTable_huanchong.table[7, 2]
combiTimeTable_huanchong.table[8, 1]
combiTimeTable_huanchong.table[8, 2]
combiTimeTable_huanchong.table[9, 1]
combiTimeTable_huanchong.table[9, 2]
combiTimeTable_huanchong.table[10, 1]
combiTimeTable_huanchong.table[10, 2]
combiTimeTable_huanchong.table[11, 1]
combiTimeTable_huanchong.table[11, 2]
combiTimeTable_huanchong.table[12, 1]
combiTimeTable_huanchong.table[12, 2]
combiTimeTable_huanchong.table[13, 1]
combiTimeTable_huanchong.table[13, 2]
combiTimeTable_huanchong.table[14, 1]
combiTimeTable_huanchong.table[14, 2]
combiTimeTable_huanchong.table[15, 1]
combiTimeTable_huanchong.table[15, 2]
combiTimeTable_huanchong.table[16, 1]
combiTimeTable_huanchong.table[16, 2]
combiTimeTable_huanchong.table[17, 1]
combiTimeTable_huanchong.table[17, 2]
combiTimeTable_huanchong.table[18, 1]
combiTimeTable_huanchong.table[18, 2]
combiTimeTable_huanchong.table[19, 1]
combiTimeTable_huanchong.table[19, 2]
combiTimeTable_huanchong.table[20, 1]
combiTimeTable_huanchong.table[20, 2]
combiTimeTable_huanchong.table[21, 1]
combiTimeTable_huanchong.table[21, 2]
combiTimeTable_huanchong.table[22, 1]
combiTimeTable_huanchong.table[22, 2]
combiTimeTable_huanchong.table[23, 1]
combiTimeTable_huanchong.table[23, 2]
combiTimeTable_huanchong.table[24, 1]
combiTimeTable_huanchong.table[24, 2]
combiTimeTable_huanchong.table[25, 1]
combiTimeTable_huanchong.table[25, 2]
combiTimeTable_huanchong.table[26, 1]
combiTimeTable_huanchong.table[26, 2]
combiTimeTable_huanchong.verboseRead
combiTimeTable_huanchong.columns[1]
combiTimeTable_huanchong.smoothness
combiTimeTable_huanchong.extrapolation
combiTimeTable_huanchong.offset[1]
combiTimeTable_huanchong.startTime
combiTimeTable_huanchong.timeScale
combiTimeTable_huanchong.t_min
combiTimeTable_huanchong.t_max
combiTimeTable_huanchong.t_minScaled
combiTimeTable_huanchong.t_maxScaled
combiTimeTable_huanchong.p_offset[1]
combiTimeTable_huanchong.tableID.id
combiTimeTable_huanchong.nextTimeEvent
combiTimeTable_huanchong.nextTimeEventScaled
combiTimeTable_huanchong.tableOnFileRead
combiTimeTable_huanchong.DBL_MAX
combiTimeTable_huanchong.timeScaled
combiTimeTable_weisheng.nout
combiTimeTable_weisheng.y[1]
combiTimeTable_weisheng.tableOnFile
combiTimeTable_weisheng.table[1, 1]
combiTimeTable_weisheng.table[1, 2]
combiTimeTable_weisheng.table[2, 1]
combiTimeTable_weisheng.table[2, 2]
combiTimeTable_weisheng.table[3, 1]
combiTimeTable_weisheng.table[3, 2]
combiTimeTable_weisheng.table[4, 1]
combiTimeTable_weisheng.table[4, 2]
combiTimeTable_weisheng.table[5, 1]
combiTimeTable_weisheng.table[5, 2]
combiTimeTable_weisheng.table[6, 1]
combiTimeTable_weisheng.table[6, 2]
combiTimeTable_weisheng.table[7, 1]
combiTimeTable_weisheng.table[7, 2]
combiTimeTable_weisheng.table[8, 1]
combiTimeTable_weisheng.table[8, 2]
combiTimeTable_weisheng.table[9, 1]
combiTimeTable_weisheng.table[9, 2]
combiTimeTable_weisheng.table[10, 1]
combiTimeTable_weisheng.table[10, 2]
combiTimeTable_weisheng.table[11, 1]
combiTimeTable_weisheng.table[11, 2]
combiTimeTable_weisheng.table[12, 1]
combiTimeTable_weisheng.table[12, 2]
combiTimeTable_weisheng.table[13, 1]
combiTimeTable_weisheng.table[13, 2]
combiTimeTable_weisheng.table[14, 1]
combiTimeTable_weisheng.table[14, 2]
combiTimeTable_weisheng.table[15, 1]
combiTimeTable_weisheng.table[15, 2]
combiTimeTable_weisheng.table[16, 1]
combiTimeTable_weisheng.table[16, 2]
combiTimeTable_weisheng.table[17, 1]
combiTimeTable_weisheng.table[17, 2]
combiTimeTable_weisheng.table[18, 1]
combiTimeTable_weisheng.table[18, 2]
combiTimeTable_weisheng.table[19, 1]
combiTimeTable_weisheng.table[19, 2]
combiTimeTable_weisheng.table[20, 1]
combiTimeTable_weisheng.table[20, 2]
combiTimeTable_weisheng.table[21, 1]
combiTimeTable_weisheng.table[21, 2]
combiTimeTable_weisheng.table[22, 1]
combiTimeTable_weisheng.table[22, 2]
combiTimeTable_weisheng.table[23, 1]
combiTimeTable_weisheng.table[23, 2]
combiTimeTable_weisheng.table[24, 1]
combiTimeTable_weisheng.table[24, 2]
combiTimeTable_weisheng.table[25, 1]
combiTimeTable_weisheng.table[25, 2]
combiTimeTable_weisheng.table[26, 1]
combiTimeTable_weisheng.table[26, 2]
combiTimeTable_weisheng.verboseRead
combiTimeTable_weisheng.columns[1]
combiTimeTable_weisheng.smoothness
combiTimeTable_weisheng.extrapolation
combiTimeTable_weisheng.offset[1]
combiTimeTable_weisheng.startTime
combiTimeTable_weisheng.timeScale
combiTimeTable_weisheng.t_min
combiTimeTable_weisheng.t_max
combiTimeTable_weisheng.t_minScaled
combiTimeTable_weisheng.t_maxScaled
combiTimeTable_weisheng.p_offset[1]
combiTimeTable_weisheng.tableID.id
combiTimeTable_weisheng.nextTimeEvent
combiTimeTable_weisheng.nextTimeEventScaled
combiTimeTable_weisheng.tableOnFileRead
combiTimeTable_weisheng.DBL_MAX
combiTimeTable_weisheng.timeScaled
combiTimeTable_wujun.nout
combiTimeTable_wujun.y[1]
combiTimeTable_wujun.tableOnFile
combiTimeTable_wujun.table[1, 1]
combiTimeTable_wujun.table[1, 2]
combiTimeTable_wujun.table[2, 1]
combiTimeTable_wujun.table[2, 2]
combiTimeTable_wujun.table[3, 1]
combiTimeTable_wujun.table[3, 2]
combiTimeTable_wujun.table[4, 1]
combiTimeTable_wujun.table[4, 2]
combiTimeTable_wujun.table[5, 1]
combiTimeTable_wujun.table[5, 2]
combiTimeTable_wujun.table[6, 1]
combiTimeTable_wujun.table[6, 2]
combiTimeTable_wujun.table[7, 1]
combiTimeTable_wujun.table[7, 2]
combiTimeTable_wujun.table[8, 1]
combiTimeTable_wujun.table[8, 2]
combiTimeTable_wujun.table[9, 1]
combiTimeTable_wujun.table[9, 2]
combiTimeTable_wujun.table[10, 1]
combiTimeTable_wujun.table[10, 2]
combiTimeTable_wujun.table[11, 1]
combiTimeTable_wujun.table[11, 2]
combiTimeTable_wujun.table[12, 1]
combiTimeTable_wujun.table[12, 2]
combiTimeTable_wujun.table[13, 1]
combiTimeTable_wujun.table[13, 2]
combiTimeTable_wujun.table[14, 1]
combiTimeTable_wujun.table[14, 2]
combiTimeTable_wujun.table[15, 1]
combiTimeTable_wujun.table[15, 2]
combiTimeTable_wujun.table[16, 1]
combiTimeTable_wujun.table[16, 2]
combiTimeTable_wujun.table[17, 1]
combiTimeTable_wujun.table[17, 2]
combiTimeTable_wujun.table[18, 1]
combiTimeTable_wujun.table[18, 2]
combiTimeTable_wujun.table[19, 1]
combiTimeTable_wujun.table[19, 2]
combiTimeTable_wujun.table[20, 1]
combiTimeTable_wujun.table[20, 2]
combiTimeTable_wujun.table[21, 1]
combiTimeTable_wujun.table[21, 2]
combiTimeTable_wujun.table[22, 1]
combiTimeTable_wujun.table[22, 2]
combiTimeTable_wujun.table[23, 1]
combiTimeTable_wujun.table[23, 2]
combiTimeTable_wujun.table[24, 1]
combiTimeTable_wujun.table[24, 2]
combiTimeTable_wujun.table[25, 1]
combiTimeTable_wujun.table[25, 2]
combiTimeTable_wujun.table[26, 1]
combiTimeTable_wujun.table[26, 2]
combiTimeTable_wujun.verboseRead
combiTimeTable_wujun.columns[1]
combiTimeTable_wujun.smoothness
combiTimeTable_wujun.extrapolation
combiTimeTable_wujun.offset[1]
combiTimeTable_wujun.startTime
combiTimeTable_wujun.timeScale
combiTimeTable_wujun.t_min
combiTimeTable_wujun.t_max
combiTimeTable_wujun.t_minScaled
combiTimeTable_wujun.t_maxScaled
combiTimeTable_wujun.p_offset[1]
combiTimeTable_wujun.tableID.id
combiTimeTable_wujun.nextTimeEvent
combiTimeTable_wujun.nextTimeEventScaled
combiTimeTable_wujun.tableOnFileRead
combiTimeTable_wujun.DBL_MAX
combiTimeTable_wujun.timeScaled
conPID2.u_m
conPID2.controlError
conPID2.controllerType
conPID2.k
conPID2.Ti
conPID2.Td
conPID2.yMax
conPID2.yMin
conPID2.wp
conPID2.wd
conPID2.Ni
conPID2.Nd
conPID2.initType
conPID2.xi_start
conPID2.xd_start
conPID2.y_start
conPID2.strict
conPID2.reverseAction
conPID2.reset
conPID2.y_reset
conPID2.addP.y
conPID2.addP.k1
conPID2.addP.k2
conPID2.P.k
conPID2.P.y
conPID2.addPID.k1
conPID2.addPID.k2
conPID2.addPID.k3
conPID2.addPID.u2
conPID2.addPID.y
conPID2.unitTime
conPID2.revAct
conPID2.with_I
conPID2.with_D
conPID2.y_reset_internal
conPID2.addI.k1
conPID2.addI.k2
conPID2.addI.k3
conPID2.addI.u3
conPID2.addI.y
conPID2.addSat.y
conPID2.addSat.k1
conPID2.addSat.k2
conPID2.gainPID.k
conPID2.gainPID.y
conPID2.gainTrack.k
conPID2.limiter.uMax
conPID2.limiter.uMin
conPID2.limiter.strict
conPID2.limiter.limitsAtInit
realExpression10.y
conPID4.controlError
conPID4.controllerType
conPID4.k
conPID4.Ti
conPID4.Td
conPID4.yMax
conPID4.yMin
conPID4.wp
conPID4.wd
conPID4.Ni
conPID4.Nd
conPID4.initType
conPID4.xi_start
conPID4.xd_start
conPID4.y_start
conPID4.strict
conPID4.reverseAction
conPID4.reset
conPID4.y_reset
conPID4.addP.y
conPID4.addP.k1
conPID4.addP.k2
conPID4.P.k
conPID4.P.y
conPID4.addPID.k1
conPID4.addPID.k2
conPID4.addPID.k3
conPID4.addPID.u2
conPID4.addPID.y
conPID4.unitTime
conPID4.revAct
conPID4.with_I
conPID4.with_D
conPID4.y_reset_internal
conPID4.addI.k1
conPID4.addI.k2
conPID4.addI.k3
conPID4.addI.u3
conPID4.addI.y
conPID4.addSat.y
conPID4.addSat.k1
conPID4.addSat.k2
conPID4.gainPID.k
conPID4.gainPID.y
conPID4.gainTrack.k
conPID4.limiter.uMax
conPID4.limiter.uMin
conPID4.limiter.strict
conPID4.limiter.limitsAtInit
realExpression11.y
conPID5.controlError
conPID5.controllerType
conPID5.k
conPID5.Ti
conPID5.Td
conPID5.yMax
conPID5.yMin
conPID5.wp
conPID5.wd
conPID5.Ni
conPID5.Nd
conPID5.initType
conPID5.xi_start
conPID5.xd_start
conPID5.y_start
conPID5.strict
conPID5.reverseAction
conPID5.reset
conPID5.y_reset
conPID5.addP.y
conPID5.addP.k1
conPID5.addP.k2
conPID5.P.k
conPID5.P.y
conPID5.addPID.k1
conPID5.addPID.k2
conPID5.addPID.k3
conPID5.addPID.u2
conPID5.addPID.y
conPID5.unitTime
conPID5.revAct
conPID5.with_I
conPID5.with_D
conPID5.y_reset_internal
conPID5.addI.k1
conPID5.addI.k2
conPID5.addI.k3
conPID5.addI.u3
conPID5.addI.y
conPID5.addSat.y
conPID5.addSat.k1
conPID5.addSat.k2
conPID5.gainPID.k
conPID5.gainPID.y
conPID5.gainTrack.k
conPID5.limiter.uMax
conPID5.limiter.uMin
conPID5.limiter.strict
conPID5.limiter.limitsAtInit
conPID6.controlError
conPID6.controllerType
conPID6.k
conPID6.Ti
conPID6.Td
conPID6.yMax
conPID6.yMin
conPID6.wp
conPID6.wd
conPID6.Ni
conPID6.Nd
conPID6.initType
conPID6.xi_start
conPID6.xd_start
conPID6.y_start
conPID6.strict
conPID6.reverseAction
conPID6.reset
conPID6.y_reset
conPID6.addP.y
conPID6.addP.k1
conPID6.addP.k2
conPID6.P.k
conPID6.P.y
conPID6.addPID.k1
conPID6.addPID.k2
conPID6.addPID.k3
conPID6.addPID.u2
conPID6.addPID.y
conPID6.unitTime
conPID6.revAct
conPID6.with_I
conPID6.with_D
conPID6.y_reset_internal
conPID6.addI.k1
conPID6.addI.k2
conPID6.addI.k3
conPID6.addI.u3
conPID6.addI.y
conPID6.addSat.y
conPID6.addSat.k1
conPID6.addSat.k2
conPID6.gainPID.k
conPID6.gainPID.y
conPID6.gainTrack.k
conPID6.limiter.uMax
conPID6.limiter.uMin
conPID6.limiter.strict
conPID6.limiter.limitsAtInit
conPID1.controlError
conPID1.controllerType
conPID1.k
conPID1.Ti
conPID1.Td
conPID1.yMax
conPID1.yMin
conPID1.wp
conPID1.wd
conPID1.Ni
conPID1.Nd
conPID1.initType
conPID1.xi_start
conPID1.xd_start
conPID1.y_start
conPID1.strict
conPID1.reverseAction
conPID1.reset
conPID1.y_reset
conPID1.addP.y
conPID1.addP.k1
conPID1.addP.k2
conPID1.P.k
conPID1.P.y
conPID1.addPID.k1
conPID1.addPID.k2
conPID1.addPID.k3
conPID1.addPID.u2
conPID1.addPID.y
conPID1.unitTime
conPID1.revAct
conPID1.with_I
conPID1.with_D
conPID1.y_reset_internal
conPID1.addI.k1
conPID1.addI.k2
conPID1.addI.k3
conPID1.addI.u3
conPID1.addI.y
conPID1.addSat.y
conPID1.addSat.k1
conPID1.addSat.k2
conPID1.gainPID.k
conPID1.gainPID.y
conPID1.gainTrack.k
conPID1.limiter.uMax
conPID1.limiter.uMin
conPID1.limiter.strict
conPID1.limiter.limitsAtInit
res8.allowFlowReversal
res8.m_flow_nominal
res8.m_flow_small
res8.show_T
res8.dp
res8._m_flow_start
res8._dp_start
res8.homotopyInitialization
res8.from_dp
res8.dp_nominal
res8.linearized
res8.m_flow_turbulent
res8.sta_default.p
res8.sta_default.T
res8.sta_default.X[1]
res8.sta_default.X[2]
res8.eta_default
res8.m_flow_nominal_pos
res8.dp_nominal_pos
res8.deltaM
res8.k
res8.computeFlowResistance
res8.coeff
fan11.vol.dynBal.energyDynamics
fan11.vol.dynBal.massDynamics
fan11.vol.dynBal.substanceDynamics
fan11.vol.dynBal.traceDynamics
fan11.vol.dynBal.p_start
fan11.vol.dynBal.T_start
fan11.vol.dynBal.X_start[1]
fan11.vol.dynBal.X_start[2]
fan11.vol.dynBal.mSenFac
fan11.vol.dynBal.initialize_p
fan11.vol.dynBal.simplify_mWat_flow
fan11.vol.dynBal.nPorts
fan11.vol.dynBal.use_mWat_flow
fan11.vol.dynBal.use_C_flow
fan11.vol.dynBal.Q_flow
fan11.vol.dynBal.medium.d
fan11.vol.dynBal.medium.T
fan11.vol.dynBal.medium.X[2]
fan11.vol.dynBal.medium.u
fan11.vol.dynBal.medium.R
fan11.vol.dynBal.medium.MM
fan11.vol.dynBal.medium.preferredMediumStates
fan11.vol.dynBal.medium.standardOrderComponents
fan11.vol.dynBal.medium.T_degC
fan11.vol.dynBal.medium.p_bar
fan11.vol.dynBal.medium.MMX[1]
fan11.vol.dynBal.medium.MMX[2]
fan11.vol.dynBal.medium.X_air
fan11.vol.dynBal.medium.dT
fan11.vol.dynBal.U
fan11.vol.dynBal.der(U)
fan11.vol.dynBal.m
fan11.vol.dynBal.der(m)
fan11.vol.dynBal.mXi[1]
fan11.vol.dynBal.der(mXi[1])
fan11.vol.dynBal.fluidVolume
fan11.vol.dynBal.CSen
fan11.vol.dynBal.ports_H_flow[1]
fan11.vol.dynBal.ports_H_flow[2]
fan11.vol.dynBal.ports_mXi_flow[1, 1]
fan11.vol.dynBal.ports_mXi_flow[2, 1]
fan11.vol.dynBal.cp_default
fan11.vol.dynBal.rho_start
fan11.vol.dynBal.computeCSen
fan11.vol.dynBal.state_default.p
fan11.vol.dynBal.state_default.T
fan11.vol.dynBal.state_default.X[1]
fan11.vol.dynBal.state_default.X[2]
fan11.vol.dynBal.rho_default
fan11.vol.dynBal.s[1]
fan11.vol.dynBal.hStart
fan11.vol.dynBal._simplify_mWat_flow
fan11.vol.dynBal.mWat_flow_internal
GasRoom.dynBal.energyDynamics
GasRoom.dynBal.massDynamics
GasRoom.dynBal.substanceDynamics
GasRoom.dynBal.traceDynamics
GasRoom.dynBal.p_start
GasRoom.dynBal.T_start
GasRoom.dynBal.X_start[1]
GasRoom.dynBal.X_start[2]
GasRoom.dynBal.mSenFac
GasRoom.dynBal.initialize_p
GasRoom.dynBal.simplify_mWat_flow
GasRoom.dynBal.nPorts
GasRoom.dynBal.use_mWat_flow
GasRoom.dynBal.use_C_flow
GasRoom.dynBal.Q_flow
GasRoom.dynBal.ports[6].m_flow
GasRoom.dynBal.ports[7].m_flow
GasRoom.dynBal.ports[8].m_flow
GasRoom.dynBal.medium.d
GasRoom.dynBal.medium.T
GasRoom.dynBal.medium.X[2]
GasRoom.dynBal.medium.u
GasRoom.dynBal.medium.R
GasRoom.dynBal.medium.MM
GasRoom.dynBal.medium.preferredMediumStates
GasRoom.dynBal.medium.standardOrderComponents
GasRoom.dynBal.medium.T_degC
GasRoom.dynBal.medium.p_bar
GasRoom.dynBal.medium.MMX[1]
GasRoom.dynBal.medium.MMX[2]
GasRoom.dynBal.medium.X_air
GasRoom.dynBal.medium.dT
GasRoom.dynBal.U
GasRoom.dynBal.der(U)
GasRoom.dynBal.m
GasRoom.dynBal.der(m)
GasRoom.dynBal.mXi[1]
GasRoom.dynBal.der(mXi[1])
GasRoom.dynBal.fluidVolume
GasRoom.dynBal.CSen
GasRoom.dynBal.ports_H_flow[1]
GasRoom.dynBal.ports_H_flow[2]
GasRoom.dynBal.ports_H_flow[3]
GasRoom.dynBal.ports_H_flow[4]
GasRoom.dynBal.ports_H_flow[5]
GasRoom.dynBal.ports_H_flow[6]
GasRoom.dynBal.ports_H_flow[7]
GasRoom.dynBal.ports_H_flow[8]
GasRoom.dynBal.ports_mXi_flow[1, 1]
GasRoom.dynBal.ports_mXi_flow[2, 1]
GasRoom.dynBal.ports_mXi_flow[3, 1]
GasRoom.dynBal.ports_mXi_flow[4, 1]
GasRoom.dynBal.ports_mXi_flow[5, 1]
GasRoom.dynBal.ports_mXi_flow[6, 1]
GasRoom.dynBal.ports_mXi_flow[7, 1]
GasRoom.dynBal.ports_mXi_flow[8, 1]
GasRoom.dynBal.cp_default
GasRoom.dynBal.rho_start
GasRoom.dynBal.computeCSen
GasRoom.dynBal.state_default.p
GasRoom.dynBal.state_default.T
GasRoom.dynBal.state_default.X[1]
GasRoom.dynBal.state_default.X[2]
GasRoom.dynBal.rho_default
GasRoom.dynBal.s[1]
GasRoom.dynBal.hStart
GasRoom.dynBal._simplify_mWat_flow
GasRoom.dynBal.mWat_flow_internal
GasRoom1.dynBal.energyDynamics
GasRoom1.dynBal.massDynamics
GasRoom1.dynBal.substanceDynamics
GasRoom1.dynBal.traceDynamics
GasRoom1.dynBal.p_start
GasRoom1.dynBal.T_start
GasRoom1.dynBal.X_start[1]
GasRoom1.dynBal.X_start[2]
GasRoom1.dynBal.mSenFac
GasRoom1.dynBal.initialize_p
GasRoom1.dynBal.simplify_mWat_flow
GasRoom1.dynBal.nPorts
GasRoom1.dynBal.use_mWat_flow
GasRoom1.dynBal.use_C_flow
GasRoom1.dynBal.Q_flow
GasRoom1.dynBal.ports[6].m_flow
GasRoom1.dynBal.ports[7].m_flow
GasRoom1.dynBal.ports[8].m_flow
GasRoom1.dynBal.medium.d
GasRoom1.dynBal.medium.T
GasRoom1.dynBal.medium.X[2]
GasRoom1.dynBal.medium.u
GasRoom1.dynBal.medium.R
GasRoom1.dynBal.medium.MM
GasRoom1.dynBal.medium.preferredMediumStates
GasRoom1.dynBal.medium.standardOrderComponents
GasRoom1.dynBal.medium.T_degC
GasRoom1.dynBal.medium.p_bar
GasRoom1.dynBal.medium.MMX[1]
GasRoom1.dynBal.medium.MMX[2]
GasRoom1.dynBal.medium.X_air
GasRoom1.dynBal.medium.dT
GasRoom1.dynBal.U
GasRoom1.dynBal.der(U)
GasRoom1.dynBal.m
GasRoom1.dynBal.der(m)
GasRoom1.dynBal.mXi[1]
GasRoom1.dynBal.der(mXi[1])
GasRoom1.dynBal.fluidVolume
GasRoom1.dynBal.CSen
GasRoom1.dynBal.ports_H_flow[1]
GasRoom1.dynBal.ports_H_flow[2]
GasRoom1.dynBal.ports_H_flow[3]
GasRoom1.dynBal.ports_H_flow[4]
GasRoom1.dynBal.ports_H_flow[5]
GasRoom1.dynBal.ports_H_flow[6]
GasRoom1.dynBal.ports_H_flow[7]
GasRoom1.dynBal.ports_H_flow[8]
GasRoom1.dynBal.ports_mXi_flow[1, 1]
GasRoom1.dynBal.ports_mXi_flow[2, 1]
GasRoom1.dynBal.ports_mXi_flow[3, 1]
GasRoom1.dynBal.ports_mXi_flow[4, 1]
GasRoom1.dynBal.ports_mXi_flow[5, 1]
GasRoom1.dynBal.ports_mXi_flow[6, 1]
GasRoom1.dynBal.ports_mXi_flow[7, 1]
GasRoom1.dynBal.ports_mXi_flow[8, 1]
GasRoom1.dynBal.cp_default
GasRoom1.dynBal.rho_start
GasRoom1.dynBal.computeCSen
GasRoom1.dynBal.state_default.p
GasRoom1.dynBal.state_default.T
GasRoom1.dynBal.state_default.X[1]
GasRoom1.dynBal.state_default.X[2]
GasRoom1.dynBal.rho_default
GasRoom1.dynBal.s[1]
GasRoom1.dynBal.hStart
GasRoom1.dynBal._simplify_mWat_flow
GasRoom1.dynBal.mWat_flow_internal
GasRoom2.dynBal.energyDynamics
GasRoom2.dynBal.massDynamics
GasRoom2.dynBal.substanceDynamics
GasRoom2.dynBal.traceDynamics
GasRoom2.dynBal.p_start
GasRoom2.dynBal.T_start
GasRoom2.dynBal.X_start[1]
GasRoom2.dynBal.X_start[2]
GasRoom2.dynBal.mSenFac
GasRoom2.dynBal.initialize_p
GasRoom2.dynBal.simplify_mWat_flow
GasRoom2.dynBal.nPorts
GasRoom2.dynBal.use_mWat_flow
GasRoom2.dynBal.use_C_flow
GasRoom2.dynBal.Q_flow
GasRoom2.dynBal.ports[6].m_flow
GasRoom2.dynBal.ports[7].m_flow
GasRoom2.dynBal.ports[8].m_flow
GasRoom2.dynBal.medium.d
GasRoom2.dynBal.medium.T
GasRoom2.dynBal.medium.X[2]
GasRoom2.dynBal.medium.u
GasRoom2.dynBal.medium.R
GasRoom2.dynBal.medium.MM
GasRoom2.dynBal.medium.preferredMediumStates
GasRoom2.dynBal.medium.standardOrderComponents
GasRoom2.dynBal.medium.T_degC
GasRoom2.dynBal.medium.p_bar
GasRoom2.dynBal.medium.MMX[1]
GasRoom2.dynBal.medium.MMX[2]
GasRoom2.dynBal.medium.X_air
GasRoom2.dynBal.medium.dT
GasRoom2.dynBal.U
GasRoom2.dynBal.der(U)
GasRoom2.dynBal.m
GasRoom2.dynBal.der(m)
GasRoom2.dynBal.mXi[1]
GasRoom2.dynBal.der(mXi[1])
GasRoom2.dynBal.fluidVolume
GasRoom2.dynBal.CSen
GasRoom2.dynBal.ports_H_flow[1]
GasRoom2.dynBal.ports_H_flow[2]
GasRoom2.dynBal.ports_H_flow[3]
GasRoom2.dynBal.ports_H_flow[4]
GasRoom2.dynBal.ports_H_flow[5]
GasRoom2.dynBal.ports_H_flow[6]
GasRoom2.dynBal.ports_H_flow[7]
GasRoom2.dynBal.ports_H_flow[8]
GasRoom2.dynBal.ports_mXi_flow[1, 1]
GasRoom2.dynBal.ports_mXi_flow[2, 1]
GasRoom2.dynBal.ports_mXi_flow[3, 1]
GasRoom2.dynBal.ports_mXi_flow[4, 1]
GasRoom2.dynBal.ports_mXi_flow[5, 1]
GasRoom2.dynBal.ports_mXi_flow[6, 1]
GasRoom2.dynBal.ports_mXi_flow[7, 1]
GasRoom2.dynBal.ports_mXi_flow[8, 1]
GasRoom2.dynBal.cp_default
GasRoom2.dynBal.rho_start
GasRoom2.dynBal.computeCSen
GasRoom2.dynBal.state_default.p
GasRoom2.dynBal.state_default.T
GasRoom2.dynBal.state_default.X[1]
GasRoom2.dynBal.state_default.X[2]
GasRoom2.dynBal.rho_default
GasRoom2.dynBal.s[1]
GasRoom2.dynBal.hStart
GasRoom2.dynBal._simplify_mWat_flow
GasRoom2.dynBal.mWat_flow_internal
conPID.addD.y
conPID.addD.k1
conPID.addD.k2
conPID.I.y
conPID.I.der(y)
conPID.I.k
conPID.I.initType
conPID.I.y_start
conPID.I.reset
conPID.I.y_reset
conPID.I.y_reset_internal
conPID.I.trigger_internal
conPID.D.k
conPID.D.T
conPID.D.initType
conPID.D.x_start
conPID.D.y_start
conPID.D.x
conPID.D.der(x)
conPID.D.zeroGain
conPID2.addD.y
conPID2.addD.k1
conPID2.addD.k2
conPID2.I.y
conPID2.I.der(y)
conPID2.I.k
conPID2.I.initType
conPID2.I.y_start
conPID2.I.reset
conPID2.I.y_reset
conPID2.I.y_reset_internal
conPID2.I.trigger_internal
conPID2.D.k
conPID2.D.T
conPID2.D.initType
conPID2.D.x_start
conPID2.D.y_start
conPID2.D.x
conPID2.D.der(x)
conPID2.D.zeroGain
conPID4.addD.y
conPID4.addD.k1
conPID4.addD.k2
conPID4.I.y
conPID4.I.der(y)
conPID4.I.k
conPID4.I.initType
conPID4.I.y_start
conPID4.I.reset
conPID4.I.y_reset
conPID4.I.y_reset_internal
conPID4.I.trigger_internal
conPID4.D.k
conPID4.D.T
conPID4.D.initType
conPID4.D.x_start
conPID4.D.y_start
conPID4.D.x
conPID4.D.der(x)
conPID4.D.zeroGain
conPID5.addD.y
conPID5.addD.k1
conPID5.addD.k2
conPID5.I.y
conPID5.I.der(y)
conPID5.I.k
conPID5.I.initType
conPID5.I.y_start
conPID5.I.reset
conPID5.I.y_reset
conPID5.I.y_reset_internal
conPID5.I.trigger_internal
conPID5.D.k
conPID5.D.T
conPID5.D.initType
conPID5.D.x_start
conPID5.D.y_start
conPID5.D.x
conPID5.D.der(x)
conPID5.D.zeroGain
conPID6.addD.y
conPID6.addD.k1
conPID6.addD.k2
conPID6.I.y
conPID6.I.der(y)
conPID6.I.k
conPID6.I.initType
conPID6.I.y_start
conPID6.I.reset
conPID6.I.y_reset
conPID6.I.y_reset_internal
conPID6.I.trigger_internal
conPID6.D.k
conPID6.D.T
conPID6.D.initType
conPID6.D.x_start
conPID6.D.y_start
conPID6.D.x
conPID6.D.der(x)
conPID6.D.zeroGain
conPID1.addD.y
conPID1.addD.k1
conPID1.addD.k2
conPID1.I.y
conPID1.I.der(y)
conPID1.I.k
conPID1.I.initType
conPID1.I.y_start
conPID1.I.reset
conPID1.I.y_reset
conPID1.I.y_reset_internal
conPID1.I.trigger_internal
conPID1.D.k
conPID1.D.T
conPID1.D.initType
conPID1.D.x_start
conPID1.D.y_start
conPID1.D.x
conPID1.D.der(x)
conPID1.D.zeroGain

double initialValue(2417,6)
 -1 3.9276180000000000E+007       0                       0                
  1   280   # G_p
 -1 1.0000000000000000E+009       0                       0                
  1   280   # C_x
 -1 9.4999999999999996E-001       0                       0                
  1   280   # eta_z
 -1 9.9970000000000003E-001       0                       0                
  1   280   # eta_hp
 -1       0                       0                       0                
  1   280   # D
 -1       0                       0                       0                
  2   280   # C1
  0       0                       0                       0                
  3   256   # der(C1)
 -1       0                       0                       0                
  2   280   # C2
  0       0                       0                       0                
  3   256   # der(C2)
 -1       0                       0                       0                
  2   280   # C3
  0       0                       0                       0                
  3   256   # der(C3)
  0       0                       0                       0                
  6   256   # C_s
  0       0                       0                       0                
  6   256   # C_h
  0       0                       0                       0                
  6   256   # Q_h
  0       0                       0                       0                
  6   256   # G_s_1
  0       0                       0                       0                
  6   256   # G_s_2
  0       0                       0                       0                
  6   256   # G_s_3
  0       1                       0                       0                
  6   258   # sinAir1.nPorts
  0       0                       0                       0                
  6   257   # sinAir1.verifyInputs
  0       0                 -100000                 9.9999999999999995E+059
  6   388   # sinAir1.ports[1].m_flow
  0 4.5300945000000000E+004 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # sinAir1.ports[1].h_outflow
  0       3                       1                       3                
  6  1282   # sinAir1.flowDirection
  0       0                       0                       0                
  6  1280   # sinAir1.X_in_internal[1]
  0       0                       0                       0                
  6  1280   # sinAir1.X_in_internal[2]
  0       0                       0                       0                
  6   769   # sinAir1.use_X_in
  0       0                       0                       0                
  6   769   # sinAir1.use_Xi_in
  0       0                       0                       0                
  6   769   # sinAir1.use_C_in
 -1 1.0000000000000000E-002       0                       1                
  1   280   # sinAir1.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1   280   # sinAir1.X[2]
  0       0                       0                       0                
  6   769   # sinAir1.use_p_in
 -1  100000                       0                 1.0000000000000000E+008
  1   280   # sinAir1.p
  0       0                       0                       0                
  6   769   # sinAir1.use_T_in
 -1 2.9314999999999998E+002       1                   10000                
  1   280   # sinAir1.T
  0       0                       0                       0                
  6  1281   # sinAir1.checkWaterPressure
  0       1                       0                       0                
  6  1281   # sinAir1.checkAirPressure
  0       1                       1                       4                
  6   258   # fan11.energyDynamics
  0       1                       1                       4                
  6   258   # fan11.massDynamics
  0       1                       1                       4                
  6   258   # fan11.substanceDynamics
  0       1                       1                       4                
  6   258   # fan11.traceDynamics
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1   280   # fan11.p_start
 -1 2.9314999999999998E+002       1                   10000                
  1   280   # fan11.T_start
 -1 1.0000000000000000E-002       0                       1                
  1   280   # fan11.X_start[1]
 -1 9.8999999999999999E-001       0                       1                
  1   280   # fan11.X_start[2]
  0       1                       1                 1.0000000000000000E+100
  6   256   # fan11.mSenFac
  0       1                       0                       0                
  6   257   # fan11.allowFlowReversal
  0       0                 -100000                  100000                
  6   388   # fan11.port_a.m_flow
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   260   # fan11.port_a.p
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # fan11.port_a.h_outflow
  0       0                       0                       1                
  6   260   # fan11.port_a.Xi_outflow[1]
  0       0                 -100000                  100000                
  6   388   # fan11.port_b.m_flow
  0       0                       0                 1.0000000000000000E+008
  6   260   # fan11.port_b.p
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # fan11.port_b.h_outflow
  0       0                       0                       1                
  6   260   # fan11.port_b.Xi_outflow[1]
  0 7.7000000000000002E-001 9.9999999999999997E-061 1.0000000000000000E+100
  6   256   # fan11.m_flow_nominal
  0 7.7000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # fan11.m_flow_small
  0       0                       0                       0                
  6   257   # fan11.show_T
  0       0                       0                       0                
  6   256   # fan11.dp
  0       0                       0                       0                
  6  1280   # fan11._m_flow_start
  0       0                       0                       0                
  6  1280   # fan11._dp_start
  0       0                       0                 1.0000000000000000E+100
  6   256   # fan11.per.pressure.V_flow[1]
  0       0                       0                 1.0000000000000000E+100
  6   256   # fan11.per.pressure.V_flow[2]
  0       0                       0                 1.0000000000000000E+100
  6   256   # fan11.per.pressure.dp[1]
  0       0                       0                 1.0000000000000000E+100
  6   256   # fan11.per.pressure.dp[2]
 -1       0                       0                       0                
  1   281   # fan11.per.use_powerCharacteristic
 -1       0                       0                 1.0000000000000000E+100
  1   280   # fan11.per.hydraulicEfficiency.V_flow[1]
 -1 6.9999999999999996E-001       0                       1                
  1   280   # fan11.per.hydraulicEfficiency.eta[1]
 -1       0                       0                 1.0000000000000000E+100
  1   280   # fan11.per.motorEfficiency.V_flow[1]
 -1 6.9999999999999996E-001       0                       1                
  1   280   # fan11.per.motorEfficiency.eta[1]
 -1       0                       0                 1.0000000000000000E+100
  1   280   # fan11.per.power.V_flow[1]
 -1       0                       0                 1.0000000000000000E+100
  1   280   # fan11.per.power.P[1]
 -1       1                       0                       0                
  1   281   # fan11.per.motorCooledByFluid
 -1       1                       0                 1.0000000000000000E+100
  1   280   # fan11.per.speed_nominal
  0       0                       0                 1.0000000000000000E+100
  6   256   # fan11.per.constantSpeed
  0       0                       0                 1.0000000000000000E+100
  6   256   # fan11.per.speeds[1]
 -1    1500                       0                       0                
  1   280   # fan11.per.speed_rpm_nominal
  0       0                       0                       0                
  6   256   # fan11.per.constantSpeed_rpm
  0       0                       0                       0                
  6   256   # fan11.per.speeds_rpm[1]
  0       0                       0                       0                
  6   257   # fan11.per.havePressureCurve
  0       3                       1                       3                
  6   258   # fan11.inputType
  0 7.7000000000000002E-001       0                       0                
  6   256   # fan11.constInput
  0 7.7000000000000002E-001       0                       0                
  6   256   # fan11.stageInputs[1]
  0       0                       0                       0                
  6   257   # fan11.computePowerUsingSimilarityLaws
  0       0                       0                       0                
  6   257   # fan11.addPowerToMedium
 -1       0                       0                       0                
  1   281   # fan11.nominalValuesDefineDefaultPressureCurve
 -1       1                       0                       0                
  1   280   # fan11.tau
  0       1                       0                       0                
  6   257   # fan11.use_inputFilter
 -1      30                       0                       0                
  1   280   # fan11.riseTime
  0       4                       1                       4                
  6   258   # fan11.init
 -1       0                       0                       1                
  1   280   # fan11.y_start
  0       1                       0                       0                
  6   256   # fan11.y_actual
  0       0                       0                       0                
  6   256   # fan11.P
  0     300                       1                   10000                
  6   260   # fan11.heatPort.T
  0       0                       0                       0                
  6   388   # fan11.heatPort.Q_flow
  0       0                       0                       0                
  6   256   # fan11.VMachine_flow
  0       0                       0                       0                
  6   256   # fan11.dpMachine
  0       0                       0                       0                
  6   256   # fan11.eta
  0       0                       0                       0                
  6   256   # fan11.etaHyd
  0       0                       0                       0                
  6   256   # fan11.etaMot
  0       0                       0                       0                
  6  1280   # fan11._VMachine_flow
  0       2                       1                       3                
  6  1282   # fan11.preVar
  0       0                       0                       0                
  6  1281   # fan11.speedIsInput
  0       2                       0                       0                
  6  1282   # fan11.nOri
  0       1                       0                       0                
  6  1281   # fan11.haveVMax
  0 6.4166666666666672E-001       0                       0                
  6  1280   # fan11.V_flow_max
  0 1.2000000000000000E+000       0                 1.0000000000000000E+100
  6  1280   # fan11.rho_default
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # fan11.sta_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # fan11.sta_start.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # fan11.sta_start.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # fan11.sta_start.X[2]
  0       0                       0                       0                
  6  1280   # fan11.h_outflow_start
  0       1                       1                       4                
  6  1282   # fan11.vol.energyDynamics
  0       1                       1                       4                
  6  1282   # fan11.vol.massDynamics
  0       1                       1                       4                
  6  1282   # fan11.vol.substanceDynamics
  0       1                       1                       4                
  6  1282   # fan11.vol.traceDynamics
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # fan11.vol.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # fan11.vol.T_start
  0       0                       0                       1                
  6  1280   # fan11.vol.X_start[1]
  0       0                       0                       1                
  6  1280   # fan11.vol.X_start[2]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # fan11.vol.mSenFac
  0       1                       0                       0                
  6   769   # fan11.vol.initialize_p
  0       1                       0                       0                
  6  1281   # fan11.vol.prescribedHeatFlowRate
  0       1                       0                       0                
  6  1281   # fan11.vol.simplify_mWat_flow
  0 7.7000000000000002E-001       0                 1.0000000000000000E+100
  6  1280   # fan11.vol.m_flow_nominal
  0       2                       0                       0                
  6  1282   # fan11.vol.nPorts
  0 7.7000000000000001E-005       0                 1.0000000000000000E+100
  6  1280   # fan11.vol.m_flow_small
  0       1                       0                       0                
  6  1281   # fan11.vol.allowFlowReversal
  0       0                       0                       0                
  6  1280   # fan11.vol.V
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan11.vol.rho_start
  0 1.0000000000000000E-002       0                       1                
  6  1280   # _GlobalScope.Modelica.Media.Interfaces.PartialMixtureMedium.X_default[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # _GlobalScope.Modelica.Media.Interfaces.PartialMixtureMedium.X_default[2]
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # fan11.vol.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # fan11.vol.state_default.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # fan11.vol.state_default.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # fan11.vol.state_default.X[2]
  0 1.2000000000000000E+000       0                 1.0000000000000000E+100
  6  1280   # fan11.vol.rho_default
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # fan11.vol.state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # fan11.vol.state_start.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # fan11.vol.state_start.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # fan11.vol.state_start.X[2]
  0       0                       0                       0                
  6  1281   # fan11.vol.useSteadyStateTwoPort
  0       0                       0                       0                
  6  1412   # fan11.vol.preTem.port.Q_flow
  0       0                       0                       0                
  6  1280   # fan11.vol.heaFloSen.Q_flow
  0       0                       0                       0                
  6  1412   # fan11.vol.heaFloSen.port_a.Q_flow
  0       0                       0                       0                
  6  1412   # fan11.vol.heaFloSen.port_b.Q_flow
  0       0                       0                       0                
  6  1281   # fan11.vol.use_C_flow
  0       0                       0                       0                
  6  1412   # fan11.vol.heatPort.Q_flow
  0       0                       0                       0                
  6  1280   # fan11.vol.tau
  0       0                       0                       0                
  6  1280   # fan11.vol.V_nominal
  0       1                       1                       4                
  6  1282   # fan11.filter.analogFilter
  0       1                       1                       4                
  6  1282   # fan11.filter.filterType
  0       2                       1                 1.0000000000000000E+100
  6  1282   # fan11.filter.order
  0       0                       0                       0                
  6  1280   # fan11.filter.f_cut
 -1       1                       0                       0                
  1  1304   # fan11.filter.gain
 -1 5.0000000000000000E-001       0                       0                
  1  1304   # fan11.filter.A_ripple
 -1       0                       0                       0                
  1  1304   # fan11.filter.f_min
 -1       1                       0                       0                
  1  1305   # fan11.filter.normalized
  0       4                       1                       4                
  6  1282   # fan11.filter.init
  0       2                       0                       0                
  6  1282   # fan11.filter.nx
 -1       0                       0                       0                
  1  1304   # fan11.filter.x_start[1]
 -1       0                       0                       0                
  1  1304   # fan11.filter.x_start[2]
  0       0                       0                       0                
  6  1280   # fan11.filter.y_start
  0 7.7000000000000002E-001       0                       0                
  6  1280   # fan11.filter.u_nominal
 -1       0                       0                       0                
  2  1296   # fan11.filter.x[1]
  0       0                       0                       0                
  3  1280   # fan11.filter.der(x[1])
 -1       0                       0                       0                
  2  1296   # fan11.filter.x[2]
  0       0                       0                       0                
  3  1280   # fan11.filter.der(x[2])
  0       2                       0                       0                
  6  1282   # fan11.filter.ncr
  0       0                       0                       0                
  6  1282   # fan11.filter.nc0
  0       0                       0                       0                
  6  1282   # fan11.filter.na
  0       2                       0                       0                
  6  1282   # fan11.filter.nr
  0       0                       0                       0                
  6  1280   # fan11.filter.cr[1]
  0       0                       0                       0                
  6  1280   # fan11.filter.cr[2]
  0       0                       0                       0                
  6  1280   # fan11.filter.r[1]
  0       0                       0                       0                
  6  1280   # fan11.filter.r[2]
  0       0                       0                       0                
  6  1280   # fan11.filter.uu[1]
  0       1                       0                       0                
  6  1281   # fan11.preSou.allowFlowReversal
  0 4.5300945000000000E+004 -1.0000000000000000E+010 1.0000000000000000E+010
  6  1284   # fan11.preSou.port_a.h_outflow
  0       0                       0                       1                
  6  1284   # fan11.preSou.port_a.Xi_outflow[1]
 -1       0                       0                       0                
  1  1304   # fan11.preSou.dp_start
  0       0                 -100000                  100000                
  6  1280   # fan11.preSou.m_flow_start
  0 7.7000000000000001E-005 -100000                  100000                
  6  1280   # fan11.preSou.m_flow_small
  0       0                       0                       0                
  6  1281   # fan11.preSou.show_T
  0       1                       0                       0                
  6  1281   # fan11.preSou.show_V_flow
  0       0                       0                       0                
  6  1280   # fan11.preSou.V_flow
  0       1                       0                       0                
  6  1281   # fan11.preSou.control_m_flow
  0       0                       0                       0                
  6  1281   # fan11.preSou.control_dp
  0       0                       0                       0                
  6  1280   # fan11.preSou.dp_internal
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan11.rho_inlet.y
  0       1                       0                       0                
  6  1281   # fan11.senMasFlo.allowFlowReversal
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan11.senMasFlo.m_flow_nominal
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan11.senMasFlo.m_flow_small
  0 1.0000000000000000E-002       0                       1                
  6  1280   # _GlobalScope.Modelica.Media.Interfaces.PartialMixtureMedium.X_default_Unique15[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # _GlobalScope.Modelica.Media.Interfaces.PartialMixtureMedium.X_default_Unique15[2]
  0       0                       0                  100000                
  6  1412   # fan11.senRelPre.port_a.m_flow
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6  1284   # fan11.senRelPre.port_a.h_outflow
  0       0                       0                       1                
  6  1284   # fan11.senRelPre.port_a.Xi_outflow[1]
  0       0                       0                  100000                
  6  1412   # fan11.senRelPre.port_b.m_flow
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6  1284   # fan11.senRelPre.port_b.h_outflow
  0       0                       0                       1                
  6  1284   # fan11.senRelPre.port_b.Xi_outflow[1]
  0       0                       0                       0                
  6  1280   # fan11.senRelPre.p_rel
  0       1                       0                       0                
  6   769   # fan11.eff.homotopyInitialization
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan11.eff.per.pressure.V_flow[1]
  0 1.2833333333333334E+000       0                 1.0000000000000000E+100
  6  1280   # fan11.eff.per.pressure.V_flow[2]
  0    3800                       0                 1.0000000000000000E+100
  6  1280   # fan11.eff.per.pressure.dp[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan11.eff.per.pressure.dp[2]
  0       0                       0                       0                
  6  1281   # fan11.eff.per.use_powerCharacteristic
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan11.eff.per.hydraulicEfficiency.V_flow[1]
  0       0                       0                       1                
  6  1280   # fan11.eff.per.hydraulicEfficiency.eta[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan11.eff.per.motorEfficiency.V_flow[1]
  0       0                       0                       1                
  6  1280   # fan11.eff.per.motorEfficiency.eta[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan11.eff.per.power.V_flow[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan11.eff.per.power.P[1]
  0       0                       0                       0                
  6  1281   # fan11.eff.per.motorCooledByFluid
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan11.eff.per.speed_nominal
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan11.eff.per.constantSpeed
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan11.eff.per.speeds[1]
 -1    1500                       0                       0                
  1  1304   # fan11.eff.per.speed_rpm_nominal
  0       0                       0                       0                
  6  1280   # fan11.eff.per.constantSpeed_rpm
  0       0                       0                       0                
  6  1280   # fan11.eff.per.speeds_rpm[1]
  0       1                       0                       0                
  6  1281   # fan11.eff.per.havePressureCurve
  0       2                       1                       3                
  6  1282   # fan11.eff.preVar
  0       0                       0                       0                
  6  1281   # fan11.eff.computePowerUsingSimilarityLaws
  0 1.2833333333333334E+000       0                       0                
  6  1280   # fan11.eff.V_flow_nominal
  0 1.2000000000000000E+000       0                 1.0000000000000000E+100
  6  1280   # fan11.eff.rho_default
  0       1                       0                       0                
  6  1281   # fan11.eff.haveVMax
  0 6.4166666666666672E-001       0                       0                
  6  1280   # fan11.eff.V_flow_max
  0       2                       1                 1.0000000000000000E+100
  6  1282   # fan11.eff.nOri
  0       1                       0                       0                
  6  1280   # fan11.eff.y_out
  0       0                       0                       0                
  6  1280   # fan11.eff.WFlo
  0       1                       0                       0                
  6  1280   # fan11.eff.r_N
  0 6.4166666666666672E-001       0                       0                
  6  1280   # fan11.eff.r_V
  0       0                       0                       0                
  6  1281   # fan11.eff.preSpe
  0       1                       0                       0                
  6  1281   # fan11.eff.prePre
  0       0                       0                       0                
  6  1280   # fan11.eff.motDer[1]
  0       0                       0                       0                
  6  1280   # fan11.eff.hydDer[1]
  0    3800                       0                       0                
  6  1280   # fan11.eff.dpMax
  0 5.0000000000000003E-002       0                       0                
  6  1280   # fan11.eff.delta
  0 1.4805194805194806E+000       0                 1.0000000000000000E+100
  6  1280   # fan11.eff.kRes
  0       1                       0                       0                
  6  1282   # fan11.eff.curve
  0       2                       0                       0                
  6  1282   # fan11.eff.pCur1.n
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan11.eff.pCur1.V_flow[1]
  0 1.2833333333333334E+000       0                 1.0000000000000000E+100
  6  1280   # fan11.eff.pCur1.V_flow[2]
  0    3800                       0                 1.0000000000000000E+100
  6  1280   # fan11.eff.pCur1.dp[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan11.eff.pCur1.dp[2]
  0       3                       0                       0                
  6  1282   # fan11.eff.pCur2.n
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan11.eff.pCur2.V_flow[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan11.eff.pCur2.V_flow[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan11.eff.pCur2.V_flow[3]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan11.eff.pCur2.dp[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan11.eff.pCur2.dp[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan11.eff.pCur2.dp[3]
  0       4                       0                       0                
  6  1282   # fan11.eff.pCur3.n
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan11.eff.pCur3.V_flow[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan11.eff.pCur3.V_flow[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan11.eff.pCur3.V_flow[3]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan11.eff.pCur3.V_flow[4]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan11.eff.pCur3.dp[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan11.eff.pCur3.dp[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan11.eff.pCur3.dp[3]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan11.eff.pCur3.dp[4]
  0       0                       0                       0                
  6  1280   # fan11.eff.preDer1[1]
  0       0                       0                       0                
  6  1280   # fan11.eff.preDer1[2]
  0       0                       0                       0                
  6  1280   # fan11.eff.preDer2[1]
  0       0                       0                       0                
  6  1280   # fan11.eff.preDer2[2]
  0       0                       0                       0                
  6  1280   # fan11.eff.preDer2[3]
  0       0                       0                       0                
  6  1280   # fan11.eff.preDer3[1]
  0       0                       0                       0                
  6  1280   # fan11.eff.preDer3[2]
  0       0                       0                       0                
  6  1280   # fan11.eff.preDer3[3]
  0       0                       0                       0                
  6  1280   # fan11.eff.preDer3[4]
  0       0                       0                       0                
  6  1280   # fan11.eff.powDer[1]
  0       1                       0                       0                
  6  1281   # fan11.eff.haveMinimumDecrease
  0       1                       0                       0                
  6  1281   # fan11.eff.haveDPMax
  0    1900                       0                 1.0000000000000000E+100
  6   256   # fan11.dp_nominal
 -1       0                       0                 1.0000000000000000E+100
  1   280   # fan11.m_flow_start
  0 7.7000000000000002E-001       0                       0                
  6   256   # fan11.constantMassFlowRate
  0 7.7000000000000002E-001       0                       0                
  6   256   # fan11.massFlowRates[1]
  0       1                       0                       0                
  6   257   # damExp.allowFlowReversal
  0       0                 -100000                  100000                
  6   388   # damExp.port_a.m_flow
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   260   # damExp.port_a.p
  0 4.5300945000000000E+004 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # damExp.port_a.h_outflow
  0       0                       0                       1                
  6   260   # damExp.port_a.Xi_outflow[1]
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   260   # damExp.port_b.p
  0 4.5300945000000000E+004 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # damExp.port_b.h_outflow
  0       0                       0                       1                
  6   260   # damExp.port_b.Xi_outflow[1]
  0 2.3699999999999999E-001       0                       0                
  6   256   # damExp.m_flow_nominal
  0 2.3700000000000000E-005       0                 1.0000000000000000E+100
  6   256   # damExp.m_flow_small
  0       0                       0                       0                
  6   257   # damExp.show_T
  0       0                       0                       0                
  6   256   # damExp.dp
  0       0                       0                       0                
  6  1280   # damExp._m_flow_start
  0       0                       0                       0                
  6  1280   # damExp._dp_start
  0       1                       0                       0                
  6   769   # damExp.homotopyInitialization
  0       0                       0                       0                
  6   257   # damExp.from_dp
  0     100                       0                       0                
  6   256   # damExp.dp_nominal
  0       0                       0                       0                
  6   257   # damExp.linearized
  0       0                       0                 1.0000000000000000E+100
  6   256   # damExp.m_flow_turbulent
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # damExp.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # damExp.sta_default.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # damExp.sta_default.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # damExp.sta_default.X[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # damExp.eta_default
  0 2.3699999999999999E-001       0                       0                
  6  1280   # damExp.m_flow_nominal_pos
  0     100                       0                       0                
  6  1280   # damExp.dp_nominal_pos
  0       1                       0                       0                
  6   257   # damExp.use_inputFilter
 -1     100                       0                       0                
  1   280   # damExp.riseTime
  0       2                       1                 1.0000000000000000E+100
  6   258   # damExp.order
  0       4                       1                       4                
  6   258   # damExp.init
 -1       1                       0                       0                
  1   280   # damExp.y_start
  0       0                       0                       1                
  6   256   # damExp.y
  0       0                       0                       0                
  6   256   # damExp.y_actual
  0       0                       0                       0                
  6  1281   # damExp.casePreInd
  0       1                       1                       4                
  6  1282   # damExp.filter.analogFilter
  0       1                       1                       4                
  6  1282   # damExp.filter.filterType
  0       2                       1                 1.0000000000000000E+100
  6  1282   # damExp.filter.order
  0       0                       0                       0                
  6  1280   # damExp.filter.f_cut
 -1       1                       0                       0                
  1  1304   # damExp.filter.gain
 -1 5.0000000000000000E-001       0                       0                
  1  1304   # damExp.filter.A_ripple
 -1       0                       0                       0                
  1  1304   # damExp.filter.f_min
 -1       1                       0                       0                
  1  1305   # damExp.filter.normalized
  0       4                       1                       4                
  6  1282   # damExp.filter.init
  0       2                       0                       0                
  6  1282   # damExp.filter.nx
 -1       0                       0                       0                
  1  1304   # damExp.filter.x_start[1]
 -1       0                       0                       0                
  1  1304   # damExp.filter.x_start[2]
  0       0                       0                       0                
  6  1280   # damExp.filter.y_start
 -1       1                       0                       0                
  1  1304   # damExp.filter.u_nominal
 -1       0                       0                       0                
  2  1296   # damExp.filter.x[1]
  0       0                       0                       0                
  3  1280   # damExp.filter.der(x[1])
 -1       0                       0                       0                
  2  1296   # damExp.filter.x[2]
  0       0                       0                       0                
  3  1280   # damExp.filter.der(x[2])
  0       2                       0                       0                
  6  1282   # damExp.filter.ncr
  0       0                       0                       0                
  6  1282   # damExp.filter.nc0
  0       0                       0                       0                
  6  1282   # damExp.filter.na
  0       2                       0                       0                
  6  1282   # damExp.filter.nr
  0       0                       0                       0                
  6  1280   # damExp.filter.cr[1]
  0       0                       0                       0                
  6  1280   # damExp.filter.cr[2]
  0       0                       0                       0                
  6  1280   # damExp.filter.r[1]
  0       0                       0                       0                
  6  1280   # damExp.filter.r[2]
  0       0                       0                       0                
  6  1280   # damExp.filter.uu[1]
  0     100                       0                       0                
  6   256   # damExp.dpDamper_nominal
  0       0                       0                       0                
  6   256   # damExp.dpFixed_nominal
 -1       1                       0                       0                
  1   281   # damExp.use_deltaM
 -1 2.9999999999999999E-001       0                       0                
  1   280   # damExp.deltaM
  0       0                       0                       0                
  6   256   # damExp.v_nominal
  0       0                       0                       0                
  6   256   # damExp.A
 -1       0                       0                       0                
  1   281   # damExp.roundDuct
 -1    4000                       0                       0                
  1   280   # damExp.ReC
 -1 -1.5100000000000000E+000       0                       0                
  1   280   # damExp.a
 -1 9.4499999999999993E+000       0                       0                
  1   280   # damExp.b
 -1 1.6666666666666666E-001       0                       0                
  1   280   # damExp.yL
 -1 6.1111111111111116E-001       0                       0                
  1   280   # damExp.yU
  0       0                       0                 1.0000000000000000E+100
  6   256   # damExp.k0
 -1 4.5000000000000001E-001       0                 1.0000000000000000E+100
  1   280   # damExp.k1
 -1 1.0000000000000000E-004 1.0000000000000000E-010       1                
  1   280   # damExp.l
  0       1                       0                       0                
  6   257   # damExp.use_constant_density
  0 9.9999999999999995E+059       0                       0                
  6   256   # damExp.kFixed
  0       0                       0                       0                
  6   256   # damExp.kDam
  0       1                       0                  100000                
  6  1280   # damExp.rho_default
  0       0                       0                       0                
  6  1280   # damExp.facRouDuc
  0       0                       0                       0                
  6  1280   # damExp.kL
  0       0                       0                       0                
  6  1280   # damExp.kU
  0       0                       0                       0                
  6  1280   # damExp.cL[1]
  0       0                       0                       0                
  6  1280   # damExp.cL[2]
  0       0                       0                       0                
  6  1280   # damExp.cL[3]
  0       0                       0                       0                
  6  1280   # damExp.cU[1]
  0       0                       0                       0                
  6  1280   # damExp.cU[2]
  0       0                       0                       0                
  6  1280   # damExp.cU[3]
  0       0                       0                       0                
  6  1280   # damExp.kDamMax
  0       0                       0                       0                
  6  1280   # damExp.kTotMax
  0       0                       0                       0                
  6  1280   # damExp.kDamMin
  0       0                       0                       0                
  6  1280   # damExp.kTotMin
  0       2                       1                       4                
  6   258   # GasRoom.energyDynamics
  0       2                       1                       4                
  6   258   # GasRoom.massDynamics
  0       2                       1                       4                
  6   258   # GasRoom.substanceDynamics
  0       2                       1                       4                
  6   258   # GasRoom.traceDynamics
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1   280   # GasRoom.p_start
 -1 2.9314999999999998E+002       1                   10000                
  1   280   # GasRoom.T_start
 -1 1.0000000000000000E-002       0                       1                
  1   280   # GasRoom.X_start[1]
 -1 9.8999999999999999E-001       0                       1                
  1   280   # GasRoom.X_start[2]
  0       1                       1                 1.0000000000000000E+100
  6   256   # GasRoom.mSenFac
  0       1                       0                       0                
  6   769   # GasRoom.initialize_p
  0       0                       0                       0                
  6   257   # GasRoom.prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # GasRoom.simplify_mWat_flow
 -1      10                       0                 1.0000000000000000E+100
  1   280   # GasRoom.m_flow_nominal
  0       8                       0                       0                
  6   258   # GasRoom.nPorts
  0       0                       0                 1.0000000000000000E+100
  6   256   # GasRoom.m_flow_small
  0       1                       0                       0                
  6   257   # GasRoom.allowFlowReversal
 -1 1.7820000000000000E+001       0                       0                
  1   280   # GasRoom.V
  0       0                 -100000                  100000                
  6   388   # GasRoom.ports[2].m_flow
  0       0                 -100000                  100000                
  6   388   # GasRoom.ports[3].m_flow
  0       0                 -100000                       0                
  6   388   # GasRoom.ports[6].m_flow
  0       0                 -100000                       0                
  6   388   # GasRoom.ports[7].m_flow
  0       0                 -100000                       0                
  6   388   # GasRoom.ports[8].m_flow
  0     300                       1                   10000                
  6   256   # GasRoom.T
  0       0                       0                 1.0000000000000000E+100
  6  1280   # GasRoom.rho_start
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # GasRoom.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # GasRoom.state_default.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # GasRoom.state_default.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # GasRoom.state_default.X[2]
  0 1.2000000000000000E+000       0                 1.0000000000000000E+100
  6  1280   # GasRoom.rho_default
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # GasRoom.state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # GasRoom.state_start.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # GasRoom.state_start.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # GasRoom.state_start.X[2]
  0       0                       0                       0                
  6  1281   # GasRoom.useSteadyStateTwoPort
  0       0                       0                       0                
  6  1412   # GasRoom.preTem.port.Q_flow
  0       0                       0                       0                
  6  1280   # GasRoom.heaFloSen.Q_flow
  0       0                       0                       0                
  6  1412   # GasRoom.heaFloSen.port_a.Q_flow
  0       0                       0                       0                
  6  1412   # GasRoom.heaFloSen.port_b.Q_flow
  0       0                       0                       0                
  6   257   # GasRoom.use_C_flow
  0       0                       0                       0                
  6   388   # GasRoom.heatPort.Q_flow
  0       1                       0                       0                
  6   257   # damExp1.allowFlowReversal
  0 4.5300945000000000E+004 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # damExp1.port_a.h_outflow
  0       0                       0                       1                
  6   260   # damExp1.port_a.Xi_outflow[1]
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   260   # damExp1.port_b.p
  0 2.3499999999999999E-001       0                       0                
  6   256   # damExp1.m_flow_nominal
  0 2.3499999999999999E-005       0                 1.0000000000000000E+100
  6   256   # damExp1.m_flow_small
  0       0                       0                       0                
  6   257   # damExp1.show_T
  0       0                       0                       0                
  6   256   # damExp1.dp
  0       0                       0                       0                
  6  1280   # damExp1._m_flow_start
  0       0                       0                       0                
  6  1280   # damExp1._dp_start
  0       1                       0                       0                
  6   769   # damExp1.homotopyInitialization
  0       0                       0                       0                
  6   257   # damExp1.from_dp
  0     100                       0                       0                
  6   256   # damExp1.dp_nominal
  0       0                       0                       0                
  6   257   # damExp1.linearized
  0       0                       0                 1.0000000000000000E+100
  6   256   # damExp1.m_flow_turbulent
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # damExp1.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # damExp1.sta_default.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # damExp1.sta_default.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # damExp1.sta_default.X[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # damExp1.eta_default
  0 2.3499999999999999E-001       0                       0                
  6  1280   # damExp1.m_flow_nominal_pos
  0     100                       0                       0                
  6  1280   # damExp1.dp_nominal_pos
  0       1                       0                       0                
  6   257   # damExp1.use_inputFilter
 -1     100                       0                       0                
  1   280   # damExp1.riseTime
  0       2                       1                 1.0000000000000000E+100
  6   258   # damExp1.order
  0       4                       1                       4                
  6   258   # damExp1.init
 -1       1                       0                       0                
  1   280   # damExp1.y_start
  0       0                       0                       1                
  6   256   # damExp1.y
  0       0                       0                       0                
  6   256   # damExp1.y_actual
  0       0                       0                       0                
  6  1281   # damExp1.casePreInd
  0       1                       1                       4                
  6  1282   # damExp1.filter.analogFilter
  0       1                       1                       4                
  6  1282   # damExp1.filter.filterType
  0       2                       1                 1.0000000000000000E+100
  6  1282   # damExp1.filter.order
  0       0                       0                       0                
  6  1280   # damExp1.filter.f_cut
 -1       1                       0                       0                
  1  1304   # damExp1.filter.gain
 -1 5.0000000000000000E-001       0                       0                
  1  1304   # damExp1.filter.A_ripple
 -1       0                       0                       0                
  1  1304   # damExp1.filter.f_min
 -1       1                       0                       0                
  1  1305   # damExp1.filter.normalized
  0       4                       1                       4                
  6  1282   # damExp1.filter.init
  0       2                       0                       0                
  6  1282   # damExp1.filter.nx
 -1       0                       0                       0                
  1  1304   # damExp1.filter.x_start[1]
 -1       0                       0                       0                
  1  1304   # damExp1.filter.x_start[2]
  0       0                       0                       0                
  6  1280   # damExp1.filter.y_start
 -1       1                       0                       0                
  1  1304   # damExp1.filter.u_nominal
 -1       0                       0                       0                
  2  1296   # damExp1.filter.x[1]
  0       0                       0                       0                
  3  1280   # damExp1.filter.der(x[1])
 -1       0                       0                       0                
  2  1296   # damExp1.filter.x[2]
  0       0                       0                       0                
  3  1280   # damExp1.filter.der(x[2])
  0       2                       0                       0                
  6  1282   # damExp1.filter.ncr
  0       0                       0                       0                
  6  1282   # damExp1.filter.nc0
  0       0                       0                       0                
  6  1282   # damExp1.filter.na
  0       2                       0                       0                
  6  1282   # damExp1.filter.nr
  0       0                       0                       0                
  6  1280   # damExp1.filter.cr[1]
  0       0                       0                       0                
  6  1280   # damExp1.filter.cr[2]
  0       0                       0                       0                
  6  1280   # damExp1.filter.r[1]
  0       0                       0                       0                
  6  1280   # damExp1.filter.r[2]
  0       0                       0                       0                
  6  1280   # damExp1.filter.uu[1]
  0     100                       0                       0                
  6   256   # damExp1.dpDamper_nominal
  0       0                       0                       0                
  6   256   # damExp1.dpFixed_nominal
 -1       1                       0                       0                
  1   281   # damExp1.use_deltaM
 -1 2.9999999999999999E-001       0                       0                
  1   280   # damExp1.deltaM
  0       0                       0                       0                
  6   256   # damExp1.v_nominal
  0       0                       0                       0                
  6   256   # damExp1.A
 -1       0                       0                       0                
  1   281   # damExp1.roundDuct
 -1    4000                       0                       0                
  1   280   # damExp1.ReC
 -1 -1.5100000000000000E+000       0                       0                
  1   280   # damExp1.a
 -1 9.4499999999999993E+000       0                       0                
  1   280   # damExp1.b
 -1 1.6666666666666666E-001       0                       0                
  1   280   # damExp1.yL
 -1 6.1111111111111116E-001       0                       0                
  1   280   # damExp1.yU
  0       0                       0                 1.0000000000000000E+100
  6   256   # damExp1.k0
 -1 4.5000000000000001E-001       0                 1.0000000000000000E+100
  1   280   # damExp1.k1
 -1 1.0000000000000000E-004 1.0000000000000000E-010       1                
  1   280   # damExp1.l
  0       1                       0                       0                
  6   257   # damExp1.use_constant_density
  0 9.9999999999999995E+059       0                       0                
  6   256   # damExp1.kFixed
  0       0                       0                       0                
  6   256   # damExp1.kDam
  0       1                       0                  100000                
  6  1280   # damExp1.rho_default
  0       0                       0                       0                
  6  1280   # damExp1.facRouDuc
  0       0                       0                       0                
  6  1280   # damExp1.kL
  0       0                       0                       0                
  6  1280   # damExp1.kU
  0       0                       0                       0                
  6  1280   # damExp1.cL[1]
  0       0                       0                       0                
  6  1280   # damExp1.cL[2]
  0       0                       0                       0                
  6  1280   # damExp1.cL[3]
  0       0                       0                       0                
  6  1280   # damExp1.cU[1]
  0       0                       0                       0                
  6  1280   # damExp1.cU[2]
  0       0                       0                       0                
  6  1280   # damExp1.cU[3]
  0       0                       0                       0                
  6  1280   # damExp1.kDamMax
  0       0                       0                       0                
  6  1280   # damExp1.kTotMax
  0       0                       0                       0                
  6  1280   # damExp1.kDamMin
  0       0                       0                       0                
  6  1280   # damExp1.kTotMin
  0       6                       0                       0                
  6   258   # sinAir2.nPorts
  0       0                       0                       0                
  6   257   # sinAir2.verifyInputs
  0 4.5300945000000000E+004 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # sinAir2.ports[1].h_outflow
  0       0                 -100000                  100000                
  6   388   # sinAir2.ports[2].m_flow
  0       0                 -100000                  100000                
  6   388   # sinAir2.ports[3].m_flow
  0       0                 -100000                       0                
  6   388   # sinAir2.ports[4].m_flow
  0       0                 -100000                       0                
  6   388   # sinAir2.ports[5].m_flow
  0       0                 -100000                       0                
  6   388   # sinAir2.ports[6].m_flow
  0       3                       1                       3                
  6  1282   # sinAir2.flowDirection
  0       0                       0                       0                
  6  1280   # sinAir2.X_in_internal[1]
  0       0                       0                       0                
  6  1280   # sinAir2.X_in_internal[2]
  0       0                       0                       0                
  6   769   # sinAir2.use_X_in
  0       0                       0                       0                
  6   769   # sinAir2.use_Xi_in
  0       0                       0                       0                
  6   769   # sinAir2.use_C_in
 -1 1.0000000000000000E-002       0                       1                
  1   280   # sinAir2.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1   280   # sinAir2.X[2]
  0       0                       0                       0                
  6   769   # sinAir2.use_p_in
 -1  100000                       0                 1.0000000000000000E+008
  1   280   # sinAir2.p
  0       0                       0                       0                
  6   769   # sinAir2.use_T_in
 -1 2.9314999999999998E+002       1                   10000                
  1   280   # sinAir2.T
  0       0                       0                       0                
  6  1281   # sinAir2.checkWaterPressure
  0       1                       0                       0                
  6  1281   # sinAir2.checkAirPressure
  0       1                       0                       0                
  6   257   # res1.allowFlowReversal
  0 4.5300945000000000E+004 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # res1.port_a.h_outflow
  0       0                       0                       1                
  6   260   # res1.port_a.Xi_outflow[1]
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   260   # res1.port_b.p
  0 5.9999999999999998E-002       0                       0                
  6   256   # res1.m_flow_nominal
  0 6.0000000000000002E-006       0                 1.0000000000000000E+100
  6   256   # res1.m_flow_small
  0       0                       0                       0                
  6   257   # res1.show_T
  0       0                       0                       0                
  6   256   # res1.dp
  0       0                       0                       0                
  6  1280   # res1._m_flow_start
  0       0                       0                       0                
  6  1280   # res1._dp_start
  0       1                       0                       0                
  6   769   # res1.homotopyInitialization
  0       1                       0                       0                
  6   257   # res1.from_dp
  0     500                       0                       0                
  6   256   # res1.dp_nominal
  0       0                       0                       0                
  6   257   # res1.linearized
  0 1.7999999999999999E-002       0                 1.0000000000000000E+100
  6   256   # res1.m_flow_turbulent
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # res1.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # res1.sta_default.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # res1.sta_default.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # res1.sta_default.X[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # res1.eta_default
  0 5.9999999999999998E-002       0                       0                
  6  1280   # res1.m_flow_nominal_pos
  0     500                       0                       0                
  6  1280   # res1.dp_nominal_pos
  0 2.9999999999999999E-001 9.9999999999999995E-007 1.0000000000000000E+100
  6   256   # res1.deltaM
  0 2.6832815729997475E-003       0                       0                
  6   256   # res1.k
  0       1                       0                       0                
  6  1281   # res1.computeFlowResistance
  0       0                       0                       0                
  6  1280   # res1.coeff
  0       1                       0                       0                
  6   257   # res0.allowFlowReversal
  0 1.3599999999999999E-002       0                       0                
  6   256   # res0.m_flow_nominal
  0 1.3599999999999999E-006       0                 1.0000000000000000E+100
  6   256   # res0.m_flow_small
  0       0                       0                       0                
  6   257   # res0.show_T
  0       0                       0                       0                
  6   256   # res0.dp
  0       0                       0                       0                
  6  1280   # res0._m_flow_start
  0       0                       0                       0                
  6  1280   # res0._dp_start
  0       1                       0                       0                
  6   769   # res0.homotopyInitialization
  0       1                       0                       0                
  6   257   # res0.from_dp
  0      30                       0                       0                
  6   256   # res0.dp_nominal
  0       0                       0                       0                
  6   257   # res0.linearized
  0 4.0799999999999994E-003       0                 1.0000000000000000E+100
  6   256   # res0.m_flow_turbulent
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # res0.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # res0.sta_default.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # res0.sta_default.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # res0.sta_default.X[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # res0.eta_default
  0 1.3599999999999999E-002       0                       0                
  6  1280   # res0.m_flow_nominal_pos
  0      30                       0                       0                
  6  1280   # res0.dp_nominal_pos
  0 2.9999999999999999E-001 9.9999999999999995E-007 1.0000000000000000E+100
  6   256   # res0.deltaM
  0 2.4830089273567527E-003       0                       0                
  6   256   # res0.k
  0       1                       0                       0                
  6  1281   # res0.computeFlowResistance
  0       0                       0                       0                
  6  1280   # res0.coeff
  0       1                       0                       0                
  6   257   # res2.allowFlowReversal
  0 4.5300945000000000E+004 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # res2.port_b.h_outflow
  0       0                       0                       1                
  6   260   # res2.port_b.Xi_outflow[1]
  0 7.7000000000000002E-001       0                       0                
  6   256   # res2.m_flow_nominal
  0 7.7000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # res2.m_flow_small
  0       0                       0                       0                
  6   257   # res2.show_T
  0       0                       0                       0                
  6   256   # res2.dp
  0       0                       0                       0                
  6  1280   # res2._m_flow_start
  0       0                       0                       0                
  6  1280   # res2._dp_start
  0       1                       0                       0                
  6   769   # res2.homotopyInitialization
  0       1                       0                       0                
  6   257   # res2.from_dp
  0     900                       0                       0                
  6   256   # res2.dp_nominal
  0       0                       0                       0                
  6   257   # res2.linearized
  0 2.3099999999999998E-001       0                 1.0000000000000000E+100
  6   256   # res2.m_flow_turbulent
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # res2.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # res2.sta_default.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # res2.sta_default.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # res2.sta_default.X[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # res2.eta_default
  0 7.7000000000000002E-001       0                       0                
  6  1280   # res2.m_flow_nominal_pos
  0     900                       0                       0                
  6  1280   # res2.dp_nominal_pos
  0 2.9999999999999999E-001 9.9999999999999995E-007 1.0000000000000000E+100
  6   256   # res2.deltaM
  0 2.5666666666666667E-002       0                       0                
  6   256   # res2.k
  0       1                       0                       0                
  6  1281   # res2.computeFlowResistance
  0       0                       0                       0                
  6  1280   # res2.coeff
  0       2                       1                       4                
  6   258   # GasRoom1.energyDynamics
  0       2                       1                       4                
  6   258   # GasRoom1.massDynamics
  0       2                       1                       4                
  6   258   # GasRoom1.substanceDynamics
  0       2                       1                       4                
  6   258   # GasRoom1.traceDynamics
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1   280   # GasRoom1.p_start
 -1 2.9314999999999998E+002       1                   10000                
  1   280   # GasRoom1.T_start
 -1 1.0000000000000000E-002       0                       1                
  1   280   # GasRoom1.X_start[1]
 -1 9.8999999999999999E-001       0                       1                
  1   280   # GasRoom1.X_start[2]
  0       1                       1                 1.0000000000000000E+100
  6   256   # GasRoom1.mSenFac
  0       1                       0                       0                
  6   769   # GasRoom1.initialize_p
  0       0                       0                       0                
  6   257   # GasRoom1.prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # GasRoom1.simplify_mWat_flow
 -1      10                       0                 1.0000000000000000E+100
  1   280   # GasRoom1.m_flow_nominal
  0       8                       0                       0                
  6   258   # GasRoom1.nPorts
  0       0                       0                 1.0000000000000000E+100
  6   256   # GasRoom1.m_flow_small
  0       1                       0                       0                
  6   257   # GasRoom1.allowFlowReversal
 -1 1.8600000000000001E+001       0                       0                
  1   280   # GasRoom1.V
  0       0                 -100000                  100000                
  6   388   # GasRoom1.ports[1].m_flow
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   260   # GasRoom1.ports[1].p
  0 4.5300945000000000E+004 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # GasRoom1.ports[1].h_outflow
  0       0                       0                       1                
  6   260   # GasRoom1.ports[1].Xi_outflow[1]
  0       0                 -100000                  100000                
  6   388   # GasRoom1.ports[2].m_flow
  0       0                 -100000                       0                
  6   388   # GasRoom1.ports[6].m_flow
  0       0                 -100000                       0                
  6   388   # GasRoom1.ports[7].m_flow
  0       0                 -100000                       0                
  6   388   # GasRoom1.ports[8].m_flow
  0     300                       1                   10000                
  6   256   # GasRoom1.T
  0       0                       0                 1.0000000000000000E+100
  6  1280   # GasRoom1.rho_start
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # GasRoom1.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # GasRoom1.state_default.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # GasRoom1.state_default.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # GasRoom1.state_default.X[2]
  0 1.2000000000000000E+000       0                 1.0000000000000000E+100
  6  1280   # GasRoom1.rho_default
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # GasRoom1.state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # GasRoom1.state_start.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # GasRoom1.state_start.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # GasRoom1.state_start.X[2]
  0       0                       0                       0                
  6  1281   # GasRoom1.useSteadyStateTwoPort
  0       0                       0                       0                
  6  1412   # GasRoom1.preTem.port.Q_flow
  0       0                       0                       0                
  6  1280   # GasRoom1.heaFloSen.Q_flow
  0       0                       0                       0                
  6  1412   # GasRoom1.heaFloSen.port_a.Q_flow
  0       0                       0                       0                
  6  1412   # GasRoom1.heaFloSen.port_b.Q_flow
  0       0                       0                       0                
  6   257   # GasRoom1.use_C_flow
  0       0                       0                       0                
  6   388   # GasRoom1.heatPort.Q_flow
  0       1                       0                       0                
  6   257   # damExp2.allowFlowReversal
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   260   # damExp2.port_a.p
  0 4.5300945000000000E+004 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # damExp2.port_b.h_outflow
  0       0                       0                       1                
  6   260   # damExp2.port_b.Xi_outflow[1]
  0 2.3999999999999999E-001       0                       0                
  6   256   # damExp2.m_flow_nominal
  0 2.4000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # damExp2.m_flow_small
  0       0                       0                       0                
  6   257   # damExp2.show_T
  0       0                       0                       0                
  6   256   # damExp2.dp
  0       0                       0                       0                
  6  1280   # damExp2._m_flow_start
  0       0                       0                       0                
  6  1280   # damExp2._dp_start
  0       1                       0                       0                
  6   769   # damExp2.homotopyInitialization
  0       0                       0                       0                
  6   257   # damExp2.from_dp
  0     100                       0                       0                
  6   256   # damExp2.dp_nominal
  0       0                       0                       0                
  6   257   # damExp2.linearized
  0       0                       0                 1.0000000000000000E+100
  6   256   # damExp2.m_flow_turbulent
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # damExp2.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # damExp2.sta_default.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # damExp2.sta_default.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # damExp2.sta_default.X[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # damExp2.eta_default
  0 2.3999999999999999E-001       0                       0                
  6  1280   # damExp2.m_flow_nominal_pos
  0     100                       0                       0                
  6  1280   # damExp2.dp_nominal_pos
  0       1                       0                       0                
  6   257   # damExp2.use_inputFilter
 -1       3                       0                       0                
  1   280   # damExp2.riseTime
  0       2                       1                 1.0000000000000000E+100
  6   258   # damExp2.order
  0       4                       1                       4                
  6   258   # damExp2.init
 -1       1                       0                       0                
  1   280   # damExp2.y_start
  0       0                       0                       1                
  6   256   # damExp2.y
  0       0                       0                       0                
  6   256   # damExp2.y_actual
  0       0                       0                       0                
  6  1281   # damExp2.casePreInd
  0       1                       1                       4                
  6  1282   # damExp2.filter.analogFilter
  0       1                       1                       4                
  6  1282   # damExp2.filter.filterType
  0       2                       1                 1.0000000000000000E+100
  6  1282   # damExp2.filter.order
  0       0                       0                       0                
  6  1280   # damExp2.filter.f_cut
 -1       1                       0                       0                
  1  1304   # damExp2.filter.gain
 -1 5.0000000000000000E-001       0                       0                
  1  1304   # damExp2.filter.A_ripple
 -1       0                       0                       0                
  1  1304   # damExp2.filter.f_min
 -1       1                       0                       0                
  1  1305   # damExp2.filter.normalized
  0       4                       1                       4                
  6  1282   # damExp2.filter.init
  0       2                       0                       0                
  6  1282   # damExp2.filter.nx
 -1       0                       0                       0                
  1  1304   # damExp2.filter.x_start[1]
 -1       0                       0                       0                
  1  1304   # damExp2.filter.x_start[2]
  0       0                       0                       0                
  6  1280   # damExp2.filter.y_start
 -1       1                       0                       0                
  1  1304   # damExp2.filter.u_nominal
 -1       0                       0                       0                
  2  1296   # damExp2.filter.x[1]
  0       0                       0                       0                
  3  1280   # damExp2.filter.der(x[1])
 -1       0                       0                       0                
  2  1296   # damExp2.filter.x[2]
  0       0                       0                       0                
  3  1280   # damExp2.filter.der(x[2])
  0       2                       0                       0                
  6  1282   # damExp2.filter.ncr
  0       0                       0                       0                
  6  1282   # damExp2.filter.nc0
  0       0                       0                       0                
  6  1282   # damExp2.filter.na
  0       2                       0                       0                
  6  1282   # damExp2.filter.nr
  0       0                       0                       0                
  6  1280   # damExp2.filter.cr[1]
  0       0                       0                       0                
  6  1280   # damExp2.filter.cr[2]
  0       0                       0                       0                
  6  1280   # damExp2.filter.r[1]
  0       0                       0                       0                
  6  1280   # damExp2.filter.r[2]
  0       0                       0                       0                
  6  1280   # damExp2.filter.uu[1]
  0     100                       0                       0                
  6   256   # damExp2.dpDamper_nominal
  0       0                       0                       0                
  6   256   # damExp2.dpFixed_nominal
 -1       1                       0                       0                
  1   281   # damExp2.use_deltaM
 -1 2.9999999999999999E-001       0                       0                
  1   280   # damExp2.deltaM
  0       0                       0                       0                
  6   256   # damExp2.v_nominal
  0       0                       0                       0                
  6   256   # damExp2.A
 -1       0                       0                       0                
  1   281   # damExp2.roundDuct
 -1    4000                       0                       0                
  1   280   # damExp2.ReC
 -1 -1.5100000000000000E+000       0                       0                
  1   280   # damExp2.a
 -1 9.4499999999999993E+000       0                       0                
  1   280   # damExp2.b
 -1 1.6666666666666666E-001       0                       0                
  1   280   # damExp2.yL
 -1 6.1111111111111116E-001       0                       0                
  1   280   # damExp2.yU
  0       0                       0                 1.0000000000000000E+100
  6   256   # damExp2.k0
 -1 4.5000000000000001E-001       0                 1.0000000000000000E+100
  1   280   # damExp2.k1
 -1 1.0000000000000000E-004 1.0000000000000000E-010       1                
  1   280   # damExp2.l
  0       1                       0                       0                
  6   257   # damExp2.use_constant_density
  0 9.9999999999999995E+059       0                       0                
  6   256   # damExp2.kFixed
  0       0                       0                       0                
  6   256   # damExp2.kDam
  0       1                       0                  100000                
  6  1280   # damExp2.rho_default
  0       0                       0                       0                
  6  1280   # damExp2.facRouDuc
  0       0                       0                       0                
  6  1280   # damExp2.kL
  0       0                       0                       0                
  6  1280   # damExp2.kU
  0       0                       0                       0                
  6  1280   # damExp2.cL[1]
  0       0                       0                       0                
  6  1280   # damExp2.cL[2]
  0       0                       0                       0                
  6  1280   # damExp2.cL[3]
  0       0                       0                       0                
  6  1280   # damExp2.cU[1]
  0       0                       0                       0                
  6  1280   # damExp2.cU[2]
  0       0                       0                       0                
  6  1280   # damExp2.cU[3]
  0       0                       0                       0                
  6  1280   # damExp2.kDamMax
  0       0                       0                       0                
  6  1280   # damExp2.kTotMax
  0       0                       0                       0                
  6  1280   # damExp2.kDamMin
  0       0                       0                       0                
  6  1280   # damExp2.kTotMin
  0       1                       0                       0                
  6   257   # damExp3.allowFlowReversal
  0 4.5300945000000000E+004 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # damExp3.port_a.h_outflow
  0       0                       0                       1                
  6   260   # damExp3.port_a.Xi_outflow[1]
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   260   # damExp3.port_b.p
  0 2.1400000000000000E-001       0                       0                
  6   256   # damExp3.m_flow_nominal
  0 2.1400000000000002E-005       0                 1.0000000000000000E+100
  6   256   # damExp3.m_flow_small
  0       0                       0                       0                
  6   257   # damExp3.show_T
  0       0                       0                       0                
  6   256   # damExp3.dp
  0       0                       0                       0                
  6  1280   # damExp3._m_flow_start
  0       0                       0                       0                
  6  1280   # damExp3._dp_start
  0       1                       0                       0                
  6   769   # damExp3.homotopyInitialization
  0       0                       0                       0                
  6   257   # damExp3.from_dp
  0     100                       0                       0                
  6   256   # damExp3.dp_nominal
  0       0                       0                       0                
  6   257   # damExp3.linearized
  0       0                       0                 1.0000000000000000E+100
  6   256   # damExp3.m_flow_turbulent
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # damExp3.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # damExp3.sta_default.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # damExp3.sta_default.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # damExp3.sta_default.X[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # damExp3.eta_default
  0 2.1400000000000000E-001       0                       0                
  6  1280   # damExp3.m_flow_nominal_pos
  0     100                       0                       0                
  6  1280   # damExp3.dp_nominal_pos
  0       1                       0                       0                
  6   257   # damExp3.use_inputFilter
 -1       3                       0                       0                
  1   280   # damExp3.riseTime
  0       2                       1                 1.0000000000000000E+100
  6   258   # damExp3.order
  0       4                       1                       4                
  6   258   # damExp3.init
 -1       1                       0                       0                
  1   280   # damExp3.y_start
  0       0                       0                       1                
  6   256   # damExp3.y
  0       0                       0                       0                
  6   256   # damExp3.y_actual
  0       0                       0                       0                
  6  1281   # damExp3.casePreInd
  0       1                       1                       4                
  6  1282   # damExp3.filter.analogFilter
  0       1                       1                       4                
  6  1282   # damExp3.filter.filterType
  0       2                       1                 1.0000000000000000E+100
  6  1282   # damExp3.filter.order
  0       0                       0                       0                
  6  1280   # damExp3.filter.f_cut
 -1       1                       0                       0                
  1  1304   # damExp3.filter.gain
 -1 5.0000000000000000E-001       0                       0                
  1  1304   # damExp3.filter.A_ripple
 -1       0                       0                       0                
  1  1304   # damExp3.filter.f_min
 -1       1                       0                       0                
  1  1305   # damExp3.filter.normalized
  0       4                       1                       4                
  6  1282   # damExp3.filter.init
  0       2                       0                       0                
  6  1282   # damExp3.filter.nx
 -1       0                       0                       0                
  1  1304   # damExp3.filter.x_start[1]
 -1       0                       0                       0                
  1  1304   # damExp3.filter.x_start[2]
  0       0                       0                       0                
  6  1280   # damExp3.filter.y_start
 -1       1                       0                       0                
  1  1304   # damExp3.filter.u_nominal
 -1       0                       0                       0                
  2  1296   # damExp3.filter.x[1]
  0       0                       0                       0                
  3  1280   # damExp3.filter.der(x[1])
 -1       0                       0                       0                
  2  1296   # damExp3.filter.x[2]
  0       0                       0                       0                
  3  1280   # damExp3.filter.der(x[2])
  0       2                       0                       0                
  6  1282   # damExp3.filter.ncr
  0       0                       0                       0                
  6  1282   # damExp3.filter.nc0
  0       0                       0                       0                
  6  1282   # damExp3.filter.na
  0       2                       0                       0                
  6  1282   # damExp3.filter.nr
  0       0                       0                       0                
  6  1280   # damExp3.filter.cr[1]
  0       0                       0                       0                
  6  1280   # damExp3.filter.cr[2]
  0       0                       0                       0                
  6  1280   # damExp3.filter.r[1]
  0       0                       0                       0                
  6  1280   # damExp3.filter.r[2]
  0       0                       0                       0                
  6  1280   # damExp3.filter.uu[1]
  0     100                       0                       0                
  6   256   # damExp3.dpDamper_nominal
  0       0                       0                       0                
  6   256   # damExp3.dpFixed_nominal
 -1       1                       0                       0                
  1   281   # damExp3.use_deltaM
 -1 2.9999999999999999E-001       0                       0                
  1   280   # damExp3.deltaM
  0       0                       0                       0                
  6   256   # damExp3.v_nominal
  0       0                       0                       0                
  6   256   # damExp3.A
 -1       0                       0                       0                
  1   281   # damExp3.roundDuct
 -1    4000                       0                       0                
  1   280   # damExp3.ReC
 -1 -1.5100000000000000E+000       0                       0                
  1   280   # damExp3.a
 -1 9.4499999999999993E+000       0                       0                
  1   280   # damExp3.b
 -1 1.6666666666666666E-001       0                       0                
  1   280   # damExp3.yL
 -1 6.1111111111111116E-001       0                       0                
  1   280   # damExp3.yU
  0       0                       0                 1.0000000000000000E+100
  6   256   # damExp3.k0
 -1 4.5000000000000001E-001       0                 1.0000000000000000E+100
  1   280   # damExp3.k1
 -1 1.0000000000000000E-004 1.0000000000000000E-010       1                
  1   280   # damExp3.l
  0       1                       0                       0                
  6   257   # damExp3.use_constant_density
  0 9.9999999999999995E+059       0                       0                
  6   256   # damExp3.kFixed
  0       0                       0                       0                
  6   256   # damExp3.kDam
  0       1                       0                  100000                
  6  1280   # damExp3.rho_default
  0       0                       0                       0                
  6  1280   # damExp3.facRouDuc
  0       0                       0                       0                
  6  1280   # damExp3.kL
  0       0                       0                       0                
  6  1280   # damExp3.kU
  0       0                       0                       0                
  6  1280   # damExp3.cL[1]
  0       0                       0                       0                
  6  1280   # damExp3.cL[2]
  0       0                       0                       0                
  6  1280   # damExp3.cL[3]
  0       0                       0                       0                
  6  1280   # damExp3.cU[1]
  0       0                       0                       0                
  6  1280   # damExp3.cU[2]
  0       0                       0                       0                
  6  1280   # damExp3.cU[3]
  0       0                       0                       0                
  6  1280   # damExp3.kDamMax
  0       0                       0                       0                
  6  1280   # damExp3.kTotMax
  0       0                       0                       0                
  6  1280   # damExp3.kDamMin
  0       0                       0                       0                
  6  1280   # damExp3.kTotMin
  0       1                       0                       0                
  6   257   # res01.allowFlowReversal
  0 1.4200000000000001E-002       0                       0                
  6   256   # res01.m_flow_nominal
  0 1.4200000000000002E-006       0                 1.0000000000000000E+100
  6   256   # res01.m_flow_small
  0       0                       0                       0                
  6   257   # res01.show_T
  0       0                       0                       0                
  6   256   # res01.dp
  0       0                       0                       0                
  6  1280   # res01._m_flow_start
  0       0                       0                       0                
  6  1280   # res01._dp_start
  0       1                       0                       0                
  6   769   # res01.homotopyInitialization
  0       1                       0                       0                
  6   257   # res01.from_dp
  0      40                       0                       0                
  6   256   # res01.dp_nominal
  0       0                       0                       0                
  6   257   # res01.linearized
  0 4.2599999999999999E-003       0                 1.0000000000000000E+100
  6   256   # res01.m_flow_turbulent
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # res01.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # res01.sta_default.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # res01.sta_default.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # res01.sta_default.X[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # res01.eta_default
  0 1.4200000000000001E-002       0                       0                
  6  1280   # res01.m_flow_nominal_pos
  0      40                       0                       0                
  6  1280   # res01.dp_nominal_pos
  0 2.9999999999999999E-001 9.9999999999999995E-007 1.0000000000000000E+100
  6   256   # res01.deltaM
  0 2.2452171387195492E-003       0                       0                
  6   256   # res01.k
  0       1                       0                       0                
  6  1281   # res01.computeFlowResistance
  0       0                       0                       0                
  6  1280   # res01.coeff
  0       1                       0                       0                
  6   257   # res3.allowFlowReversal
  0 2.3699999999999999E-001       0                       0                
  6   256   # res3.m_flow_nominal
  0 2.3700000000000000E-005       0                 1.0000000000000000E+100
  6   256   # res3.m_flow_small
  0       0                       0                       0                
  6   257   # res3.show_T
  0       0                       0                       0                
  6   256   # res3.dp
  0       0                       0                       0                
  6  1280   # res3._m_flow_start
  0       0                       0                       0                
  6  1280   # res3._dp_start
  0       1                       0                       0                
  6   769   # res3.homotopyInitialization
  0       1                       0                       0                
  6   257   # res3.from_dp
  0     370                       0                       0                
  6   256   # res3.dp_nominal
  0       0                       0                       0                
  6   257   # res3.linearized
  0 7.1099999999999997E-002       0                 1.0000000000000000E+100
  6   256   # res3.m_flow_turbulent
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # res3.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # res3.sta_default.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # res3.sta_default.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # res3.sta_default.X[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # res3.eta_default
  0 2.3699999999999999E-001       0                       0                
  6  1280   # res3.m_flow_nominal_pos
  0     370                       0                       0                
  6  1280   # res3.dp_nominal_pos
  0 2.9999999999999999E-001 9.9999999999999995E-007 1.0000000000000000E+100
  6   256   # res3.deltaM
  0 1.2321043304367861E-002       0                       0                
  6   256   # res3.k
  0       1                       0                       0                
  6  1281   # res3.computeFlowResistance
  0       0                       0                       0                
  6  1280   # res3.coeff
  0       1                       0                       0                
  6   257   # res4.allowFlowReversal
  0 2.3499999999999999E-001       0                       0                
  6   256   # res4.m_flow_nominal
  0 2.3499999999999999E-005       0                 1.0000000000000000E+100
  6   256   # res4.m_flow_small
  0       0                       0                       0                
  6   257   # res4.show_T
  0       0                       0                       0                
  6   288   # res4.dp
  0       0                       0                       0                
  6  1280   # res4._m_flow_start
  0       0                       0                       0                
  6  1280   # res4._dp_start
  0       1                       0                       0                
  6   769   # res4.homotopyInitialization
  0       1                       0                       0                
  6   257   # res4.from_dp
  0     430                       0                       0                
  6   256   # res4.dp_nominal
  0       0                       0                       0                
  6   257   # res4.linearized
  0 7.0499999999999993E-002       0                 1.0000000000000000E+100
  6   256   # res4.m_flow_turbulent
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # res4.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # res4.sta_default.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # res4.sta_default.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # res4.sta_default.X[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # res4.eta_default
  0 2.3499999999999999E-001       0                       0                
  6  1280   # res4.m_flow_nominal_pos
  0     430                       0                       0                
  6  1280   # res4.dp_nominal_pos
  0 2.9999999999999999E-001 9.9999999999999995E-007 1.0000000000000000E+100
  6   256   # res4.deltaM
  0 1.1332706321004684E-002       0                       0                
  6   256   # res4.k
  0       1                       0                       0                
  6  1281   # res4.computeFlowResistance
  0       0                       0                       0                
  6  1280   # res4.coeff
  0       1                       0                       0                
  6   257   # res5.allowFlowReversal
  0 2.3999999999999999E-001       0                       0                
  6   256   # res5.m_flow_nominal
  0 2.4000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # res5.m_flow_small
  0       0                       0                       0                
  6   257   # res5.show_T
  0       0                       0                       0                
  6   288   # res5.dp
  0       0                       0                       0                
  6  1280   # res5._m_flow_start
  0       0                       0                       0                
  6  1280   # res5._dp_start
  0       1                       0                       0                
  6   769   # res5.homotopyInitialization
  0       1                       0                       0                
  6   257   # res5.from_dp
  0     360                       0                       0                
  6   256   # res5.dp_nominal
  0       0                       0                       0                
  6   257   # res5.linearized
  0 7.1999999999999995E-002       0                 1.0000000000000000E+100
  6   256   # res5.m_flow_turbulent
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # res5.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # res5.sta_default.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # res5.sta_default.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # res5.sta_default.X[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # res5.eta_default
  0 2.3999999999999999E-001       0                       0                
  6  1280   # res5.m_flow_nominal_pos
  0     360                       0                       0                
  6  1280   # res5.dp_nominal_pos
  0 2.9999999999999999E-001 9.9999999999999995E-007 1.0000000000000000E+100
  6   256   # res5.deltaM
  0 1.2649110640673516E-002       0                       0                
  6   256   # res5.k
  0       1                       0                       0                
  6  1281   # res5.computeFlowResistance
  0       0                       0                       0                
  6  1280   # res5.coeff
  0       1                       0                       0                
  6   257   # res6.allowFlowReversal
  0 2.1400000000000000E-001       0                       0                
  6   256   # res6.m_flow_nominal
  0 2.1400000000000002E-005       0                 1.0000000000000000E+100
  6   256   # res6.m_flow_small
  0       0                       0                       0                
  6   257   # res6.show_T
  0       0                       0                       0                
  6   288   # res6.dp
  0       0                       0                       0                
  6  1280   # res6._m_flow_start
  0       0                       0                       0                
  6  1280   # res6._dp_start
  0       1                       0                       0                
  6   769   # res6.homotopyInitialization
  0       1                       0                       0                
  6   257   # res6.from_dp
  0     440                       0                       0                
  6   256   # res6.dp_nominal
  0       0                       0                       0                
  6   257   # res6.linearized
  0 6.4199999999999993E-002       0                 1.0000000000000000E+100
  6   256   # res6.m_flow_turbulent
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # res6.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # res6.sta_default.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # res6.sta_default.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # res6.sta_default.X[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # res6.eta_default
  0 2.1400000000000000E-001       0                       0                
  6  1280   # res6.m_flow_nominal_pos
  0     440                       0                       0                
  6  1280   # res6.dp_nominal_pos
  0 2.9999999999999999E-001 9.9999999999999995E-007 1.0000000000000000E+100
  6   256   # res6.deltaM
  0 1.0202049704927838E-002       0                       0                
  6   256   # res6.k
  0       1                       0                       0                
  6  1281   # res6.computeFlowResistance
  0       0                       0                       0                
  6  1280   # res6.coeff
  0       2                       1                       4                
  6   258   # GasRoom2.energyDynamics
  0       2                       1                       4                
  6   258   # GasRoom2.massDynamics
  0       2                       1                       4                
  6   258   # GasRoom2.substanceDynamics
  0       2                       1                       4                
  6   258   # GasRoom2.traceDynamics
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1   280   # GasRoom2.p_start
 -1 2.9314999999999998E+002       1                   10000                
  1   280   # GasRoom2.T_start
 -1 1.0000000000000000E-002       0                       1                
  1   280   # GasRoom2.X_start[1]
 -1 9.8999999999999999E-001       0                       1                
  1   280   # GasRoom2.X_start[2]
  0       1                       1                 1.0000000000000000E+100
  6   256   # GasRoom2.mSenFac
  0       1                       0                       0                
  6   769   # GasRoom2.initialize_p
  0       0                       0                       0                
  6   257   # GasRoom2.prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # GasRoom2.simplify_mWat_flow
 -1      10                       0                 1.0000000000000000E+100
  1   280   # GasRoom2.m_flow_nominal
  0       8                       0                       0                
  6   258   # GasRoom2.nPorts
  0       0                       0                 1.0000000000000000E+100
  6   256   # GasRoom2.m_flow_small
  0       1                       0                       0                
  6   257   # GasRoom2.allowFlowReversal
 -1 2.1100000000000001E+001       0                       0                
  1   280   # GasRoom2.V
  0       0                 -100000                  100000                
  6   388   # GasRoom2.ports[1].m_flow
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   260   # GasRoom2.ports[1].p
  0 4.5300945000000000E+004 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # GasRoom2.ports[1].h_outflow
  0       0                       0                       1                
  6   260   # GasRoom2.ports[1].Xi_outflow[1]
  0       0                 -100000                  100000                
  6   388   # GasRoom2.ports[3].m_flow
  0       0                 -100000                       0                
  6   388   # GasRoom2.ports[6].m_flow
  0       0                 -100000                       0                
  6   388   # GasRoom2.ports[7].m_flow
  0       0                 -100000                       0                
  6   388   # GasRoom2.ports[8].m_flow
  0     300                       1                   10000                
  6   256   # GasRoom2.T
  0       0                       0                 1.0000000000000000E+100
  6  1280   # GasRoom2.rho_start
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # GasRoom2.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # GasRoom2.state_default.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # GasRoom2.state_default.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # GasRoom2.state_default.X[2]
  0 1.2000000000000000E+000       0                 1.0000000000000000E+100
  6  1280   # GasRoom2.rho_default
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # GasRoom2.state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # GasRoom2.state_start.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # GasRoom2.state_start.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # GasRoom2.state_start.X[2]
  0       0                       0                       0                
  6  1281   # GasRoom2.useSteadyStateTwoPort
  0       0                       0                       0                
  6  1412   # GasRoom2.preTem.port.Q_flow
  0       0                       0                       0                
  6  1280   # GasRoom2.heaFloSen.Q_flow
  0       0                       0                       0                
  6  1412   # GasRoom2.heaFloSen.port_a.Q_flow
  0       0                       0                       0                
  6  1412   # GasRoom2.heaFloSen.port_b.Q_flow
  0       0                       0                       0                
  6   257   # GasRoom2.use_C_flow
  0       0                       0                       0                
  6   388   # GasRoom2.heatPort.Q_flow
  0       1                       0                       0                
  6   257   # res7.allowFlowReversal
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   260   # res7.port_b.p
  0 4.5300945000000000E+004 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # res7.port_b.h_outflow
  0       0                       0                       1                
  6   260   # res7.port_b.Xi_outflow[1]
  0 2.9299999999999998E-001       0                       0                
  6   256   # res7.m_flow_nominal
  0 2.9300000000000001E-005       0                 1.0000000000000000E+100
  6   256   # res7.m_flow_small
  0       0                       0                       0                
  6   257   # res7.show_T
  0       0                       0                       0                
  6   288   # res7.dp
  0       0                       0                       0                
  6  1280   # res7._m_flow_start
  0       0                       0                       0                
  6  1280   # res7._dp_start
  0       1                       0                       0                
  6   769   # res7.homotopyInitialization
  0       1                       0                       0                
  6   257   # res7.from_dp
  0     365                       0                       0                
  6   256   # res7.dp_nominal
  0       0                       0                       0                
  6   257   # res7.linearized
  0 8.7899999999999992E-002       0                 1.0000000000000000E+100
  6   256   # res7.m_flow_turbulent
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # res7.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # res7.sta_default.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # res7.sta_default.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # res7.sta_default.X[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # res7.eta_default
  0 2.9299999999999998E-001       0                       0                
  6  1280   # res7.m_flow_nominal_pos
  0     365                       0                       0                
  6  1280   # res7.dp_nominal_pos
  0 2.9999999999999999E-001 9.9999999999999995E-007 1.0000000000000000E+100
  6   256   # res7.deltaM
  0 1.5336320931893261E-002       0                       0                
  6   256   # res7.k
  0       1                       0                       0                
  6  1281   # res7.computeFlowResistance
  0       0                       0                       0                
  6  1280   # res7.coeff
  0       1                       0                       0                
  6   257   # damExp4.allowFlowReversal
  0 2.9299999999999998E-001       0                       0                
  6   256   # damExp4.m_flow_nominal
  0 2.9300000000000001E-005       0                 1.0000000000000000E+100
  6   256   # damExp4.m_flow_small
  0       0                       0                       0                
  6   257   # damExp4.show_T
  0       0                       0                       0                
  6   256   # damExp4.dp
  0       0                       0                       0                
  6  1280   # damExp4._m_flow_start
  0       0                       0                       0                
  6  1280   # damExp4._dp_start
  0       1                       0                       0                
  6   769   # damExp4.homotopyInitialization
  0       0                       0                       0                
  6   257   # damExp4.from_dp
  0     100                       0                       0                
  6   256   # damExp4.dp_nominal
  0       0                       0                       0                
  6   257   # damExp4.linearized
  0       0                       0                 1.0000000000000000E+100
  6   256   # damExp4.m_flow_turbulent
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # damExp4.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # damExp4.sta_default.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # damExp4.sta_default.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # damExp4.sta_default.X[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # damExp4.eta_default
  0 2.9299999999999998E-001       0                       0                
  6  1280   # damExp4.m_flow_nominal_pos
  0     100                       0                       0                
  6  1280   # damExp4.dp_nominal_pos
  0       1                       0                       0                
  6   257   # damExp4.use_inputFilter
 -1     180                       0                       0                
  1   280   # damExp4.riseTime
  0       2                       1                 1.0000000000000000E+100
  6   258   # damExp4.order
  0       4                       1                       4                
  6   258   # damExp4.init
 -1       1                       0                       0                
  1   280   # damExp4.y_start
  0       0                       0                       1                
  6   256   # damExp4.y
  0       0                       0                       0                
  6   256   # damExp4.y_actual
  0       0                       0                       0                
  6  1281   # damExp4.casePreInd
  0       1                       1                       4                
  6  1282   # damExp4.filter.analogFilter
  0       1                       1                       4                
  6  1282   # damExp4.filter.filterType
  0       2                       1                 1.0000000000000000E+100
  6  1282   # damExp4.filter.order
  0       0                       0                       0                
  6  1280   # damExp4.filter.f_cut
 -1       1                       0                       0                
  1  1304   # damExp4.filter.gain
 -1 5.0000000000000000E-001       0                       0                
  1  1304   # damExp4.filter.A_ripple
 -1       0                       0                       0                
  1  1304   # damExp4.filter.f_min
 -1       1                       0                       0                
  1  1305   # damExp4.filter.normalized
  0       4                       1                       4                
  6  1282   # damExp4.filter.init
  0       2                       0                       0                
  6  1282   # damExp4.filter.nx
 -1       0                       0                       0                
  1  1304   # damExp4.filter.x_start[1]
 -1       0                       0                       0                
  1  1304   # damExp4.filter.x_start[2]
  0       0                       0                       0                
  6  1280   # damExp4.filter.y_start
 -1       1                       0                       0                
  1  1304   # damExp4.filter.u_nominal
 -1       0                       0                       0                
  2  1296   # damExp4.filter.x[1]
  0       0                       0                       0                
  3  1280   # damExp4.filter.der(x[1])
 -1       0                       0                       0                
  2  1296   # damExp4.filter.x[2]
  0       0                       0                       0                
  3  1280   # damExp4.filter.der(x[2])
  0       2                       0                       0                
  6  1282   # damExp4.filter.ncr
  0       0                       0                       0                
  6  1282   # damExp4.filter.nc0
  0       0                       0                       0                
  6  1282   # damExp4.filter.na
  0       2                       0                       0                
  6  1282   # damExp4.filter.nr
  0       0                       0                       0                
  6  1280   # damExp4.filter.cr[1]
  0       0                       0                       0                
  6  1280   # damExp4.filter.cr[2]
  0       0                       0                       0                
  6  1280   # damExp4.filter.r[1]
  0       0                       0                       0                
  6  1280   # damExp4.filter.r[2]
  0       0                       0                       0                
  6  1280   # damExp4.filter.uu[1]
  0     100                       0                       0                
  6   256   # damExp4.dpDamper_nominal
  0       0                       0                       0                
  6   256   # damExp4.dpFixed_nominal
 -1       1                       0                       0                
  1   281   # damExp4.use_deltaM
 -1 2.9999999999999999E-001       0                       0                
  1   280   # damExp4.deltaM
  0       0                       0                       0                
  6   256   # damExp4.v_nominal
  0       0                       0                       0                
  6   256   # damExp4.A
 -1       0                       0                       0                
  1   281   # damExp4.roundDuct
 -1    4000                       0                       0                
  1   280   # damExp4.ReC
 -1 -1.5100000000000000E+000       0                       0                
  1   280   # damExp4.a
 -1 9.4499999999999993E+000       0                       0                
  1   280   # damExp4.b
 -1 1.6666666666666666E-001       0                       0                
  1   280   # damExp4.yL
 -1 6.1111111111111116E-001       0                       0                
  1   280   # damExp4.yU
  0       0                       0                 1.0000000000000000E+100
  6   256   # damExp4.k0
 -1 4.5000000000000001E-001       0                 1.0000000000000000E+100
  1   280   # damExp4.k1
 -1 1.0000000000000000E-004 1.0000000000000000E-010       1                
  1   280   # damExp4.l
  0       1                       0                       0                
  6   257   # damExp4.use_constant_density
  0 9.9999999999999995E+059       0                       0                
  6   256   # damExp4.kFixed
  0       0                       0                       0                
  6   256   # damExp4.kDam
  0       1                       0                  100000                
  6  1280   # damExp4.rho_default
  0       0                       0                       0                
  6  1280   # damExp4.facRouDuc
  0       0                       0                       0                
  6  1280   # damExp4.kL
  0       0                       0                       0                
  6  1280   # damExp4.kU
  0       0                       0                       0                
  6  1280   # damExp4.cL[1]
  0       0                       0                       0                
  6  1280   # damExp4.cL[2]
  0       0                       0                       0                
  6  1280   # damExp4.cL[3]
  0       0                       0                       0                
  6  1280   # damExp4.cU[1]
  0       0                       0                       0                
  6  1280   # damExp4.cU[2]
  0       0                       0                       0                
  6  1280   # damExp4.cU[3]
  0       0                       0                       0                
  6  1280   # damExp4.kDamMax
  0       0                       0                       0                
  6  1280   # damExp4.kTotMax
  0       0                       0                       0                
  6  1280   # damExp4.kDamMin
  0       0                       0                       0                
  6  1280   # damExp4.kTotMin
  0       1                       0                       0                
  6   257   # res02.allowFlowReversal
  0 3.2000000000000001E-002       0                       0                
  6   256   # res02.m_flow_nominal
  0 3.2000000000000003E-006       0                 1.0000000000000000E+100
  6   256   # res02.m_flow_small
  0       0                       0                       0                
  6   257   # res02.show_T
  0       0                       0                       0                
  6   256   # res02.dp
  0       0                       0                       0                
  6  1280   # res02._m_flow_start
  0       0                       0                       0                
  6  1280   # res02._dp_start
  0       1                       0                       0                
  6   769   # res02.homotopyInitialization
  0       1                       0                       0                
  6   257   # res02.from_dp
  0      35                       0                       0                
  6   256   # res02.dp_nominal
  0       0                       0                       0                
  6   257   # res02.linearized
  0 9.5999999999999992E-003       0                 1.0000000000000000E+100
  6   256   # res02.m_flow_turbulent
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # res02.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # res02.sta_default.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # res02.sta_default.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # res02.sta_default.X[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # res02.eta_default
  0 3.2000000000000001E-002       0                       0                
  6  1280   # res02.m_flow_nominal_pos
  0      35                       0                       0                
  6  1280   # res02.dp_nominal_pos
  0 2.9999999999999999E-001 9.9999999999999995E-007 1.0000000000000000E+100
  6   256   # res02.deltaM
  0 5.4089872302625058E-003       0                       0                
  6   256   # res02.k
  0       1                       0                       0                
  6  1281   # res02.computeFlowResistance
  0       0                       0                       0                
  6  1280   # res02.coeff
  0       1                       0                       0                
  6   257   # damExp5.allowFlowReversal
  0 4.5300945000000000E+004 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # damExp5.port_a.h_outflow
  0       0                       0                       1                
  6   260   # damExp5.port_a.Xi_outflow[1]
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6   260   # damExp5.port_b.p
  0 2.6100000000000001E-001       0                       0                
  6   256   # damExp5.m_flow_nominal
  0 2.6100000000000001E-005       0                 1.0000000000000000E+100
  6   256   # damExp5.m_flow_small
  0       0                       0                       0                
  6   257   # damExp5.show_T
  0       0                       0                       0                
  6   256   # damExp5.dp
  0       0                       0                       0                
  6  1280   # damExp5._m_flow_start
  0       0                       0                       0                
  6  1280   # damExp5._dp_start
  0       1                       0                       0                
  6   769   # damExp5.homotopyInitialization
  0       0                       0                       0                
  6   257   # damExp5.from_dp
  0     100                       0                       0                
  6   256   # damExp5.dp_nominal
  0       0                       0                       0                
  6   257   # damExp5.linearized
  0       0                       0                 1.0000000000000000E+100
  6   256   # damExp5.m_flow_turbulent
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # damExp5.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # damExp5.sta_default.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # damExp5.sta_default.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # damExp5.sta_default.X[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # damExp5.eta_default
  0 2.6100000000000001E-001       0                       0                
  6  1280   # damExp5.m_flow_nominal_pos
  0     100                       0                       0                
  6  1280   # damExp5.dp_nominal_pos
  0       1                       0                       0                
  6   257   # damExp5.use_inputFilter
 -1     180                       0                       0                
  1   280   # damExp5.riseTime
  0       2                       1                 1.0000000000000000E+100
  6   258   # damExp5.order
  0       4                       1                       4                
  6   258   # damExp5.init
 -1       1                       0                       0                
  1   280   # damExp5.y_start
  0       0                       0                       1                
  6   256   # damExp5.y
  0       0                       0                       0                
  6   256   # damExp5.y_actual
  0       0                       0                       0                
  6  1281   # damExp5.casePreInd
  0       1                       1                       4                
  6  1282   # damExp5.filter.analogFilter
  0       1                       1                       4                
  6  1282   # damExp5.filter.filterType
  0       2                       1                 1.0000000000000000E+100
  6  1282   # damExp5.filter.order
  0       0                       0                       0                
  6  1280   # damExp5.filter.f_cut
 -1       1                       0                       0                
  1  1304   # damExp5.filter.gain
 -1 5.0000000000000000E-001       0                       0                
  1  1304   # damExp5.filter.A_ripple
 -1       0                       0                       0                
  1  1304   # damExp5.filter.f_min
 -1       1                       0                       0                
  1  1305   # damExp5.filter.normalized
  0       4                       1                       4                
  6  1282   # damExp5.filter.init
  0       2                       0                       0                
  6  1282   # damExp5.filter.nx
 -1       0                       0                       0                
  1  1304   # damExp5.filter.x_start[1]
 -1       0                       0                       0                
  1  1304   # damExp5.filter.x_start[2]
  0       0                       0                       0                
  6  1280   # damExp5.filter.y_start
 -1       1                       0                       0                
  1  1304   # damExp5.filter.u_nominal
 -1       0                       0                       0                
  2  1296   # damExp5.filter.x[1]
  0       0                       0                       0                
  3  1280   # damExp5.filter.der(x[1])
 -1       0                       0                       0                
  2  1296   # damExp5.filter.x[2]
  0       0                       0                       0                
  3  1280   # damExp5.filter.der(x[2])
  0       2                       0                       0                
  6  1282   # damExp5.filter.ncr
  0       0                       0                       0                
  6  1282   # damExp5.filter.nc0
  0       0                       0                       0                
  6  1282   # damExp5.filter.na
  0       2                       0                       0                
  6  1282   # damExp5.filter.nr
  0       0                       0                       0                
  6  1280   # damExp5.filter.cr[1]
  0       0                       0                       0                
  6  1280   # damExp5.filter.cr[2]
  0       0                       0                       0                
  6  1280   # damExp5.filter.r[1]
  0       0                       0                       0                
  6  1280   # damExp5.filter.r[2]
  0       0                       0                       0                
  6  1280   # damExp5.filter.uu[1]
  0     100                       0                       0                
  6   256   # damExp5.dpDamper_nominal
  0       0                       0                       0                
  6   256   # damExp5.dpFixed_nominal
 -1       1                       0                       0                
  1   281   # damExp5.use_deltaM
 -1 2.9999999999999999E-001       0                       0                
  1   280   # damExp5.deltaM
  0       0                       0                       0                
  6   256   # damExp5.v_nominal
  0       0                       0                       0                
  6   256   # damExp5.A
 -1       0                       0                       0                
  1   281   # damExp5.roundDuct
 -1    4000                       0                       0                
  1   280   # damExp5.ReC
 -1 -1.5100000000000000E+000       0                       0                
  1   280   # damExp5.a
 -1 9.4499999999999993E+000       0                       0                
  1   280   # damExp5.b
 -1 1.6666666666666666E-001       0                       0                
  1   280   # damExp5.yL
 -1 6.1111111111111116E-001       0                       0                
  1   280   # damExp5.yU
  0       0                       0                 1.0000000000000000E+100
  6   256   # damExp5.k0
 -1 4.5000000000000001E-001       0                 1.0000000000000000E+100
  1   280   # damExp5.k1
 -1 1.0000000000000000E-004 1.0000000000000000E-010       1                
  1   280   # damExp5.l
  0       1                       0                       0                
  6   257   # damExp5.use_constant_density
  0 9.9999999999999995E+059       0                       0                
  6   256   # damExp5.kFixed
  0       0                       0                       0                
  6   256   # damExp5.kDam
  0       1                       0                  100000                
  6  1280   # damExp5.rho_default
  0       0                       0                       0                
  6  1280   # damExp5.facRouDuc
  0       0                       0                       0                
  6  1280   # damExp5.kL
  0       0                       0                       0                
  6  1280   # damExp5.kU
  0       0                       0                       0                
  6  1280   # damExp5.cL[1]
  0       0                       0                       0                
  6  1280   # damExp5.cL[2]
  0       0                       0                       0                
  6  1280   # damExp5.cL[3]
  0       0                       0                       0                
  6  1280   # damExp5.cU[1]
  0       0                       0                       0                
  6  1280   # damExp5.cU[2]
  0       0                       0                       0                
  6  1280   # damExp5.cU[3]
  0       0                       0                       0                
  6  1280   # damExp5.kDamMax
  0       0                       0                       0                
  6  1280   # damExp5.kTotMax
  0       0                       0                       0                
  6  1280   # damExp5.kDamMin
  0       0                       0                       0                
  6  1280   # damExp5.kTotMin
  0       1                       0                       0                
  6   257   # ori.allowFlowReversal
  0       0                       0                       0                
  6   256   # ori.m_flow_nominal
  0       0                       0                 1.0000000000000000E+100
  6   256   # ori.m_flow_small
  0       0                       0                       0                
  6   257   # ori.show_T
  0       0                       0                       0                
  6   256   # ori.dp
  0       0                       0                       0                
  6  1280   # ori._m_flow_start
  0       0                       0                       0                
  6  1280   # ori._dp_start
  0       1                       0                       0                
  6   257   # ori.forceErrorControlOnFlow
  0       1                       0                       0                
  6   769   # ori.homotopyInitialization
 -1 5.0000000000000000E-001 5.0000000000000000E-001       1                
  1   280   # ori.m
  0       1                       0                       0                
  6   257   # ori.useDefaultProperties
 -1 1.0000000000000001E-001       0                 1.0000000000000000E+100
  1   280   # ori.dp_turbulent
  0       0                       0                       0                
  6   256   # ori.V_flow
  0       0                       0                       0                
  6   256   # ori.v
  0 1.5000000000000000E+000       1                 1.0000000000000000E+100
  6  1280   # ori.gamma
  0       0                       0                       0                
  6  1280   # ori.k
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # ori.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # ori.sta_default.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # ori.sta_default.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # ori.sta_default.X[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # ori.rho_default
  0       0                       0                 1.0000000000000000E+100
  6  1280   # ori.dynVis_default
  0 1.5000000000000000E+000       0                       0                
  6  1280   # ori.a
  0       0                       0                       0                
  6  1280   # ori.b
  0       0                       0                       0                
  6  1280   # ori.c
  0       0                       0                       0                
  6  1280   # ori.d
 -1       0                       0                       0                
  2  1296   # ori.mExc
  0       0                       0                       0                
  3  1280   # ori.der(mExc)
 -1 4.2220000000000001E-003       0                       0                
  1   280   # ori.A
 -1 6.5000000000000002E-001       0                       0                
  1   280   # ori.CD
  0       1                       0                       0                
  6   257   # ori1.allowFlowReversal
  0       0                       0                       0                
  6   256   # ori1.m_flow_nominal
  0       0                       0                 1.0000000000000000E+100
  6   256   # ori1.m_flow_small
  0       0                       0                       0                
  6   257   # ori1.show_T
  0       0                       0                       0                
  6   256   # ori1.dp
  0       0                       0                       0                
  6  1280   # ori1._m_flow_start
  0       0                       0                       0                
  6  1280   # ori1._dp_start
  0       1                       0                       0                
  6   257   # ori1.forceErrorControlOnFlow
  0       1                       0                       0                
  6   769   # ori1.homotopyInitialization
 -1 5.0000000000000000E-001 5.0000000000000000E-001       1                
  1   280   # ori1.m
  0       1                       0                       0                
  6   257   # ori1.useDefaultProperties
 -1 1.0000000000000001E-001       0                 1.0000000000000000E+100
  1   280   # ori1.dp_turbulent
  0       0                       0                       0                
  6   256   # ori1.V_flow
  0       0                       0                       0                
  6   256   # ori1.v
  0 1.5000000000000000E+000       1                 1.0000000000000000E+100
  6  1280   # ori1.gamma
  0       0                       0                       0                
  6  1280   # ori1.k
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # ori1.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # ori1.sta_default.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # ori1.sta_default.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # ori1.sta_default.X[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # ori1.rho_default
  0       0                       0                 1.0000000000000000E+100
  6  1280   # ori1.dynVis_default
  0 1.5000000000000000E+000       0                       0                
  6  1280   # ori1.a
  0       0                       0                       0                
  6  1280   # ori1.b
  0       0                       0                       0                
  6  1280   # ori1.c
  0       0                       0                       0                
  6  1280   # ori1.d
 -1       0                       0                       0                
  2  1296   # ori1.mExc
  0       0                       0                       0                
  3  1280   # ori1.der(mExc)
 -1 4.2220000000000001E-003       0                       0                
  1   280   # ori1.A
 -1 6.5000000000000002E-001       0                       0                
  1   280   # ori1.CD
  0       1                       0                       0                
  6   257   # ori5.allowFlowReversal
  0       0                       0                       0                
  6   256   # ori5.m_flow_nominal
  0       0                       0                 1.0000000000000000E+100
  6   256   # ori5.m_flow_small
  0       0                       0                       0                
  6   257   # ori5.show_T
  0       0                       0                       0                
  6   256   # ori5.dp
  0       0                       0                       0                
  6  1280   # ori5._m_flow_start
  0       0                       0                       0                
  6  1280   # ori5._dp_start
  0       1                       0                       0                
  6   257   # ori5.forceErrorControlOnFlow
  0       1                       0                       0                
  6   769   # ori5.homotopyInitialization
 -1 5.0000000000000000E-001 5.0000000000000000E-001       1                
  1   280   # ori5.m
  0       1                       0                       0                
  6   257   # ori5.useDefaultProperties
 -1 1.0000000000000001E-001       0                 1.0000000000000000E+100
  1   280   # ori5.dp_turbulent
  0       0                       0                       0                
  6   256   # ori5.V_flow
  0       0                       0                       0                
  6   256   # ori5.v
  0 1.5000000000000000E+000       1                 1.0000000000000000E+100
  6  1280   # ori5.gamma
  0       0                       0                       0                
  6  1280   # ori5.k
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # ori5.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # ori5.sta_default.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # ori5.sta_default.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # ori5.sta_default.X[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # ori5.rho_default
  0       0                       0                 1.0000000000000000E+100
  6  1280   # ori5.dynVis_default
  0 1.5000000000000000E+000       0                       0                
  6  1280   # ori5.a
  0       0                       0                       0                
  6  1280   # ori5.b
  0       0                       0                       0                
  6  1280   # ori5.c
  0       0                       0                       0                
  6  1280   # ori5.d
 -1       0                       0                       0                
  2  1296   # ori5.mExc
  0       0                       0                       0                
  3  1280   # ori5.der(mExc)
 -1 7.7999999999999999E-004       0                       0                
  1   280   # ori5.A
 -1 6.5000000000000002E-001       0                       0                
  1   280   # ori5.CD
  0       4                       1                 1.0000000000000000E+100
  6   258   # combiTimeTable.nout
  0       0                       0                       0                
  6   256   # combiTimeTable.y[1]
  0       0                       0                       0                
  6   256   # combiTimeTable.y[2]
  0       0                       0                       0                
  6   256   # combiTimeTable.y[3]
  0       0                       0                       0                
  6   256   # combiTimeTable.y[4]
  0       0                       0                       0                
  6   257   # combiTimeTable.tableOnFile
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[1, 1]
 -1 2.3100000000000001E-001       0                       0                
  1   280   # combiTimeTable.table[1, 2]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[1, 3]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[1, 4]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[1, 5]
 -1   25200                       0                       0                
  1   280   # combiTimeTable.table[2, 1]
 -1 4.6301803144454956E-001       0                       0                
  1   280   # combiTimeTable.table[2, 2]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[2, 3]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[2, 4]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[2, 5]
 -1   28740                       0                       0                
  1   280   # combiTimeTable.table[3, 1]
 -1 6.3054610076129425E-001       0                       0                
  1   280   # combiTimeTable.table[3, 2]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[3, 3]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[3, 4]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[3, 5]
 -1   28800                       0                       0                
  1   280   # combiTimeTable.table[4, 1]
 -1 6.0315320737123490E-001       0                       0                
  1   280   # combiTimeTable.table[4, 2]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[4, 3]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[4, 4]
 -1       3                       0                       0                
  1   280   # combiTimeTable.table[4, 5]
 -1   30540                       0                       0                
  1   280   # combiTimeTable.table[5, 1]
 -1 5.4434023606136439E-001       0                       0                
  1   280   # combiTimeTable.table[5, 2]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[5, 3]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[5, 4]
 -1       3                       0                       0                
  1   280   # combiTimeTable.table[5, 5]
 -1   30600                       0                       0                
  1   280   # combiTimeTable.table[6, 1]
 -1 5.1985918213203552E-001       0                       0                
  1   280   # combiTimeTable.table[6, 2]
 -1       1                       0                       0                
  1   280   # combiTimeTable.table[6, 3]
 -1       2                       0                       0                
  1   280   # combiTimeTable.table[6, 4]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[6, 5]
 -1   36000                       0                       0                
  1   280   # combiTimeTable.table[7, 1]
 -1 5.3445417329549783E-001       0                       0                
  1   280   # combiTimeTable.table[7, 2]
 -1       1                       0                       0                
  1   280   # combiTimeTable.table[7, 3]
 -1       2                       0                       0                
  1   280   # combiTimeTable.table[7, 4]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[7, 5]
 -1   36060                       0                       0                
  1   280   # combiTimeTable.table[8, 1]
 -1 5.9786138673841949E-001       0                       0                
  1   280   # combiTimeTable.table[8, 2]
 -1       1                       0                       0                
  1   280   # combiTimeTable.table[8, 3]
 -1       2                       0                       0                
  1   280   # combiTimeTable.table[8, 4]
 -1       1                       0                       0                
  1   280   # combiTimeTable.table[8, 5]
 -1   37800                       0                       0                
  1   280   # combiTimeTable.table[9, 1]
 -1 5.4589494191899890E-001       0                       0                
  1   280   # combiTimeTable.table[9, 2]
 -1       1                       0                       0                
  1   280   # combiTimeTable.table[9, 3]
 -1       2                       0                       0                
  1   280   # combiTimeTable.table[9, 4]
 -1       1                       0                       0                
  1   280   # combiTimeTable.table[9, 5]
 -1   37860                       0                       0                
  1   280   # combiTimeTable.table[10, 1]
 -1 5.4912345204591750E-001       0                       0                
  1   280   # combiTimeTable.table[10, 2]
 -1       1                       0                       0                
  1   280   # combiTimeTable.table[10, 3]
 -1       2                       0                       0                
  1   280   # combiTimeTable.table[10, 4]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[10, 5]
 -1   43140                       0                       0                
  1   280   # combiTimeTable.table[11, 1]
 -1 5.4945745463132845E-001       0                       0                
  1   280   # combiTimeTable.table[11, 2]
 -1       1                       0                       0                
  1   280   # combiTimeTable.table[11, 3]
 -1       2                       0                       0                
  1   280   # combiTimeTable.table[11, 4]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[11, 5]
 -1   43200                       0                       0                
  1   280   # combiTimeTable.table[12, 1]
 -1 5.7238179026663305E-001       0                       0                
  1   280   # combiTimeTable.table[12, 2]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[12, 3]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[12, 4]
 -1       3                       0                       0                
  1   280   # combiTimeTable.table[12, 5]
 -1   44940                       0                       0                
  1   280   # combiTimeTable.table[13, 1]
 -1 4.8510627169132231E-001       0                       0                
  1   280   # combiTimeTable.table[13, 2]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[13, 3]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[13, 4]
 -1       3                       0                       0                
  1   280   # combiTimeTable.table[13, 5]
 -1   45000                       0                       0                
  1   280   # combiTimeTable.table[14, 1]
 -1 4.9192457167625425E-001       0                       0                
  1   280   # combiTimeTable.table[14, 2]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[14, 3]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[14, 4]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[14, 5]
 -1   48540                       0                       0                
  1   280   # combiTimeTable.table[15, 1]
 -1 3.8337207004308699E-001       0                       0                
  1   280   # combiTimeTable.table[15, 2]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[15, 3]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[15, 4]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[15, 5]
 -1   48600                       0                       0                
  1   280   # combiTimeTable.table[16, 1]
 -1 6.2004954758584496E-001       0                       0                
  1   280   # combiTimeTable.table[16, 2]
 -1       2                       0                       0                
  1   280   # combiTimeTable.table[16, 3]
 -1       1                       0                       0                
  1   280   # combiTimeTable.table[16, 4]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[16, 5]
 -1   53940                       0                       0                
  1   280   # combiTimeTable.table[17, 1]
 -1 6.4837707036137582E-001       0                       0                
  1   280   # combiTimeTable.table[17, 2]
 -1       2                       0                       0                
  1   280   # combiTimeTable.table[17, 3]
 -1       1                       0                       0                
  1   280   # combiTimeTable.table[17, 4]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[17, 5]
 -1   54000                       0                       0                
  1   280   # combiTimeTable.table[18, 1]
 -1 6.5614400206446644E-001       0                       0                
  1   280   # combiTimeTable.table[18, 2]
 -1       2                       0                       0                
  1   280   # combiTimeTable.table[18, 3]
 -1       1                       0                       0                
  1   280   # combiTimeTable.table[18, 4]
 -1       1                       0                       0                
  1   280   # combiTimeTable.table[18, 5]
 -1   55740                       0                       0                
  1   280   # combiTimeTable.table[19, 1]
 -1 5.8983690002739431E-001       0                       0                
  1   280   # combiTimeTable.table[19, 2]
 -1       2                       0                       0                
  1   280   # combiTimeTable.table[19, 3]
 -1       1                       0                       0                
  1   280   # combiTimeTable.table[19, 4]
 -1       1                       0                       0                
  1   280   # combiTimeTable.table[19, 5]
 -1   55800                       0                       0                
  1   280   # combiTimeTable.table[20, 1]
 -1 6.0679740707159036E-001       0                       0                
  1   280   # combiTimeTable.table[20, 2]
 -1       2                       0                       0                
  1   280   # combiTimeTable.table[20, 3]
 -1       1                       0                       0                
  1   280   # combiTimeTable.table[20, 4]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[20, 5]
 -1   64740                       0                       0                
  1   280   # combiTimeTable.table[21, 1]
 -1 6.4448306628048413E-001       0                       0                
  1   280   # combiTimeTable.table[21, 2]
 -1       2                       0                       0                
  1   280   # combiTimeTable.table[21, 3]
 -1       1                       0                       0                
  1   280   # combiTimeTable.table[21, 4]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[21, 5]
 -1   64800                       0                       0                
  1   280   # combiTimeTable.table[22, 1]
 -1 6.7225523685157285E-001       0                       0                
  1   280   # combiTimeTable.table[22, 2]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[22, 3]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[22, 4]
 -1       3                       0                       0                
  1   280   # combiTimeTable.table[22, 5]
 -1   66540                       0                       0                
  1   280   # combiTimeTable.table[23, 1]
 -1 4.8805353178247807E-001       0                       0                
  1   280   # combiTimeTable.table[23, 2]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[23, 3]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[23, 4]
 -1       3                       0                       0                
  1   280   # combiTimeTable.table[23, 5]
 -1   66600                       0                       0                
  1   280   # combiTimeTable.table[24, 1]
 -1 4.9691232787147160E-001       0                       0                
  1   280   # combiTimeTable.table[24, 2]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[24, 3]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[24, 4]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[24, 5]
 -1   68400                       0                       0                
  1   280   # combiTimeTable.table[25, 1]
 -1 4.1318284332454203E-001       0                       0                
  1   280   # combiTimeTable.table[25, 2]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[25, 3]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[25, 4]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[25, 5]
 -1   86400                       0                       0                
  1   280   # combiTimeTable.table[26, 1]
 -1 6.3286355706632125E-001       0                       0                
  1   280   # combiTimeTable.table[26, 2]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[26, 3]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[26, 4]
 -1       0                       0                       0                
  1   280   # combiTimeTable.table[26, 5]
 -1       1                       0                       0                
  1   281   # combiTimeTable.verboseRead
  0       2                       0                       0                
  6   258   # combiTimeTable.columns[1]
  0       3                       0                       0                
  6   258   # combiTimeTable.columns[2]
  0       4                       0                       0                
  6   258   # combiTimeTable.columns[3]
  0       5                       0                       0                
  6   258   # combiTimeTable.columns[4]
  0       3                       1                       5                
  6   258   # combiTimeTable.smoothness
 -1       2                       1                       4                
  1   282   # combiTimeTable.extrapolation
 -1       0                       0                       0                
  1   280   # combiTimeTable.offset[1]
 -1       0                       0                       0                
  1   280   # combiTimeTable.startTime
  0       1                 1.0000000000000001E-015 1.0000000000000000E+100
  6   256   # combiTimeTable.timeScale
  0       0                       0                       0                
  6   256   # combiTimeTable.t_min
  0       0                       0                       0                
  6   256   # combiTimeTable.t_max
  0       0                       0                       0                
  6   256   # combiTimeTable.t_minScaled
  0       0                       0                       0                
  6   256   # combiTimeTable.t_maxScaled
  0       0                       0                       0                
  6  1280   # combiTimeTable.p_offset[1]
  0       0                       0                       0                
  6  1280   # combiTimeTable.p_offset[2]
  0       0                       0                       0                
  6  1280   # combiTimeTable.p_offset[3]
  0       0                       0                       0                
  6  1280   # combiTimeTable.p_offset[4]
  0       0                       0                       0                
  6  1282   # combiTimeTable.tableID.id
  0       0                       0                       0                
  6  1352   # combiTimeTable.nextTimeEvent
  0       0                       0                       0                
  6  1352   # combiTimeTable.nextTimeEventScaled
  0       0                       0                       0                
  6  1280   # combiTimeTable.tableOnFileRead
  0 1.7976931348623157E+308       0                       0                
  6  1280   # combiTimeTable.DBL_MAX
  0       0                       0                       0                
  6  1280   # combiTimeTable.timeScaled
  0       1                       0                       0                
  6   769   # realValue.use_numberPort
  0       0                       0                       0                
  6   768   # realValue.number
 -1       2                       1                 1.0000000000000000E+100
  1   282   # realValue.significantDigits
  0       1                       0                       0                
  6   769   # realValue2.use_numberPort
  0       0                       0                       0                
  6   768   # realValue2.number
 -1       2                       1                 1.0000000000000000E+100
  1   282   # realValue2.significantDigits
  0       1                       0                       0                
  6   769   # realValue3.use_numberPort
  0       0                       0                       0                
  6   768   # realValue3.number
 -1       2                       1                 1.0000000000000000E+100
  1   282   # realValue3.significantDigits
  0       0                       0                  100000                
  6   388   # senRelPre.port_a.m_flow
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # senRelPre.port_a.h_outflow
  0       0                       0                       1                
  6   260   # senRelPre.port_a.Xi_outflow[1]
  0       0                       0                  100000                
  6   388   # senRelPre.port_b.m_flow
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # senRelPre.port_b.h_outflow
  0       0                       0                       1                
  6   260   # senRelPre.port_b.Xi_outflow[1]
  0       0                       0                       0                
  6   256   # senRelPre.p_rel
  0       0                       0                  100000                
  6   388   # senRelPre1.port_a.m_flow
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # senRelPre1.port_a.h_outflow
  0       0                       0                       1                
  6   260   # senRelPre1.port_a.Xi_outflow[1]
  0       0                       0                  100000                
  6   388   # senRelPre1.port_b.m_flow
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # senRelPre1.port_b.h_outflow
  0       0                       0                       1                
  6   260   # senRelPre1.port_b.Xi_outflow[1]
  0       0                       0                       0                
  6   256   # senRelPre1.p_rel
  0       0                       0                  100000                
  6   388   # senRelPre2.port_a.m_flow
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # senRelPre2.port_a.h_outflow
  0       0                       0                       1                
  6   260   # senRelPre2.port_a.Xi_outflow[1]
  0       0                       0                  100000                
  6   388   # senRelPre2.port_b.m_flow
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # senRelPre2.port_b.h_outflow
  0       0                       0                       1                
  6   260   # senRelPre2.port_b.Xi_outflow[1]
  0       0                       0                       0                
  6   256   # senRelPre2.p_rel
  0       0                       0                  100000                
  6   388   # senRelPre3.port_a.m_flow
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # senRelPre3.port_a.h_outflow
  0       0                       0                       1                
  6   260   # senRelPre3.port_a.Xi_outflow[1]
  0       0                       0                  100000                
  6   388   # senRelPre3.port_b.m_flow
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # senRelPre3.port_b.h_outflow
  0       0                       0                       1                
  6   260   # senRelPre3.port_b.Xi_outflow[1]
  0       0                       0                       0                
  6   256   # senRelPre3.p_rel
  0       0                       0                       0                
  6   256   # conPID.u_s
  0       0                       0                       0                
  6   256   # conPID.controlError
  0       4                       1                       4                
  6   258   # conPID.controllerType
 -1      50                       0                 1.0000000000000000E+100
  1   280   # conPID.k
 -1      15                 9.9999999999999997E-061 1.0000000000000000E+100
  1   280   # conPID.Ti
 -1      10                       0                 1.0000000000000000E+100
  1   280   # conPID.Td
 -1       1                       0                       0                
  1   280   # conPID.yMax
 -1       0                       0                       0                
  1   280   # conPID.yMin
 -1       1                       0                 1.0000000000000000E+100
  1   280   # conPID.wp
 -1       0                       0                 1.0000000000000000E+100
  1   280   # conPID.wd
 -1 9.0000000000000002E-001 1.0000000000000000E-013 1.0000000000000000E+100
  1   280   # conPID.Ni
 -1      10                 1.0000000000000000E-013 1.0000000000000000E+100
  1   280   # conPID.Nd
  0       5                       1                       5                
  6   258   # conPID.initType
  0       0                       0                       0                
  6   256   # conPID.xi_start
 -1       0                       0                       0                
  1   280   # conPID.xd_start
 -1       0                       0                       0                
  1   280   # conPID.y_start
  0       1                       0                       0                
  6   257   # conPID.strict
 -1       0                       0                       0                
  1   281   # conPID.reverseAction
  0       1                       1                       3                
  6   258   # conPID.reset
  0       0                       0                       0                
  6   256   # conPID.y_reset
  0       0                       0                       0                
  6   256   # conPID.addP.y
  0       0                       0                       0                
  6   256   # conPID.addP.k1
  0       0                       0                       0                
  6   256   # conPID.addP.k2
 -1       1                       0                       0                
  1   280   # conPID.P.k
  0       0                       0                       0                
  6   256   # conPID.P.y
  0       1                       0                       0                
  6   256   # conPID.addPID.k1
  0       1                       0                       0                
  6   256   # conPID.addPID.k2
  0       1                       0                       0                
  6   256   # conPID.addPID.k3
  0       0                       0                       0                
  6   256   # conPID.addPID.u2
  0       0                       0                       0                
  6   256   # conPID.addPID.y
  0       1                       0                       0                
  6   768   # conPID.unitTime
  0       0                       0                       0                
  6  1280   # conPID.revAct
  0       1                       0                       0                
  6   769   # conPID.with_I
  0       1                       0                       0                
  6   769   # conPID.with_D
  0       0                       0                       0                
  6  1280   # conPID.y_reset_internal
  0       0                       0                       0                
  6  1280   # conPID.addI.k1
  0       0                       0                       0                
  6  1280   # conPID.addI.k2
 -1       1                       0                       0                
  1  1304   # conPID.addI.k3
  0       0                       0                       0                
  6  1280   # conPID.addI.u3
  0       0                       0                       0                
  6  1280   # conPID.addI.y
  0       0                       0                       0                
  6  1280   # conPID.addSat.y
  0       1                       0                       0                
  6  1280   # conPID.addSat.k1
  0      -1                       0                       0                
  6  1280   # conPID.addSat.k2
  0       1                       0                       0                
  6  1280   # conPID.gainPID.k
  0       0                       0                       0                
  6  1280   # conPID.gainPID.y
  0       1                       0                       0                
  6  1280   # conPID.gainTrack.k
  0       1                       0                       0                
  6  1280   # conPID.limiter.uMax
  0       0                       0                       0                
  6  1280   # conPID.limiter.uMin
  0       1                       0                       0                
  6  1281   # conPID.limiter.strict
  0       1                       0                       0                
  6  1281   # conPID.limiter.limitsAtInit
  0       0                       0                  100000                
  6   388   # senRelPre4.port_a.m_flow
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # senRelPre4.port_a.h_outflow
  0       0                       0                       1                
  6   260   # senRelPre4.port_a.Xi_outflow[1]
  0       0                       0                  100000                
  6   388   # senRelPre4.port_b.m_flow
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # senRelPre4.port_b.h_outflow
  0       0                       0                       1                
  6   260   # senRelPre4.port_b.Xi_outflow[1]
  0       0                       0                       0                
  6   256   # senRelPre4.p_rel
  0       0                       0                  100000                
  6   388   # senRelPre5.port_a.m_flow
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # senRelPre5.port_a.h_outflow
  0       0                       0                       1                
  6   260   # senRelPre5.port_a.Xi_outflow[1]
  0       0                       0                  100000                
  6   388   # senRelPre5.port_b.m_flow
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # senRelPre5.port_b.h_outflow
  0       0                       0                       1                
  6   260   # senRelPre5.port_b.Xi_outflow[1]
  0       0                       0                       0                
  6   256   # senRelPre5.p_rel
  0       0                       0                       0                
  6   256   # realExpression7.y
  0       0                       0                       0                
  6   256   # realExpression8.y
  0       1                       1                 1.0000000000000000E+100
  6   258   # combiTimeTable_huanchong.nout
  0       0                       0                       0                
  6   256   # combiTimeTable_huanchong.y[1]
  0       0                       0                       0                
  6   257   # combiTimeTable_huanchong.tableOnFile
 -1       0                       0                       0                
  1   280   # combiTimeTable_huanchong.table[1, 1]
 -1 2.9999999999999999E-001       0                       0                
  1   280   # combiTimeTable_huanchong.table[1, 2]
 -1   25200                       0                       0                
  1   280   # combiTimeTable_huanchong.table[2, 1]
 -1 6.1486404061317446E-001       0                       0                
  1   280   # combiTimeTable_huanchong.table[2, 2]
 -1   28740                       0                       0                
  1   280   # combiTimeTable_huanchong.table[3, 1]
 -1 7.8038306772708887E-001       0                       0                
  1   280   # combiTimeTable_huanchong.table[3, 2]
 -1   28800                       0                       0                
  1   280   # combiTimeTable_huanchong.table[4, 1]
 -1 9.4199381768703461E-001       0                       0                
  1   280   # combiTimeTable_huanchong.table[4, 2]
 -1   30540                       0                       0                
  1   280   # combiTimeTable_huanchong.table[5, 1]
 -1 9.8999999999999999E-001       0                       0                
  1   280   # combiTimeTable_huanchong.table[5, 2]
 -1   30600                       0                       0                
  1   280   # combiTimeTable_huanchong.table[6, 1]
 -1 8.7979274511337269E-001       0                       0                
  1   280   # combiTimeTable_huanchong.table[6, 2]
 -1   36000                       0                       0                
  1   280   # combiTimeTable_huanchong.table[7, 1]
 -1 7.1283739149570469E-001       0                       0                
  1   280   # combiTimeTable_huanchong.table[7, 2]
 -1   36060                       0                       0                
  1   280   # combiTimeTable_huanchong.table[8, 1]
 -1 8.8536136865615833E-001       0                       0                
  1   280   # combiTimeTable_huanchong.table[8, 2]
 -1   37800                       0                       0                
  1   280   # combiTimeTable_huanchong.table[9, 1]
 -1 8.2538581252098076E-001       0                       0                
  1   280   # combiTimeTable_huanchong.table[9, 2]
 -1   37860                       0                       0                
  1   280   # combiTimeTable_huanchong.table[10, 1]
 -1 8.1559457659721368E-001       0                       0                
  1   280   # combiTimeTable_huanchong.table[10, 2]
 -1   43140                       0                       0                
  1   280   # combiTimeTable_huanchong.table[11, 1]
 -1 7.3258992433547965E-001       0                       0                
  1   280   # combiTimeTable_huanchong.table[11, 2]
 -1   43200                       0                       0                
  1   280   # combiTimeTable_huanchong.table[12, 1]
 -1 8.6454800069332127E-001       0                       0                
  1   280   # combiTimeTable_huanchong.table[12, 2]
 -1   44940                       0                       0                
  1   280   # combiTimeTable_huanchong.table[13, 1]
 -1 9.8999999999999999E-001       0                       0                
  1   280   # combiTimeTable_huanchong.table[13, 2]
 -1   45000                       0                       0                
  1   280   # combiTimeTable_huanchong.table[14, 1]
 -1 9.8999999999999999E-001       0                       0                
  1   280   # combiTimeTable_huanchong.table[14, 2]
 -1   48540                       0                       0                
  1   280   # combiTimeTable_huanchong.table[15, 1]
 -1 2.9999999999999999E-001       0                       0                
  1   280   # combiTimeTable_huanchong.table[15, 2]
 -1   48600                       0                       0                
  1   280   # combiTimeTable_huanchong.table[16, 1]
 -1 9.7464803695678714E-001       0                       0                
  1   280   # combiTimeTable_huanchong.table[16, 2]
 -1   53940                       0                       0                
  1   280   # combiTimeTable_huanchong.table[17, 1]
 -1 8.2150735259056096E-001       0                       0                
  1   280   # combiTimeTable_huanchong.table[17, 2]
 -1   54000                       0                       0                
  1   280   # combiTimeTable_huanchong.table[18, 1]
 -1 9.2316508412361142E-001       0                       0                
  1   280   # combiTimeTable_huanchong.table[18, 2]
 -1   55740                       0                       0                
  1   280   # combiTimeTable_huanchong.table[19, 1]
 -1 9.3561042308807374E-001       0                       0                
  1   280   # combiTimeTable_huanchong.table[19, 2]
 -1   55800                       0                       0                
  1   280   # combiTimeTable_huanchong.table[20, 1]
 -1 8.6372142612934111E-001       0                       0                
  1   280   # combiTimeTable_huanchong.table[20, 2]
 -1   64740                       0                       0                
  1   280   # combiTimeTable_huanchong.table[21, 1]
 -1 8.6425994575023646E-001       0                       0                
  1   280   # combiTimeTable_huanchong.table[21, 2]
 -1   64800                       0                       0                
  1   280   # combiTimeTable_huanchong.table[22, 1]
 -1 9.7426900863647448E-001       0                       0                
  1   280   # combiTimeTable_huanchong.table[22, 2]
 -1   66540                       0                       0                
  1   280   # combiTimeTable_huanchong.table[23, 1]
 -1 9.8999999999999999E-001       0                       0                
  1   280   # combiTimeTable_huanchong.table[23, 2]
 -1   66600                       0                       0                
  1   280   # combiTimeTable_huanchong.table[24, 1]
 -1 9.1995510578155515E-001       0                       0                
  1   280   # combiTimeTable_huanchong.table[24, 2]
 -1   68400                       0                       0                
  1   280   # combiTimeTable_huanchong.table[25, 1]
 -1 4.7916680216789242E-001       0                       0                
  1   280   # combiTimeTable_huanchong.table[25, 2]
 -1   86400                       0                       0                
  1   280   # combiTimeTable_huanchong.table[26, 1]
 -1 9.0254970252513878E-001       0                       0                
  1   280   # combiTimeTable_huanchong.table[26, 2]
 -1       1                       0                       0                
  1   281   # combiTimeTable_huanchong.verboseRead
  0       2                       0                       0                
  6   258   # combiTimeTable_huanchong.columns[1]
  0       3                       1                       5                
  6   258   # combiTimeTable_huanchong.smoothness
 -1       2                       1                       4                
  1   282   # combiTimeTable_huanchong.extrapolation
 -1       0                       0                       0                
  1   280   # combiTimeTable_huanchong.offset[1]
 -1       0                       0                       0                
  1   280   # combiTimeTable_huanchong.startTime
  0       1                 1.0000000000000001E-015 1.0000000000000000E+100
  6   256   # combiTimeTable_huanchong.timeScale
  0       0                       0                       0                
  6   256   # combiTimeTable_huanchong.t_min
  0       0                       0                       0                
  6   256   # combiTimeTable_huanchong.t_max
  0       0                       0                       0                
  6   256   # combiTimeTable_huanchong.t_minScaled
  0       0                       0                       0                
  6   256   # combiTimeTable_huanchong.t_maxScaled
  0       0                       0                       0                
  6  1280   # combiTimeTable_huanchong.p_offset[1]
  0       0                       0                       0                
  6  1282   # combiTimeTable_huanchong.tableID.id
  0       0                       0                       0                
  6  1352   # combiTimeTable_huanchong.nextTimeEvent
  0       0                       0                       0                
  6  1352   # combiTimeTable_huanchong.nextTimeEventScaled
  0       0                       0                       0                
  6  1280   # combiTimeTable_huanchong.tableOnFileRead
  0 1.7976931348623157E+308       0                       0                
  6  1280   # combiTimeTable_huanchong.DBL_MAX
  0       0                       0                       0                
  6  1280   # combiTimeTable_huanchong.timeScaled
  0       1                       1                 1.0000000000000000E+100
  6   258   # combiTimeTable_weisheng.nout
  0       0                       0                       0                
  6   256   # combiTimeTable_weisheng.y[1]
  0       0                       0                       0                
  6   257   # combiTimeTable_weisheng.tableOnFile
 -1       0                       0                       0                
  1   280   # combiTimeTable_weisheng.table[1, 1]
 -1 2.9999999999999999E-001       0                       0                
  1   280   # combiTimeTable_weisheng.table[1, 2]
 -1   25200                       0                       0                
  1   280   # combiTimeTable_weisheng.table[2, 1]
 -1 6.3297267794609069E-001       0                       0                
  1   280   # combiTimeTable_weisheng.table[2, 2]
 -1   28740                       0                       0                
  1   280   # combiTimeTable_weisheng.table[3, 1]
 -1 6.9322304606437679E-001       0                       0                
  1   280   # combiTimeTable_weisheng.table[3, 2]
 -1   28800                       0                       0                
  1   280   # combiTimeTable_weisheng.table[4, 1]
 -1 6.0451803982257846E-001       0                       0                
  1   280   # combiTimeTable_weisheng.table[4, 2]
 -1   30540                       0                       0                
  1   280   # combiTimeTable_weisheng.table[5, 1]
 -1 4.1342773094773289E-001       0                       0                
  1   280   # combiTimeTable_weisheng.table[5, 2]
 -1   30600                       0                       0                
  1   280   # combiTimeTable_weisheng.table[6, 1]
 -1 4.4108807936310768E-001       0                       0                
  1   280   # combiTimeTable_weisheng.table[6, 2]
 -1   36000                       0                       0                
  1   280   # combiTimeTable_weisheng.table[7, 1]
 -1 5.4052863299846643E-001       0                       0                
  1   280   # combiTimeTable_weisheng.table[7, 2]
 -1   36060                       0                       0                
  1   280   # combiTimeTable_weisheng.table[8, 1]
 -1 5.7017929136753076E-001       0                       0                
  1   280   # combiTimeTable_weisheng.table[8, 2]
 -1   37800                       0                       0                
  1   280   # combiTimeTable_weisheng.table[9, 1]
 -1 4.6925877526402471E-001       0                       0                
  1   280   # combiTimeTable_weisheng.table[9, 2]
 -1   37860                       0                       0                
  1   280   # combiTimeTable_weisheng.table[10, 1]
 -1 4.7432464957237241E-001       0                       0                
  1   280   # combiTimeTable_weisheng.table[10, 2]
 -1   43140                       0                       0                
  1   280   # combiTimeTable_weisheng.table[11, 1]
 -1 5.6512866497039793E-001       0                       0                
  1   280   # combiTimeTable_weisheng.table[11, 2]
 -1   43200                       0                       0                
  1   280   # combiTimeTable_weisheng.table[12, 1]
 -1 5.2713790297508234E-001       0                       0                
  1   280   # combiTimeTable_weisheng.table[12, 2]
 -1   44940                       0                       0                
  1   280   # combiTimeTable_weisheng.table[13, 1]
 -1 2.9999999999999999E-001       0                       0                
  1   280   # combiTimeTable_weisheng.table[13, 2]
 -1   45000                       0                       0                
  1   280   # combiTimeTable_weisheng.table[14, 1]
 -1 2.9999999999999999E-001       0                       0                
  1   280   # combiTimeTable_weisheng.table[14, 2]
 -1   48540                       0                       0                
  1   280   # combiTimeTable_weisheng.table[15, 1]
 -1 3.3266470670700071E-001       0                       0                
  1   280   # combiTimeTable_weisheng.table[15, 2]
 -1   48600                       0                       0                
  1   280   # combiTimeTable_weisheng.table[16, 1]
 -1 7.6108659446239468E-001       0                       0                
  1   280   # combiTimeTable_weisheng.table[16, 2]
 -1   53940                       0                       0                
  1   280   # combiTimeTable_weisheng.table[17, 1]
 -1 9.1073652505874625E-001       0                       0                
  1   280   # combiTimeTable_weisheng.table[17, 2]
 -1   54000                       0                       0                
  1   280   # combiTimeTable_weisheng.table[18, 1]
 -1 8.3893566370010375E-001       0                       0                
  1   280   # combiTimeTable_weisheng.table[18, 2]
 -1   55740                       0                       0                
  1   280   # combiTimeTable_weisheng.table[19, 1]
 -1 6.2200154364109039E-001       0                       0                
  1   280   # combiTimeTable_weisheng.table[19, 2]
 -1   55800                       0                       0                
  1   280   # combiTimeTable_weisheng.table[20, 1]
 -1 7.1844969213008869E-001       0                       0                
  1   280   # combiTimeTable_weisheng.table[20, 2]
 -1   64740                       0                       0                
  1   280   # combiTimeTable_weisheng.table[21, 1]
 -1 8.6123590350151047E-001       0                       0                
  1   280   # combiTimeTable_weisheng.table[21, 2]
 -1   64800                       0                       0                
  1   280   # combiTimeTable_weisheng.table[22, 1]
 -1 8.5098457753658296E-001       0                       0                
  1   280   # combiTimeTable_weisheng.table[22, 2]
 -1   66540                       0                       0                
  1   280   # combiTimeTable_weisheng.table[23, 1]
 -1 3.1097716972231865E-001       0                       0                
  1   280   # combiTimeTable_weisheng.table[23, 2]
 -1   66600                       0                       0                
  1   280   # combiTimeTable_weisheng.table[24, 1]
 -1 4.0076922968029971E-001       0                       0                
  1   280   # combiTimeTable_weisheng.table[24, 2]
 -1   68400                       0                       0                
  1   280   # combiTimeTable_weisheng.table[25, 1]
 -1 3.1461089193820951E-001       0                       0                
  1   280   # combiTimeTable_weisheng.table[25, 2]
 -1   86400                       0                       0                
  1   280   # combiTimeTable_weisheng.table[26, 1]
 -1 8.2055525779724126E-001       0                       0                
  1   280   # combiTimeTable_weisheng.table[26, 2]
 -1       1                       0                       0                
  1   281   # combiTimeTable_weisheng.verboseRead
  0       2                       0                       0                
  6   258   # combiTimeTable_weisheng.columns[1]
  0       3                       1                       5                
  6   258   # combiTimeTable_weisheng.smoothness
 -1       2                       1                       4                
  1   282   # combiTimeTable_weisheng.extrapolation
 -1       0                       0                       0                
  1   280   # combiTimeTable_weisheng.offset[1]
 -1       0                       0                       0                
  1   280   # combiTimeTable_weisheng.startTime
  0       1                 1.0000000000000001E-015 1.0000000000000000E+100
  6   256   # combiTimeTable_weisheng.timeScale
  0       0                       0                       0                
  6   256   # combiTimeTable_weisheng.t_min
  0       0                       0                       0                
  6   256   # combiTimeTable_weisheng.t_max
  0       0                       0                       0                
  6   256   # combiTimeTable_weisheng.t_minScaled
  0       0                       0                       0                
  6   256   # combiTimeTable_weisheng.t_maxScaled
  0       0                       0                       0                
  6  1280   # combiTimeTable_weisheng.p_offset[1]
  0       0                       0                       0                
  6  1282   # combiTimeTable_weisheng.tableID.id
  0       0                       0                       0                
  6  1352   # combiTimeTable_weisheng.nextTimeEvent
  0       0                       0                       0                
  6  1352   # combiTimeTable_weisheng.nextTimeEventScaled
  0       0                       0                       0                
  6  1280   # combiTimeTable_weisheng.tableOnFileRead
  0 1.7976931348623157E+308       0                       0                
  6  1280   # combiTimeTable_weisheng.DBL_MAX
  0       0                       0                       0                
  6  1280   # combiTimeTable_weisheng.timeScaled
  0       1                       1                 1.0000000000000000E+100
  6   258   # combiTimeTable_wujun.nout
  0       0                       0                       0                
  6   256   # combiTimeTable_wujun.y[1]
  0       0                       0                       0                
  6   257   # combiTimeTable_wujun.tableOnFile
 -1       0                       0                       0                
  1   280   # combiTimeTable_wujun.table[1, 1]
 -1 2.9999999999999999E-001       0                       0                
  1   280   # combiTimeTable_wujun.table[1, 2]
 -1   25200                       0                       0                
  1   280   # combiTimeTable_wujun.table[2, 1]
 -1 5.5353476196527485E-001       0                       0                
  1   280   # combiTimeTable_wujun.table[2, 2]
 -1   28740                       0                       0                
  1   280   # combiTimeTable_wujun.table[3, 1]
 -1 9.8999999999999999E-001       0                       0                
  1   280   # combiTimeTable_wujun.table[3, 2]
 -1   28800                       0                       0                
  1   280   # combiTimeTable_wujun.table[4, 1]
 -1 7.6615934729576107E-001       0                       0                
  1   280   # combiTimeTable_wujun.table[4, 2]
 -1   30540                       0                       0                
  1   280   # combiTimeTable_wujun.table[5, 1]
 -1 6.5119943261146540E-001       0                       0                
  1   280   # combiTimeTable_wujun.table[5, 2]
 -1   30600                       0                       0                
  1   280   # combiTimeTable_wujun.table[6, 1]
 -1 6.5642513751983644E-001       0                       0                
  1   280   # combiTimeTable_wujun.table[6, 2]
 -1   36000                       0                       0                
  1   280   # combiTimeTable_wujun.table[7, 1]
 -1 8.2286471486091606E-001       0                       0                
  1   280   # combiTimeTable_wujun.table[7, 2]
 -1   36060                       0                       0                
  1   280   # combiTimeTable_wujun.table[8, 1]
 -1 8.4715839028358464E-001       0                       0                
  1   280   # combiTimeTable_wujun.table[8, 2]
 -1   37800                       0                       0                
  1   280   # combiTimeTable_wujun.table[9, 1]
 -1 8.0351070463657370E-001       0                       0                
  1   280   # combiTimeTable_wujun.table[9, 2]
 -1   37860                       0                       0                
  1   280   # combiTimeTable_wujun.table[10, 1]
 -1 8.2391374647617344E-001       0                       0                
  1   280   # combiTimeTable_wujun.table[10, 2]
 -1   43140                       0                       0                
  1   280   # combiTimeTable_wujun.table[11, 1]
 -1 8.3697130501270278E-001       0                       0                
  1   280   # combiTimeTable_wujun.table[11, 2]
 -1   43200                       0                       0                
  1   280   # combiTimeTable_wujun.table[12, 1]
 -1 8.0890642940998081E-001       0                       0                
  1   280   # combiTimeTable_wujun.table[12, 2]
 -1   44940                       0                       0                
  1   280   # combiTimeTable_wujun.table[13, 1]
 -1 5.1640113204717630E-001       0                       0                
  1   280   # combiTimeTable_wujun.table[13, 2]
 -1   45000                       0                       0                
  1   280   # combiTimeTable_wujun.table[14, 1]
 -1 5.4481071531772607E-001       0                       0                
  1   280   # combiTimeTable_wujun.table[14, 2]
 -1   48540                       0                       0                
  1   280   # combiTimeTable_wujun.table[15, 1]
 -1 9.0262722730636602E-001       0                       0                
  1   280   # combiTimeTable_wujun.table[15, 2]
 -1   48600                       0                       0                
  1   280   # combiTimeTable_wujun.table[16, 1]
 -1 6.4208395779132843E-001       0                       0                
  1   280   # combiTimeTable_wujun.table[16, 2]
 -1   53940                       0                       0                
  1   280   # combiTimeTable_wujun.table[17, 1]
 -1 7.9929524838924404E-001       0                       0                
  1   280   # combiTimeTable_wujun.table[17, 2]
 -1   54000                       0                       0                
  1   280   # combiTimeTable_wujun.table[18, 1]
 -1 7.7845366716384889E-001       0                       0                
  1   280   # combiTimeTable_wujun.table[18, 2]
 -1   55740                       0                       0                
  1   280   # combiTimeTable_wujun.table[19, 1]
 -1 7.0120283424854279E-001       0                       0                
  1   280   # combiTimeTable_wujun.table[19, 2]
 -1   55800                       0                       0                
  1   280   # combiTimeTable_wujun.table[20, 1]
 -1 7.6439355075359339E-001       0                       0                
  1   280   # combiTimeTable_wujun.table[20, 2]
 -1   64740                       0                       0                
  1   280   # combiTimeTable_wujun.table[21, 1]
 -1 7.7975830435752869E-001       0                       0                
  1   280   # combiTimeTable_wujun.table[21, 2]
 -1   64800                       0                       0                
  1   280   # combiTimeTable_wujun.table[22, 1]
 -1 7.7129613518714901E-001       0                       0                
  1   280   # combiTimeTable_wujun.table[22, 2]
 -1   66540                       0                       0                
  1   280   # combiTimeTable_wujun.table[23, 1]
 -1 5.1784142732620242E-001       0                       0                
  1   280   # combiTimeTable_wujun.table[23, 2]
 -1   66600                       0                       0                
  1   280   # combiTimeTable_wujun.table[24, 1]
 -1 5.5159656018018721E-001       0                       0                
  1   280   # combiTimeTable_wujun.table[24, 2]
 -1   68400                       0                       0                
  1   280   # combiTimeTable_wujun.table[25, 1]
 -1 8.2593412041664127E-001       0                       0                
  1   280   # combiTimeTable_wujun.table[25, 2]
 -1   86400                       0                       0                
  1   280   # combiTimeTable_wujun.table[26, 1]
 -1 7.2477040886878963E-001       0                       0                
  1   280   # combiTimeTable_wujun.table[26, 2]
 -1       1                       0                       0                
  1   281   # combiTimeTable_wujun.verboseRead
  0       2                       0                       0                
  6   258   # combiTimeTable_wujun.columns[1]
  0       3                       1                       5                
  6   258   # combiTimeTable_wujun.smoothness
 -1       2                       1                       4                
  1   282   # combiTimeTable_wujun.extrapolation
 -1       0                       0                       0                
  1   280   # combiTimeTable_wujun.offset[1]
 -1       0                       0                       0                
  1   280   # combiTimeTable_wujun.startTime
  0       1                 1.0000000000000001E-015 1.0000000000000000E+100
  6   256   # combiTimeTable_wujun.timeScale
  0       0                       0                       0                
  6   256   # combiTimeTable_wujun.t_min
  0       0                       0                       0                
  6   256   # combiTimeTable_wujun.t_max
  0       0                       0                       0                
  6   256   # combiTimeTable_wujun.t_minScaled
  0       0                       0                       0                
  6   256   # combiTimeTable_wujun.t_maxScaled
  0       0                       0                       0                
  6  1280   # combiTimeTable_wujun.p_offset[1]
  0       0                       0                       0                
  6  1282   # combiTimeTable_wujun.tableID.id
  0       0                       0                       0                
  6  1352   # combiTimeTable_wujun.nextTimeEvent
  0       0                       0                       0                
  6  1352   # combiTimeTable_wujun.nextTimeEventScaled
  0       0                       0                       0                
  6  1280   # combiTimeTable_wujun.tableOnFileRead
  0 1.7976931348623157E+308       0                       0                
  6  1280   # combiTimeTable_wujun.DBL_MAX
  0       0                       0                       0                
  6  1280   # combiTimeTable_wujun.timeScaled
  0       0                       0                       0                
  6   256   # conPID2.u_m
  0       0                       0                       0                
  6   256   # conPID2.controlError
  0       4                       1                       4                
  6   258   # conPID2.controllerType
 -1      40                       0                 1.0000000000000000E+100
  1   280   # conPID2.k
 -1      50                 9.9999999999999997E-061 1.0000000000000000E+100
  1   280   # conPID2.Ti
 -1       1                       0                 1.0000000000000000E+100
  1   280   # conPID2.Td
 -1       1                       0                       0                
  1   280   # conPID2.yMax
 -1       0                       0                       0                
  1   280   # conPID2.yMin
 -1       1                       0                 1.0000000000000000E+100
  1   280   # conPID2.wp
 -1       0                       0                 1.0000000000000000E+100
  1   280   # conPID2.wd
 -1 9.0000000000000002E-001 1.0000000000000000E-013 1.0000000000000000E+100
  1   280   # conPID2.Ni
 -1      10                 1.0000000000000000E-013 1.0000000000000000E+100
  1   280   # conPID2.Nd
  0       5                       1                       5                
  6   258   # conPID2.initType
  0       0                       0                       0                
  6   256   # conPID2.xi_start
 -1       0                       0                       0                
  1   280   # conPID2.xd_start
 -1       0                       0                       0                
  1   280   # conPID2.y_start
  0       1                       0                       0                
  6   257   # conPID2.strict
 -1       0                       0                       0                
  1   281   # conPID2.reverseAction
  0       1                       1                       3                
  6   258   # conPID2.reset
  0       0                       0                       0                
  6   256   # conPID2.y_reset
  0       0                       0                       0                
  6   256   # conPID2.addP.y
  0       0                       0                       0                
  6   256   # conPID2.addP.k1
  0       0                       0                       0                
  6   256   # conPID2.addP.k2
 -1       1                       0                       0                
  1   280   # conPID2.P.k
  0       0                       0                       0                
  6   256   # conPID2.P.y
  0       1                       0                       0                
  6   256   # conPID2.addPID.k1
  0       1                       0                       0                
  6   256   # conPID2.addPID.k2
  0       1                       0                       0                
  6   256   # conPID2.addPID.k3
  0       0                       0                       0                
  6   256   # conPID2.addPID.u2
  0       0                       0                       0                
  6   256   # conPID2.addPID.y
  0       1                       0                       0                
  6   768   # conPID2.unitTime
  0       0                       0                       0                
  6  1280   # conPID2.revAct
  0       1                       0                       0                
  6   769   # conPID2.with_I
  0       1                       0                       0                
  6   769   # conPID2.with_D
  0       0                       0                       0                
  6  1280   # conPID2.y_reset_internal
  0       0                       0                       0                
  6  1280   # conPID2.addI.k1
  0       0                       0                       0                
  6  1280   # conPID2.addI.k2
 -1       1                       0                       0                
  1  1304   # conPID2.addI.k3
  0       0                       0                       0                
  6  1280   # conPID2.addI.u3
  0       0                       0                       0                
  6  1280   # conPID2.addI.y
  0       0                       0                       0                
  6  1280   # conPID2.addSat.y
  0       1                       0                       0                
  6  1280   # conPID2.addSat.k1
  0      -1                       0                       0                
  6  1280   # conPID2.addSat.k2
  0       1                       0                       0                
  6  1280   # conPID2.gainPID.k
  0       0                       0                       0                
  6  1280   # conPID2.gainPID.y
  0       1                       0                       0                
  6  1280   # conPID2.gainTrack.k
  0       1                       0                       0                
  6  1280   # conPID2.limiter.uMax
  0       0                       0                       0                
  6  1280   # conPID2.limiter.uMin
  0       1                       0                       0                
  6  1281   # conPID2.limiter.strict
  0       1                       0                       0                
  6  1281   # conPID2.limiter.limitsAtInit
  0       0                       0                       0                
  6   256   # realExpression10.y
  0       0                       0                       0                
  6   256   # conPID4.controlError
  0       4                       1                       4                
  6   258   # conPID4.controllerType
 -1     100                       0                 1.0000000000000000E+100
  1   280   # conPID4.k
 -1      15                 9.9999999999999997E-061 1.0000000000000000E+100
  1   280   # conPID4.Ti
 -1       5                       0                 1.0000000000000000E+100
  1   280   # conPID4.Td
 -1       1                       0                       0                
  1   280   # conPID4.yMax
 -1       0                       0                       0                
  1   280   # conPID4.yMin
 -1       1                       0                 1.0000000000000000E+100
  1   280   # conPID4.wp
 -1       0                       0                 1.0000000000000000E+100
  1   280   # conPID4.wd
 -1 9.0000000000000002E-001 1.0000000000000000E-013 1.0000000000000000E+100
  1   280   # conPID4.Ni
 -1      10                 1.0000000000000000E-013 1.0000000000000000E+100
  1   280   # conPID4.Nd
  0       5                       1                       5                
  6   258   # conPID4.initType
  0       0                       0                       0                
  6   256   # conPID4.xi_start
 -1       0                       0                       0                
  1   280   # conPID4.xd_start
 -1       0                       0                       0                
  1   280   # conPID4.y_start
  0       1                       0                       0                
  6   257   # conPID4.strict
 -1       0                       0                       0                
  1   281   # conPID4.reverseAction
  0       1                       1                       3                
  6   258   # conPID4.reset
  0       0                       0                       0                
  6   256   # conPID4.y_reset
  0       0                       0                       0                
  6   256   # conPID4.addP.y
  0       0                       0                       0                
  6   256   # conPID4.addP.k1
  0       0                       0                       0                
  6   256   # conPID4.addP.k2
 -1       1                       0                       0                
  1   280   # conPID4.P.k
  0       0                       0                       0                
  6   256   # conPID4.P.y
  0       1                       0                       0                
  6   256   # conPID4.addPID.k1
  0       1                       0                       0                
  6   256   # conPID4.addPID.k2
  0       1                       0                       0                
  6   256   # conPID4.addPID.k3
  0       0                       0                       0                
  6   256   # conPID4.addPID.u2
  0       0                       0                       0                
  6   256   # conPID4.addPID.y
  0       1                       0                       0                
  6   768   # conPID4.unitTime
  0       0                       0                       0                
  6  1280   # conPID4.revAct
  0       1                       0                       0                
  6   769   # conPID4.with_I
  0       1                       0                       0                
  6   769   # conPID4.with_D
  0       0                       0                       0                
  6  1280   # conPID4.y_reset_internal
  0       0                       0                       0                
  6  1280   # conPID4.addI.k1
  0       0                       0                       0                
  6  1280   # conPID4.addI.k2
 -1       1                       0                       0                
  1  1304   # conPID4.addI.k3
  0       0                       0                       0                
  6  1280   # conPID4.addI.u3
  0       0                       0                       0                
  6  1280   # conPID4.addI.y
  0       0                       0                       0                
  6  1280   # conPID4.addSat.y
  0       1                       0                       0                
  6  1280   # conPID4.addSat.k1
  0      -1                       0                       0                
  6  1280   # conPID4.addSat.k2
  0       1                       0                       0                
  6  1280   # conPID4.gainPID.k
  0       0                       0                       0                
  6  1280   # conPID4.gainPID.y
  0       1                       0                       0                
  6  1280   # conPID4.gainTrack.k
  0       1                       0                       0                
  6  1280   # conPID4.limiter.uMax
  0       0                       0                       0                
  6  1280   # conPID4.limiter.uMin
  0       1                       0                       0                
  6  1281   # conPID4.limiter.strict
  0       1                       0                       0                
  6  1281   # conPID4.limiter.limitsAtInit
  0       0                       0                       0                
  6   256   # realExpression11.y
  0       0                       0                       0                
  6   256   # conPID5.controlError
  0       4                       1                       4                
  6   258   # conPID5.controllerType
 -1      30                       0                 1.0000000000000000E+100
  1   280   # conPID5.k
 -1      15                 9.9999999999999997E-061 1.0000000000000000E+100
  1   280   # conPID5.Ti
 -1      10                       0                 1.0000000000000000E+100
  1   280   # conPID5.Td
 -1       1                       0                       0                
  1   280   # conPID5.yMax
 -1       0                       0                       0                
  1   280   # conPID5.yMin
 -1       1                       0                 1.0000000000000000E+100
  1   280   # conPID5.wp
 -1       0                       0                 1.0000000000000000E+100
  1   280   # conPID5.wd
 -1 9.0000000000000002E-001 1.0000000000000000E-013 1.0000000000000000E+100
  1   280   # conPID5.Ni
 -1      10                 1.0000000000000000E-013 1.0000000000000000E+100
  1   280   # conPID5.Nd
  0       5                       1                       5                
  6   258   # conPID5.initType
  0       0                       0                       0                
  6   256   # conPID5.xi_start
 -1       0                       0                       0                
  1   280   # conPID5.xd_start
 -1       0                       0                       0                
  1   280   # conPID5.y_start
  0       1                       0                       0                
  6   257   # conPID5.strict
 -1       0                       0                       0                
  1   281   # conPID5.reverseAction
  0       1                       1                       3                
  6   258   # conPID5.reset
  0       0                       0                       0                
  6   256   # conPID5.y_reset
  0       0                       0                       0                
  6   256   # conPID5.addP.y
  0       0                       0                       0                
  6   256   # conPID5.addP.k1
  0       0                       0                       0                
  6   256   # conPID5.addP.k2
 -1       1                       0                       0                
  1   280   # conPID5.P.k
  0       0                       0                       0                
  6   256   # conPID5.P.y
  0       1                       0                       0                
  6   256   # conPID5.addPID.k1
  0       1                       0                       0                
  6   256   # conPID5.addPID.k2
  0       1                       0                       0                
  6   256   # conPID5.addPID.k3
  0       0                       0                       0                
  6   256   # conPID5.addPID.u2
  0       0                       0                       0                
  6   256   # conPID5.addPID.y
  0       1                       0                       0                
  6   768   # conPID5.unitTime
  0       0                       0                       0                
  6  1280   # conPID5.revAct
  0       1                       0                       0                
  6   769   # conPID5.with_I
  0       1                       0                       0                
  6   769   # conPID5.with_D
  0       0                       0                       0                
  6  1280   # conPID5.y_reset_internal
  0       0                       0                       0                
  6  1280   # conPID5.addI.k1
  0       0                       0                       0                
  6  1280   # conPID5.addI.k2
 -1       1                       0                       0                
  1  1304   # conPID5.addI.k3
  0       0                       0                       0                
  6  1280   # conPID5.addI.u3
  0       0                       0                       0                
  6  1280   # conPID5.addI.y
  0       0                       0                       0                
  6  1280   # conPID5.addSat.y
  0       1                       0                       0                
  6  1280   # conPID5.addSat.k1
  0      -1                       0                       0                
  6  1280   # conPID5.addSat.k2
  0       1                       0                       0                
  6  1280   # conPID5.gainPID.k
  0       0                       0                       0                
  6  1280   # conPID5.gainPID.y
  0       1                       0                       0                
  6  1280   # conPID5.gainTrack.k
  0       1                       0                       0                
  6  1280   # conPID5.limiter.uMax
  0       0                       0                       0                
  6  1280   # conPID5.limiter.uMin
  0       1                       0                       0                
  6  1281   # conPID5.limiter.strict
  0       1                       0                       0                
  6  1281   # conPID5.limiter.limitsAtInit
  0       0                       0                       0                
  6   256   # conPID6.controlError
  0       4                       1                       4                
  6   258   # conPID6.controllerType
 -1      50                       0                 1.0000000000000000E+100
  1   280   # conPID6.k
 -1      15                 9.9999999999999997E-061 1.0000000000000000E+100
  1   280   # conPID6.Ti
 -1      10                       0                 1.0000000000000000E+100
  1   280   # conPID6.Td
 -1       1                       0                       0                
  1   280   # conPID6.yMax
 -1       0                       0                       0                
  1   280   # conPID6.yMin
 -1       1                       0                 1.0000000000000000E+100
  1   280   # conPID6.wp
 -1       0                       0                 1.0000000000000000E+100
  1   280   # conPID6.wd
 -1 9.0000000000000002E-001 1.0000000000000000E-013 1.0000000000000000E+100
  1   280   # conPID6.Ni
 -1      10                 1.0000000000000000E-013 1.0000000000000000E+100
  1   280   # conPID6.Nd
  0       5                       1                       5                
  6   258   # conPID6.initType
  0       0                       0                       0                
  6   256   # conPID6.xi_start
 -1       0                       0                       0                
  1   280   # conPID6.xd_start
 -1       0                       0                       0                
  1   280   # conPID6.y_start
  0       1                       0                       0                
  6   257   # conPID6.strict
 -1       0                       0                       0                
  1   281   # conPID6.reverseAction
  0       1                       1                       3                
  6   258   # conPID6.reset
  0       0                       0                       0                
  6   256   # conPID6.y_reset
  0       0                       0                       0                
  6   256   # conPID6.addP.y
  0       0                       0                       0                
  6   256   # conPID6.addP.k1
  0       0                       0                       0                
  6   256   # conPID6.addP.k2
 -1       1                       0                       0                
  1   280   # conPID6.P.k
  0       0                       0                       0                
  6   256   # conPID6.P.y
  0       1                       0                       0                
  6   256   # conPID6.addPID.k1
  0       1                       0                       0                
  6   256   # conPID6.addPID.k2
  0       1                       0                       0                
  6   256   # conPID6.addPID.k3
  0       0                       0                       0                
  6   256   # conPID6.addPID.u2
  0       0                       0                       0                
  6   256   # conPID6.addPID.y
  0       1                       0                       0                
  6   768   # conPID6.unitTime
  0       0                       0                       0                
  6  1280   # conPID6.revAct
  0       1                       0                       0                
  6   769   # conPID6.with_I
  0       1                       0                       0                
  6   769   # conPID6.with_D
  0       0                       0                       0                
  6  1280   # conPID6.y_reset_internal
  0       0                       0                       0                
  6  1280   # conPID6.addI.k1
  0       0                       0                       0                
  6  1280   # conPID6.addI.k2
 -1       1                       0                       0                
  1  1304   # conPID6.addI.k3
  0       0                       0                       0                
  6  1280   # conPID6.addI.u3
  0       0                       0                       0                
  6  1280   # conPID6.addI.y
  0       0                       0                       0                
  6  1280   # conPID6.addSat.y
  0       1                       0                       0                
  6  1280   # conPID6.addSat.k1
  0      -1                       0                       0                
  6  1280   # conPID6.addSat.k2
  0       1                       0                       0                
  6  1280   # conPID6.gainPID.k
  0       0                       0                       0                
  6  1280   # conPID6.gainPID.y
  0       1                       0                       0                
  6  1280   # conPID6.gainTrack.k
  0       1                       0                       0                
  6  1280   # conPID6.limiter.uMax
  0       0                       0                       0                
  6  1280   # conPID6.limiter.uMin
  0       1                       0                       0                
  6  1281   # conPID6.limiter.strict
  0       1                       0                       0                
  6  1281   # conPID6.limiter.limitsAtInit
  0       0                       0                       0                
  6   256   # conPID1.controlError
  0       4                       1                       4                
  6   258   # conPID1.controllerType
 -1      40                       0                 1.0000000000000000E+100
  1   280   # conPID1.k
 -1      50                 9.9999999999999997E-061 1.0000000000000000E+100
  1   280   # conPID1.Ti
 -1       1                       0                 1.0000000000000000E+100
  1   280   # conPID1.Td
 -1       1                       0                       0                
  1   280   # conPID1.yMax
 -1       0                       0                       0                
  1   280   # conPID1.yMin
 -1       1                       0                 1.0000000000000000E+100
  1   280   # conPID1.wp
 -1       0                       0                 1.0000000000000000E+100
  1   280   # conPID1.wd
 -1 9.0000000000000002E-001 1.0000000000000000E-013 1.0000000000000000E+100
  1   280   # conPID1.Ni
 -1      10                 1.0000000000000000E-013 1.0000000000000000E+100
  1   280   # conPID1.Nd
  0       5                       1                       5                
  6   258   # conPID1.initType
  0       0                       0                       0                
  6   256   # conPID1.xi_start
 -1       0                       0                       0                
  1   280   # conPID1.xd_start
 -1       0                       0                       0                
  1   280   # conPID1.y_start
  0       1                       0                       0                
  6   257   # conPID1.strict
 -1       0                       0                       0                
  1   281   # conPID1.reverseAction
  0       1                       1                       3                
  6   258   # conPID1.reset
  0       0                       0                       0                
  6   256   # conPID1.y_reset
  0       0                       0                       0                
  6   256   # conPID1.addP.y
  0       0                       0                       0                
  6   256   # conPID1.addP.k1
  0       0                       0                       0                
  6   256   # conPID1.addP.k2
 -1       1                       0                       0                
  1   280   # conPID1.P.k
  0       0                       0                       0                
  6   256   # conPID1.P.y
  0       1                       0                       0                
  6   256   # conPID1.addPID.k1
  0       1                       0                       0                
  6   256   # conPID1.addPID.k2
  0       1                       0                       0                
  6   256   # conPID1.addPID.k3
  0       0                       0                       0                
  6   256   # conPID1.addPID.u2
  0       0                       0                       0                
  6   256   # conPID1.addPID.y
  0       1                       0                       0                
  6   768   # conPID1.unitTime
  0       0                       0                       0                
  6  1280   # conPID1.revAct
  0       1                       0                       0                
  6   769   # conPID1.with_I
  0       1                       0                       0                
  6   769   # conPID1.with_D
  0       0                       0                       0                
  6  1280   # conPID1.y_reset_internal
  0       0                       0                       0                
  6  1280   # conPID1.addI.k1
  0       0                       0                       0                
  6  1280   # conPID1.addI.k2
 -1       1                       0                       0                
  1  1304   # conPID1.addI.k3
  0       0                       0                       0                
  6  1280   # conPID1.addI.u3
  0       0                       0                       0                
  6  1280   # conPID1.addI.y
  0       0                       0                       0                
  6  1280   # conPID1.addSat.y
  0       1                       0                       0                
  6  1280   # conPID1.addSat.k1
  0      -1                       0                       0                
  6  1280   # conPID1.addSat.k2
  0       1                       0                       0                
  6  1280   # conPID1.gainPID.k
  0       0                       0                       0                
  6  1280   # conPID1.gainPID.y
  0       1                       0                       0                
  6  1280   # conPID1.gainTrack.k
  0       1                       0                       0                
  6  1280   # conPID1.limiter.uMax
  0       0                       0                       0                
  6  1280   # conPID1.limiter.uMin
  0       1                       0                       0                
  6  1281   # conPID1.limiter.strict
  0       1                       0                       0                
  6  1281   # conPID1.limiter.limitsAtInit
  0       1                       0                       0                
  6   257   # res8.allowFlowReversal
  0 2.6100000000000001E-001       0                       0                
  6   256   # res8.m_flow_nominal
  0 2.6100000000000001E-005       0                 1.0000000000000000E+100
  6   256   # res8.m_flow_small
  0       0                       0                       0                
  6   257   # res8.show_T
  0       0                       0                       0                
  6   288   # res8.dp
  0       0                       0                       0                
  6  1280   # res8._m_flow_start
  0       0                       0                       0                
  6  1280   # res8._dp_start
  0       1                       0                       0                
  6   769   # res8.homotopyInitialization
  0       1                       0                       0                
  6   257   # res8.from_dp
  0     435                       0                       0                
  6   256   # res8.dp_nominal
  0       0                       0                       0                
  6   257   # res8.linearized
  0 7.8299999999999995E-002       0                 1.0000000000000000E+100
  6   256   # res8.m_flow_turbulent
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1  1304   # res8.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # res8.sta_default.T
 -1 1.0000000000000000E-002       0                       1                
  1  1304   # res8.sta_default.X[1]
 -1 9.8999999999999999E-001       0                       1                
  1  1304   # res8.sta_default.X[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # res8.eta_default
  0 2.6100000000000001E-001       0                       0                
  6  1280   # res8.m_flow_nominal_pos
  0     435                       0                       0                
  6  1280   # res8.dp_nominal_pos
  0 2.9999999999999999E-001 9.9999999999999995E-007 1.0000000000000000E+100
  6   256   # res8.deltaM
  0 1.2513992168768527E-002       0                       0                
  6   256   # res8.k
  0       1                       0                       0                
  6  1281   # res8.computeFlowResistance
  0       0                       0                       0                
  6  1280   # res8.coeff
  0       1                       1                       4                
  6  1282   # fan11.vol.dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # fan11.vol.dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # fan11.vol.dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # fan11.vol.dynBal.traceDynamics
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # fan11.vol.dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # fan11.vol.dynBal.T_start
  0       0                       0                       1                
  6  1280   # fan11.vol.dynBal.X_start[1]
  0       0                       0                       1                
  6  1280   # fan11.vol.dynBal.X_start[2]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # fan11.vol.dynBal.mSenFac
  0       1                       0                       0                
  6   769   # fan11.vol.dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # fan11.vol.dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # fan11.vol.dynBal.nPorts
  0       0                       0                       0                
  6  1281   # fan11.vol.dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # fan11.vol.dynBal.use_C_flow
  0       0                       0                       0                
  6  1280   # fan11.vol.dynBal.Q_flow
  0       0                       0                  100000                
  6  1280   # fan11.vol.dynBal.medium.d
  0     300                       1                   10000                
  6  1280   # fan11.vol.dynBal.medium.T
  0       0                       0                       1                
  6  1280   # fan11.vol.dynBal.medium.X[2]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # fan11.vol.dynBal.medium.u
  0    1000                       0                 1.0000000000000000E+007
  6  1280   # fan11.vol.dynBal.medium.R
  0 3.2000000000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6  1280   # fan11.vol.dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # fan11.vol.dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # fan11.vol.dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # fan11.vol.dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # fan11.vol.dynBal.medium.p_bar
  0 1.8015280000000002E-002       0                 1.0000000000000000E+100
  6  1280   # fan11.vol.dynBal.medium.MMX[1]
  0 2.8965115900000001E-002       0                 1.0000000000000000E+100
  6  1280   # fan11.vol.dynBal.medium.MMX[2]
  0       0                       0                       1                
  6  1280   # fan11.vol.dynBal.medium.X_air
  0      20                       0                       0                
  6  1280   # fan11.vol.dynBal.medium.dT
 -1       0                       0                       0                
  2  1296   # fan11.vol.dynBal.U
  0       0                       0                       0                
  3  1280   # fan11.vol.dynBal.der(U)
 -1       0                       0                 1.0000000000000000E+100
  2  1296   # fan11.vol.dynBal.m
  0       0                       0                       0                
  3  1280   # fan11.vol.dynBal.der(m)
 -1       0                       0                 1.0000000000000000E+100
  2  1296   # fan11.vol.dynBal.mXi[1]
  0       0                       0                       0                
  3  1280   # fan11.vol.dynBal.der(mXi[1])
  0       0                       0                       0                
  6  1280   # fan11.vol.dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # fan11.vol.dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # fan11.vol.dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # fan11.vol.dynBal.ports_H_flow[2]
  0       0                       0                       0                
  6  1280   # fan11.vol.dynBal.ports_mXi_flow[1, 1]
  0       0                       0                       0                
  6  1280   # fan11.vol.dynBal.ports_mXi_flow[2, 1]
  0 1.0145400000000000E+003       0                       0                
  6  1280   # fan11.vol.dynBal.cp_default
  0       0                       0                 1.0000000000000000E+100
  6  1280   # fan11.vol.dynBal.rho_start
  0       0                       0                       0                
  6  1281   # fan11.vol.dynBal.computeCSen
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # fan11.vol.dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # fan11.vol.dynBal.state_default.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # fan11.vol.dynBal.state_default.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # fan11.vol.dynBal.state_default.X[2]
  0 1.2000000000000000E+000       0                 1.0000000000000000E+100
  6  1280   # fan11.vol.dynBal.rho_default
  0       1                       0                       0                
  6  1280   # fan11.vol.dynBal.s[1]
  0       0                       0                       0                
  6  1280   # fan11.vol.dynBal.hStart
  0       1                       0                       0                
  6  1281   # fan11.vol.dynBal._simplify_mWat_flow
  0       0                       0                       0                
  6  1280   # fan11.vol.dynBal.mWat_flow_internal
  0       2                       1                       4                
  6  1282   # GasRoom.dynBal.energyDynamics
  0       2                       1                       4                
  6  1282   # GasRoom.dynBal.massDynamics
  0       2                       1                       4                
  6  1282   # GasRoom.dynBal.substanceDynamics
  0       2                       1                       4                
  6  1282   # GasRoom.dynBal.traceDynamics
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # GasRoom.dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # GasRoom.dynBal.T_start
  0       0                       0                       1                
  6  1280   # GasRoom.dynBal.X_start[1]
  0       0                       0                       1                
  6  1280   # GasRoom.dynBal.X_start[2]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # GasRoom.dynBal.mSenFac
  0       1                       0                       0                
  6   769   # GasRoom.dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # GasRoom.dynBal.simplify_mWat_flow
  0       8                       0                       0                
  6  1282   # GasRoom.dynBal.nPorts
  0       0                       0                       0                
  6  1281   # GasRoom.dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # GasRoom.dynBal.use_C_flow
  0       0                       0                       0                
  6  1280   # GasRoom.dynBal.Q_flow
  0       0                 -100000                  100000                
  6  1412   # GasRoom.dynBal.ports[6].m_flow
  0       0                 -100000                  100000                
  6  1412   # GasRoom.dynBal.ports[7].m_flow
  0       0                 -100000                  100000                
  6  1412   # GasRoom.dynBal.ports[8].m_flow
  0       0                       0                  100000                
  6  1280   # GasRoom.dynBal.medium.d
  0     300                       1                   10000                
  6  1280   # GasRoom.dynBal.medium.T
  0       0                       0                       1                
  6  1280   # GasRoom.dynBal.medium.X[2]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # GasRoom.dynBal.medium.u
  0    1000                       0                 1.0000000000000000E+007
  6  1280   # GasRoom.dynBal.medium.R
  0 3.2000000000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6  1280   # GasRoom.dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # GasRoom.dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # GasRoom.dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # GasRoom.dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # GasRoom.dynBal.medium.p_bar
  0 1.8015280000000002E-002       0                 1.0000000000000000E+100
  6  1280   # GasRoom.dynBal.medium.MMX[1]
  0 2.8965115900000001E-002       0                 1.0000000000000000E+100
  6  1280   # GasRoom.dynBal.medium.MMX[2]
  0       0                       0                       1                
  6  1280   # GasRoom.dynBal.medium.X_air
  0      20                       0                       0                
  6  1280   # GasRoom.dynBal.medium.dT
 -1       0                       0                       0                
  2  1296   # GasRoom.dynBal.U
  0       0                       0                       0                
  3  1280   # GasRoom.dynBal.der(U)
 -1       0                       0                 1.0000000000000000E+100
  2  1296   # GasRoom.dynBal.m
  0       0                       0                       0                
  3  1280   # GasRoom.dynBal.der(m)
 -1       0                       0                 1.0000000000000000E+100
  2  1296   # GasRoom.dynBal.mXi[1]
  0       0                       0                       0                
  3  1280   # GasRoom.dynBal.der(mXi[1])
  0       0                       0                       0                
  6  1280   # GasRoom.dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # GasRoom.dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # GasRoom.dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # GasRoom.dynBal.ports_H_flow[2]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # GasRoom.dynBal.ports_H_flow[3]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # GasRoom.dynBal.ports_H_flow[4]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # GasRoom.dynBal.ports_H_flow[5]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # GasRoom.dynBal.ports_H_flow[6]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # GasRoom.dynBal.ports_H_flow[7]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # GasRoom.dynBal.ports_H_flow[8]
  0       0                       0                       0                
  6  1280   # GasRoom.dynBal.ports_mXi_flow[1, 1]
  0       0                       0                       0                
  6  1280   # GasRoom.dynBal.ports_mXi_flow[2, 1]
  0       0                       0                       0                
  6  1280   # GasRoom.dynBal.ports_mXi_flow[3, 1]
  0       0                       0                       0                
  6  1280   # GasRoom.dynBal.ports_mXi_flow[4, 1]
  0       0                       0                       0                
  6  1280   # GasRoom.dynBal.ports_mXi_flow[5, 1]
  0       0                       0                       0                
  6  1280   # GasRoom.dynBal.ports_mXi_flow[6, 1]
  0       0                       0                       0                
  6  1280   # GasRoom.dynBal.ports_mXi_flow[7, 1]
  0       0                       0                       0                
  6  1280   # GasRoom.dynBal.ports_mXi_flow[8, 1]
  0 1.0145400000000000E+003       0                       0                
  6  1280   # GasRoom.dynBal.cp_default
  0       0                       0                 1.0000000000000000E+100
  6  1280   # GasRoom.dynBal.rho_start
  0       0                       0                       0                
  6  1281   # GasRoom.dynBal.computeCSen
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # GasRoom.dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # GasRoom.dynBal.state_default.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # GasRoom.dynBal.state_default.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # GasRoom.dynBal.state_default.X[2]
  0 1.2000000000000000E+000       0                 1.0000000000000000E+100
  6  1280   # GasRoom.dynBal.rho_default
  0       1                       0                       0                
  6  1280   # GasRoom.dynBal.s[1]
  0       0                       0                       0                
  6  1280   # GasRoom.dynBal.hStart
  0       1                       0                       0                
  6  1281   # GasRoom.dynBal._simplify_mWat_flow
  0       0                       0                       0                
  6  1280   # GasRoom.dynBal.mWat_flow_internal
  0       2                       1                       4                
  6  1282   # GasRoom1.dynBal.energyDynamics
  0       2                       1                       4                
  6  1282   # GasRoom1.dynBal.massDynamics
  0       2                       1                       4                
  6  1282   # GasRoom1.dynBal.substanceDynamics
  0       2                       1                       4                
  6  1282   # GasRoom1.dynBal.traceDynamics
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # GasRoom1.dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # GasRoom1.dynBal.T_start
  0       0                       0                       1                
  6  1280   # GasRoom1.dynBal.X_start[1]
  0       0                       0                       1                
  6  1280   # GasRoom1.dynBal.X_start[2]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # GasRoom1.dynBal.mSenFac
  0       1                       0                       0                
  6   769   # GasRoom1.dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # GasRoom1.dynBal.simplify_mWat_flow
  0       8                       0                       0                
  6  1282   # GasRoom1.dynBal.nPorts
  0       0                       0                       0                
  6  1281   # GasRoom1.dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # GasRoom1.dynBal.use_C_flow
  0       0                       0                       0                
  6  1280   # GasRoom1.dynBal.Q_flow
  0       0                 -100000                  100000                
  6  1412   # GasRoom1.dynBal.ports[6].m_flow
  0       0                 -100000                  100000                
  6  1412   # GasRoom1.dynBal.ports[7].m_flow
  0       0                 -100000                  100000                
  6  1412   # GasRoom1.dynBal.ports[8].m_flow
  0       0                       0                  100000                
  6  1280   # GasRoom1.dynBal.medium.d
  0     300                       1                   10000                
  6  1280   # GasRoom1.dynBal.medium.T
  0       0                       0                       1                
  6  1280   # GasRoom1.dynBal.medium.X[2]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # GasRoom1.dynBal.medium.u
  0    1000                       0                 1.0000000000000000E+007
  6  1280   # GasRoom1.dynBal.medium.R
  0 3.2000000000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6  1280   # GasRoom1.dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # GasRoom1.dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # GasRoom1.dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # GasRoom1.dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # GasRoom1.dynBal.medium.p_bar
  0 1.8015280000000002E-002       0                 1.0000000000000000E+100
  6  1280   # GasRoom1.dynBal.medium.MMX[1]
  0 2.8965115900000001E-002       0                 1.0000000000000000E+100
  6  1280   # GasRoom1.dynBal.medium.MMX[2]
  0       0                       0                       1                
  6  1280   # GasRoom1.dynBal.medium.X_air
  0      20                       0                       0                
  6  1280   # GasRoom1.dynBal.medium.dT
 -1       0                       0                       0                
  2  1296   # GasRoom1.dynBal.U
  0       0                       0                       0                
  3  1280   # GasRoom1.dynBal.der(U)
 -1       0                       0                 1.0000000000000000E+100
  2  1296   # GasRoom1.dynBal.m
  0       0                       0                       0                
  3  1280   # GasRoom1.dynBal.der(m)
 -1       0                       0                 1.0000000000000000E+100
  2  1296   # GasRoom1.dynBal.mXi[1]
  0       0                       0                       0                
  3  1280   # GasRoom1.dynBal.der(mXi[1])
  0       0                       0                       0                
  6  1280   # GasRoom1.dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # GasRoom1.dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # GasRoom1.dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # GasRoom1.dynBal.ports_H_flow[2]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # GasRoom1.dynBal.ports_H_flow[3]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # GasRoom1.dynBal.ports_H_flow[4]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # GasRoom1.dynBal.ports_H_flow[5]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # GasRoom1.dynBal.ports_H_flow[6]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # GasRoom1.dynBal.ports_H_flow[7]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # GasRoom1.dynBal.ports_H_flow[8]
  0       0                       0                       0                
  6  1280   # GasRoom1.dynBal.ports_mXi_flow[1, 1]
  0       0                       0                       0                
  6  1280   # GasRoom1.dynBal.ports_mXi_flow[2, 1]
  0       0                       0                       0                
  6  1280   # GasRoom1.dynBal.ports_mXi_flow[3, 1]
  0       0                       0                       0                
  6  1280   # GasRoom1.dynBal.ports_mXi_flow[4, 1]
  0       0                       0                       0                
  6  1280   # GasRoom1.dynBal.ports_mXi_flow[5, 1]
  0       0                       0                       0                
  6  1280   # GasRoom1.dynBal.ports_mXi_flow[6, 1]
  0       0                       0                       0                
  6  1280   # GasRoom1.dynBal.ports_mXi_flow[7, 1]
  0       0                       0                       0                
  6  1280   # GasRoom1.dynBal.ports_mXi_flow[8, 1]
  0 1.0145400000000000E+003       0                       0                
  6  1280   # GasRoom1.dynBal.cp_default
  0       0                       0                 1.0000000000000000E+100
  6  1280   # GasRoom1.dynBal.rho_start
  0       0                       0                       0                
  6  1281   # GasRoom1.dynBal.computeCSen
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # GasRoom1.dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # GasRoom1.dynBal.state_default.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # GasRoom1.dynBal.state_default.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # GasRoom1.dynBal.state_default.X[2]
  0 1.2000000000000000E+000       0                 1.0000000000000000E+100
  6  1280   # GasRoom1.dynBal.rho_default
  0       1                       0                       0                
  6  1280   # GasRoom1.dynBal.s[1]
  0       0                       0                       0                
  6  1280   # GasRoom1.dynBal.hStart
  0       1                       0                       0                
  6  1281   # GasRoom1.dynBal._simplify_mWat_flow
  0       0                       0                       0                
  6  1280   # GasRoom1.dynBal.mWat_flow_internal
  0       2                       1                       4                
  6  1282   # GasRoom2.dynBal.energyDynamics
  0       2                       1                       4                
  6  1282   # GasRoom2.dynBal.massDynamics
  0       2                       1                       4                
  6  1282   # GasRoom2.dynBal.substanceDynamics
  0       2                       1                       4                
  6  1282   # GasRoom2.dynBal.traceDynamics
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # GasRoom2.dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # GasRoom2.dynBal.T_start
  0       0                       0                       1                
  6  1280   # GasRoom2.dynBal.X_start[1]
  0       0                       0                       1                
  6  1280   # GasRoom2.dynBal.X_start[2]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # GasRoom2.dynBal.mSenFac
  0       1                       0                       0                
  6   769   # GasRoom2.dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # GasRoom2.dynBal.simplify_mWat_flow
  0       8                       0                       0                
  6  1282   # GasRoom2.dynBal.nPorts
  0       0                       0                       0                
  6  1281   # GasRoom2.dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # GasRoom2.dynBal.use_C_flow
  0       0                       0                       0                
  6  1280   # GasRoom2.dynBal.Q_flow
  0       0                 -100000                  100000                
  6  1412   # GasRoom2.dynBal.ports[6].m_flow
  0       0                 -100000                  100000                
  6  1412   # GasRoom2.dynBal.ports[7].m_flow
  0       0                 -100000                  100000                
  6  1412   # GasRoom2.dynBal.ports[8].m_flow
  0       0                       0                  100000                
  6  1280   # GasRoom2.dynBal.medium.d
  0     300                       1                   10000                
  6  1280   # GasRoom2.dynBal.medium.T
  0       0                       0                       1                
  6  1280   # GasRoom2.dynBal.medium.X[2]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # GasRoom2.dynBal.medium.u
  0    1000                       0                 1.0000000000000000E+007
  6  1280   # GasRoom2.dynBal.medium.R
  0 3.2000000000000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6  1280   # GasRoom2.dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # GasRoom2.dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # GasRoom2.dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # GasRoom2.dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # GasRoom2.dynBal.medium.p_bar
  0 1.8015280000000002E-002       0                 1.0000000000000000E+100
  6  1280   # GasRoom2.dynBal.medium.MMX[1]
  0 2.8965115900000001E-002       0                 1.0000000000000000E+100
  6  1280   # GasRoom2.dynBal.medium.MMX[2]
  0       0                       0                       1                
  6  1280   # GasRoom2.dynBal.medium.X_air
  0      20                       0                       0                
  6  1280   # GasRoom2.dynBal.medium.dT
 -1       0                       0                       0                
  2  1296   # GasRoom2.dynBal.U
  0       0                       0                       0                
  3  1280   # GasRoom2.dynBal.der(U)
 -1       0                       0                 1.0000000000000000E+100
  2  1296   # GasRoom2.dynBal.m
  0       0                       0                       0                
  3  1280   # GasRoom2.dynBal.der(m)
 -1       0                       0                 1.0000000000000000E+100
  2  1296   # GasRoom2.dynBal.mXi[1]
  0       0                       0                       0                
  3  1280   # GasRoom2.dynBal.der(mXi[1])
  0       0                       0                       0                
  6  1280   # GasRoom2.dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # GasRoom2.dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # GasRoom2.dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # GasRoom2.dynBal.ports_H_flow[2]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # GasRoom2.dynBal.ports_H_flow[3]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # GasRoom2.dynBal.ports_H_flow[4]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # GasRoom2.dynBal.ports_H_flow[5]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # GasRoom2.dynBal.ports_H_flow[6]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # GasRoom2.dynBal.ports_H_flow[7]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # GasRoom2.dynBal.ports_H_flow[8]
  0       0                       0                       0                
  6  1280   # GasRoom2.dynBal.ports_mXi_flow[1, 1]
  0       0                       0                       0                
  6  1280   # GasRoom2.dynBal.ports_mXi_flow[2, 1]
  0       0                       0                       0                
  6  1280   # GasRoom2.dynBal.ports_mXi_flow[3, 1]
  0       0                       0                       0                
  6  1280   # GasRoom2.dynBal.ports_mXi_flow[4, 1]
  0       0                       0                       0                
  6  1280   # GasRoom2.dynBal.ports_mXi_flow[5, 1]
  0       0                       0                       0                
  6  1280   # GasRoom2.dynBal.ports_mXi_flow[6, 1]
  0       0                       0                       0                
  6  1280   # GasRoom2.dynBal.ports_mXi_flow[7, 1]
  0       0                       0                       0                
  6  1280   # GasRoom2.dynBal.ports_mXi_flow[8, 1]
  0 1.0145400000000000E+003       0                       0                
  6  1280   # GasRoom2.dynBal.cp_default
  0       0                       0                 1.0000000000000000E+100
  6  1280   # GasRoom2.dynBal.rho_start
  0       0                       0                       0                
  6  1281   # GasRoom2.dynBal.computeCSen
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # GasRoom2.dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # GasRoom2.dynBal.state_default.T
  0 1.0000000000000000E-002       0                       1                
  6  1280   # GasRoom2.dynBal.state_default.X[1]
  0 9.8999999999999999E-001       0                       1                
  6  1280   # GasRoom2.dynBal.state_default.X[2]
  0 1.2000000000000000E+000       0                 1.0000000000000000E+100
  6  1280   # GasRoom2.dynBal.rho_default
  0       1                       0                       0                
  6  1280   # GasRoom2.dynBal.s[1]
  0       0                       0                       0                
  6  1280   # GasRoom2.dynBal.hStart
  0       1                       0                       0                
  6  1281   # GasRoom2.dynBal._simplify_mWat_flow
  0       0                       0                       0                
  6  1280   # GasRoom2.dynBal.mWat_flow_internal
  0       0                       0                       0                
  6   256   # conPID.addD.y
  0       0                       0                       0                
  6   256   # conPID.addD.k1
  0       0                       0                       0                
  6   256   # conPID.addD.k2
 -1       0                       0                       0                
  2   272   # conPID.I.y
  0       0                       0                       0                
  3   256   # conPID.I.der(y)
  0       0                       0                       0                
  6   256   # conPID.I.k
  0       3                       1                       4                
  6   258   # conPID.I.initType
  0       0                       0                       0                
  6   256   # conPID.I.y_start
  0       1                       1                       3                
  6   258   # conPID.I.reset
  0       0                       0                       0                
  6   256   # conPID.I.y_reset
  0       0                       0                       0                
  6  1280   # conPID.I.y_reset_internal
  0       0                       0                       0                
  6  1281   # conPID.I.trigger_internal
  0       0                       0                       0                
  6   256   # conPID.D.k
  0 9.9999999999999997E-061 9.9999999999999997E-061 1.0000000000000000E+100
  6   256   # conPID.D.T
  0       1                       1                       4                
  6   258   # conPID.D.initType
  0       0                       0                       0                
  6   256   # conPID.D.x_start
 -1       0                       0                       0                
  1   280   # conPID.D.y_start
 -1       0                       0                       0                
  2   272   # conPID.D.x
  0       0                       0                       0                
  3   256   # conPID.D.der(x)
  0       0                       0                       0                
  6  1281   # conPID.D.zeroGain
  0       0                       0                       0                
  6   256   # conPID2.addD.y
  0       0                       0                       0                
  6   256   # conPID2.addD.k1
  0       0                       0                       0                
  6   256   # conPID2.addD.k2
 -1       0                       0                       0                
  2   272   # conPID2.I.y
  0       0                       0                       0                
  3   256   # conPID2.I.der(y)
  0       0                       0                       0                
  6   256   # conPID2.I.k
  0       3                       1                       4                
  6   258   # conPID2.I.initType
  0       0                       0                       0                
  6   256   # conPID2.I.y_start
  0       1                       1                       3                
  6   258   # conPID2.I.reset
  0       0                       0                       0                
  6   256   # conPID2.I.y_reset
  0       0                       0                       0                
  6  1280   # conPID2.I.y_reset_internal
  0       0                       0                       0                
  6  1281   # conPID2.I.trigger_internal
  0       0                       0                       0                
  6   256   # conPID2.D.k
  0 9.9999999999999997E-061 9.9999999999999997E-061 1.0000000000000000E+100
  6   256   # conPID2.D.T
  0       1                       1                       4                
  6   258   # conPID2.D.initType
  0       0                       0                       0                
  6   256   # conPID2.D.x_start
 -1       0                       0                       0                
  1   280   # conPID2.D.y_start
 -1       0                       0                       0                
  2   272   # conPID2.D.x
  0       0                       0                       0                
  3   256   # conPID2.D.der(x)
  0       0                       0                       0                
  6  1281   # conPID2.D.zeroGain
  0       0                       0                       0                
  6   256   # conPID4.addD.y
  0       0                       0                       0                
  6   256   # conPID4.addD.k1
  0       0                       0                       0                
  6   256   # conPID4.addD.k2
 -1       0                       0                       0                
  2   272   # conPID4.I.y
  0       0                       0                       0                
  3   256   # conPID4.I.der(y)
  0       0                       0                       0                
  6   256   # conPID4.I.k
  0       3                       1                       4                
  6   258   # conPID4.I.initType
  0       0                       0                       0                
  6   256   # conPID4.I.y_start
  0       1                       1                       3                
  6   258   # conPID4.I.reset
  0       0                       0                       0                
  6   256   # conPID4.I.y_reset
  0       0                       0                       0                
  6  1280   # conPID4.I.y_reset_internal
  0       0                       0                       0                
  6  1281   # conPID4.I.trigger_internal
  0       0                       0                       0                
  6   256   # conPID4.D.k
  0 9.9999999999999997E-061 9.9999999999999997E-061 1.0000000000000000E+100
  6   256   # conPID4.D.T
  0       1                       1                       4                
  6   258   # conPID4.D.initType
  0       0                       0                       0                
  6   256   # conPID4.D.x_start
 -1       0                       0                       0                
  1   280   # conPID4.D.y_start
 -1       0                       0                       0                
  2   272   # conPID4.D.x
  0       0                       0                       0                
  3   256   # conPID4.D.der(x)
  0       0                       0                       0                
  6  1281   # conPID4.D.zeroGain
  0       0                       0                       0                
  6   256   # conPID5.addD.y
  0       0                       0                       0                
  6   256   # conPID5.addD.k1
  0       0                       0                       0                
  6   256   # conPID5.addD.k2
 -1       0                       0                       0                
  2   272   # conPID5.I.y
  0       0                       0                       0                
  3   256   # conPID5.I.der(y)
  0       0                       0                       0                
  6   256   # conPID5.I.k
  0       3                       1                       4                
  6   258   # conPID5.I.initType
  0       0                       0                       0                
  6   256   # conPID5.I.y_start
  0       1                       1                       3                
  6   258   # conPID5.I.reset
  0       0                       0                       0                
  6   256   # conPID5.I.y_reset
  0       0                       0                       0                
  6  1280   # conPID5.I.y_reset_internal
  0       0                       0                       0                
  6  1281   # conPID5.I.trigger_internal
  0       0                       0                       0                
  6   256   # conPID5.D.k
  0 9.9999999999999997E-061 9.9999999999999997E-061 1.0000000000000000E+100
  6   256   # conPID5.D.T
  0       1                       1                       4                
  6   258   # conPID5.D.initType
  0       0                       0                       0                
  6   256   # conPID5.D.x_start
 -1       0                       0                       0                
  1   280   # conPID5.D.y_start
 -1       0                       0                       0                
  2   272   # conPID5.D.x
  0       0                       0                       0                
  3   256   # conPID5.D.der(x)
  0       0                       0                       0                
  6  1281   # conPID5.D.zeroGain
  0       0                       0                       0                
  6   256   # conPID6.addD.y
  0       0                       0                       0                
  6   256   # conPID6.addD.k1
  0       0                       0                       0                
  6   256   # conPID6.addD.k2
 -1       0                       0                       0                
  2   272   # conPID6.I.y
  0       0                       0                       0                
  3   256   # conPID6.I.der(y)
  0       0                       0                       0                
  6   256   # conPID6.I.k
  0       3                       1                       4                
  6   258   # conPID6.I.initType
  0       0                       0                       0                
  6   256   # conPID6.I.y_start
  0       1                       1                       3                
  6   258   # conPID6.I.reset
  0       0                       0                       0                
  6   256   # conPID6.I.y_reset
  0       0                       0                       0                
  6  1280   # conPID6.I.y_reset_internal
  0       0                       0                       0                
  6  1281   # conPID6.I.trigger_internal
  0       0                       0                       0                
  6   256   # conPID6.D.k
  0 9.9999999999999997E-061 9.9999999999999997E-061 1.0000000000000000E+100
  6   256   # conPID6.D.T
  0       1                       1                       4                
  6   258   # conPID6.D.initType
  0       0                       0                       0                
  6   256   # conPID6.D.x_start
 -1       0                       0                       0                
  1   280   # conPID6.D.y_start
 -1       0                       0                       0                
  2   272   # conPID6.D.x
  0       0                       0                       0                
  3   256   # conPID6.D.der(x)
  0       0                       0                       0                
  6  1281   # conPID6.D.zeroGain
  0       0                       0                       0                
  6   256   # conPID1.addD.y
  0       0                       0                       0                
  6   256   # conPID1.addD.k1
  0       0                       0                       0                
  6   256   # conPID1.addD.k2
 -1       0                       0                       0                
  2   272   # conPID1.I.y
  0       0                       0                       0                
  3   256   # conPID1.I.der(y)
  0       0                       0                       0                
  6   256   # conPID1.I.k
  0       3                       1                       4                
  6   258   # conPID1.I.initType
  0       0                       0                       0                
  6   256   # conPID1.I.y_start
  0       1                       1                       3                
  6   258   # conPID1.I.reset
  0       0                       0                       0                
  6   256   # conPID1.I.y_reset
  0       0                       0                       0                
  6  1280   # conPID1.I.y_reset_internal
  0       0                       0                       0                
  6  1281   # conPID1.I.trigger_internal
  0       0                       0                       0                
  6   256   # conPID1.D.k
  0 9.9999999999999997E-061 9.9999999999999997E-061 1.0000000000000000E+100
  6   256   # conPID1.D.T
  0       1                       1                       4                
  6   258   # conPID1.D.initType
  0       0                       0                       0                
  6   256   # conPID1.D.x_start
 -1       0                       0                       0                
  1   280   # conPID1.D.y_start
 -1       0                       0                       0                
  2   272   # conPID1.D.x
  0       0                       0                       0                
  3   256   # conPID1.D.der(x)
  0       0                       0                       0                
  6  1281   # conPID1.D.zeroGain


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable and flags according to dsBaseType
#  <value>&3= 0: real.
#  <value>&3= 1: boolean.
#  <value>&3= 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, no special action takes place (default setting).
#
# - If there are only FIXED and FREE variables and the number of
#   FREE parameters, states and inputs is IDENTICAL to the number of
#   FIXED state derivatives, outputs and auxiliary variables, a non-linear
#   equation is solved to determine a consistent set of initial conditions.
#
# - In all other cases the following optimization problem is solved:
#      min( sum( weight(i)*( (value(i) - DESIRED(i))/scale(i) )^2 ) )
#   under the constraint that the differential equation is fulfilled
#   at the initial time. In most cases weight(i)=1 is sufficient, due
#   to the automatic scaling (if DESIRED(i) is not close to zero,
#   scale(i) = DESIRED(i). Otherwise, the scaling is based on the
#   nominal value (and maybe minimum and maximum values given in 
#   column 3 and 4). If these values are zero, scale(i)=1 is used).
#
char initialDescription(2417,184)
PM generation rate for each person
PM concentration of the fresh air
total filter efficiency
filter efficiency of the inlet air
PM dropt rate
PM concteration of the bio test room
der(PM concteration of the bio test room)
PM concteration of the no-germ room
der(PM concteration of the no-germ room)
PM concteration of the huanchong room
der(PM concteration of the huanchong room)
pm of supply air
PM concentration of the return air
Return air mass flow
pm diffusion source per min
pm diffusion source per min
pm diffusion source per min
Number of ports [:#(type=Integer)]
Set to true to stop the simulation with an error if the medium temperature is outside its allowable range [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Allowed flow direction [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Needed to connect to conditional connector [kg/kg]
Needed to connect to conditional connector [kg/kg]
Get the composition (all fractions) from the input connector [:#(type=Boolean)]
Get the composition (independent fractions) from the input connector [:#(type=Boolean)]
Get the trace substances from the input connector [:#(type=Boolean)]
Fixed value of composition [kg/kg]
Fixed value of composition [kg/kg]
Get the pressure from the input connector [:#(type=Boolean)]
Fixed value of pressure [Pa|bar]
Get the temperature from the input connector [:#(type=Boolean)]
Fixed value of temperature [K|degC]
Evaluates to true if the pressure should be checked [:#(type=Boolean)]
Evaluates to true if the pressure should be checked [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Use power data instead of motor efficiency [:#(type=Boolean)]
Volumetric flow rate at user-selected operating points [m3/s]
Fan or pump efficiency at these flow rates [1]
Volumetric flow rate at user-selected operating points [m3/s]
Fan or pump efficiency at these flow rates [1]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump electrical power at these flow rates [W]
If true, then motor heat is added to fluid stream [:#(type=Boolean)]
Nominal rotational speed for flow characteristic [1]
Normalized speed set point, used if inputType = Buildings.Fluid.Types.InputType.Constant [1]
Vector of normalized speed set points, used if inputType = Buildings.Fluid.Types.InputType.Stages [1]
Nominal rotational speed for flow characteristic [rev/min]
Speed set point, used if inputType = Buildings.Fluid.Types.InputType.Constant [rev/min]
Vector of speed set points, used if inputType = Buildings.Fluid.Types.InputType.Stages [rev/min]
= true, if default record values are being used [:#(type=Boolean)]
Control input type [:#(type=Buildings.Fluid.Types.InputType)]
Constant input set point [kg/s]
Vector of input set points corresponding to stages [kg/s]
= true, compute power exactly, using similarity laws. Otherwise approximate. [:#(type=Boolean)]
Set to false to avoid any power (=heat and flow work) being added to medium (may give simpler equations) [:#(type=Boolean)]
Set to true to avoid warning if m_flow_nominal and dp_nominal are used to construct the default pressure curve [:#(type=Boolean)]
Time constant of fluid volume for nominal flow, used if energy or mass balance is dynamic [s]
= true, if speed is filtered with a 2nd order CriticalDamping filter [:#(type=Boolean)]
Rise time of the filter (time to reach 99.6 % of the speed) [s]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial value of speed [1]
Actual normalised pump speed that is used for computations [1]
Electrical power consumed [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Volume flow rate [m3/s]
Pressure difference [Pa|Pa]
Global efficiency [1]
Hydraulic efficiency [1]
Motor efficiency [1]
Start value for VMachine_flow, used to avoid a warning if not specified [m3/s]
Type of prescribed variable [:#(type=Buildings.Fluid.Movers.BaseClasses.Types.PrescribedVariable)]
Parameter that is true if speed is the controlled variables [:#(type=Boolean)]
Number of data points for pressure curve [:#(type=Integer)]
Flag, true if user specified data that contain V_flow_max [:#(type=Boolean)]
Maximum volume flow rate, used for smoothing [m3/s]
Default medium density [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Start value for outflowing enthalpy [J/kg]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= false to simplify equations, assuming, but not enforcing, no flow reversal. Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Density, used to compute start and guess values [kg/m3|g/cm3]
Default value for mass fractions of medium (for initialization) [kg/kg]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow from port_a to port_b as output signal [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Heat flow rate (positive if flowing from outside into the component) [W]
Time constant at nominal flow [s]
Volume of delay element [m3]
Analog filter characteristics (CriticalDamping/Bessel/Butterworth/ChebyshevI) [:#(type=Modelica.Blocks.Types.AnalogFilter)]
Type of filter (LowPass/HighPass/BandPass/BandStop) [:#(type=Modelica.Blocks.Types.FilterType)]
Order of filter [:#(type=Integer)]
Cut-off frequency [Hz]
Gain (= amplitude of frequency response at zero frequency)
Pass band ripple for Chebyshev filter (otherwise not used); > 0 required [dB]
Band of band pass/stop filter is f_min (A=-3db*gain) .. f_cut (A=-3db*gain) [Hz]
= true, if amplitude at f_cut = -3db, otherwise unmodified filter [:#(type=Boolean)]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
[:#(type=Integer)]
Initial or guess values of states
Initial or guess values of states
Initial value of output
Nominal value of input (used for scaling the states)
Filter states
der(Filter states)
Filter states
der(Filter states)
[:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]





= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Guess value of dp = port_a.p - port_b.p [Pa|Pa]
Guess value of m_flow = port_a.m_flow [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if temperatures at port_a and port_b are computed [:#(type=Boolean)]
= true, if volume flow rate at inflowing port is computed [:#(type=Boolean)]
Volume flow rate at inflowing port (positive when flow from port_a to port_b) [m3/s]
if true, then the mass flow rate is equal to the value of m_flow_in [:#(type=Boolean)]
if true, then the head is equal to the value of dp_in [:#(type=Boolean)]
Needed to connect to conditional connector [Pa]
Value of Real output
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate, used for regularization near zero flow [kg/s]
For bi-directional flow, temperature is regularized in the region |m_flow| < m_flow_small (m_flow_small > 0 required) [kg/s]
Default value for mass fractions of medium (for initialization) [kg/kg]
Default value for mass fractions of medium (for initialization) [kg/kg]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Relative pressure of port_a minus port_b [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Use power data instead of motor efficiency [:#(type=Boolean)]
Volumetric flow rate at user-selected operating points [m3/s]
Fan or pump efficiency at these flow rates [1]
Volumetric flow rate at user-selected operating points [m3/s]
Fan or pump efficiency at these flow rates [1]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump electrical power at these flow rates [W]
If true, then motor heat is added to fluid stream [:#(type=Boolean)]
Nominal rotational speed for flow characteristic [1]
Normalized speed set point, used if inputType = Buildings.Fluid.Types.InputType.Constant [1]
Vector of normalized speed set points, used if inputType = Buildings.Fluid.Types.InputType.Stages [1]
Nominal rotational speed for flow characteristic [rev/min]
Speed set point, used if inputType = Buildings.Fluid.Types.InputType.Constant [rev/min]
Vector of speed set points, used if inputType = Buildings.Fluid.Types.InputType.Stages [rev/min]
= true, if default record values are being used [:#(type=Boolean)]
Type of prescribed variable [:#(type=Buildings.Fluid.Movers.BaseClasses.Types.PrescribedVariable)]
= true, compute power exactly, using similarity laws. Otherwise approximate. [:#(type=Boolean)]
Nominal volume flow rate, used for homotopy [m3/s]
Fluid density at medium default state [kg/m3|g/cm3]
Flag, true if user specified data that contain V_flow_max [:#(type=Boolean)]
Maximum volume flow rate, used for smoothing [m3/s]
Number of data points for pressure curve [:#(type=Integer)]
Mover speed (prescribed or computed) [1]
Flow work [W]
Ratio N_actual/N_nominal [1]
Ratio V_flow/V_flow_max [1]
True if speed is a prescribed variable of this block [:#(type=Boolean)]
True if pressure head is a prescribed variable of this block [:#(type=Boolean)]
Coefficients for polynomial of motor efficiency vs. volume flow rate
Coefficients for polynomial of hydraulic efficiency vs. volume flow rate
Maximum head [Pa|Pa]
Small value used to for regularization and to approximate an internal flow resistance of the fan
Coefficient for internal pressure drop of fan or pump [kg/(s.m4)]
Flag, used to pick the right representatio of the fan or pump pressure curve [:#(type=Integer)]
Number of elements in each array [:#(type=Integer)]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Number of elements in each array [:#(type=Integer)]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Number of elements in each array [:#(type=Integer)]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Coefficients for polynomial of power vs. flow rate
Flag used for reporting [:#(type=Boolean)]
Flag, true if user specified data that contain dpMax [:#(type=Boolean)]
Nominal pressure raise, used for default pressure curve if not specified in record per [Pa|Pa]
Initial value of mass flow rate [kg/s]
Constant pump mass flow rate, used when inputType=Constant [kg/s]
Vector of mass flow rate set points, used when inputType=Stage [kg/s]
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
= true, if opening is filtered with a 2nd order CriticalDamping filter [:#(type=Boolean)]
Rise time of the filter (time to reach 99.6 % of an opening step) [s]
Order of filter [:#(type=Integer)]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial value of output
Actuator position (0: closed, 1: open)
Actual actuator position
In case of PressureIndependent the model I/O is modified [:#(type=Boolean)]
Analog filter characteristics (CriticalDamping/Bessel/Butterworth/ChebyshevI) [:#(type=Modelica.Blocks.Types.AnalogFilter)]
Type of filter (LowPass/HighPass/BandPass/BandStop) [:#(type=Modelica.Blocks.Types.FilterType)]
Order of filter [:#(type=Integer)]
Cut-off frequency [Hz]
Gain (= amplitude of frequency response at zero frequency)
Pass band ripple for Chebyshev filter (otherwise not used); > 0 required [dB]
Band of band pass/stop filter is f_min (A=-3db*gain) .. f_cut (A=-3db*gain) [Hz]
= true, if amplitude at f_cut = -3db, otherwise unmodified filter [:#(type=Boolean)]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
[:#(type=Integer)]
Initial or guess values of states
Initial or guess values of states
Initial value of output
Nominal value of input (used for scaling the states)
Filter states
der(Filter states)
Filter states
der(Filter states)
[:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]





Pressure drop of fully open damper at nominal mass flow rate [Pa|Pa]
Pressure drop of duct and resistances other than the damper in series, at nominal mass flow rate [Pa|Pa]
Set to true to use deltaM for turbulent transition, else ReC is used [:#(type=Boolean)]
Fraction of nominal mass flow rate where transition to turbulent occurs
Nominal face velocity [m/s]
Face area [m2]
Set to true for round duct, false for square cross section [:#(type=Boolean)]
Reynolds number where transition to turbulent starts
Coefficient a for damper characteristics [1]
Coefficient b for damper characteristics [1]
Lower value for damper curve [1]
Upper value for damper curve [1]
Loss coefficient for y=0 (pressure drop divided by dynamic pressure) [1]
Loss coefficient for y=1 (pressure drop divided by dynamic pressure) [1]
Damper leakage, ratio of flow coefficients k(y=0)/k(y=1)
Set to true to use constant density for flow friction [:#(type=Boolean)]
Flow coefficient of fixed resistance that may be in series with damper, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2).
Flow coefficient of damper, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Density, used to compute fluid volume [kg/m3|g/cm3]
Shape factor used to compute the hydraulic diameter for round ducts
Loss coefficient at the lower limit of the exponential characteristics
Loss coefficient at the upper limit of the exponential characteristics
Polynomial coefficients for curve fit for y < yl
Polynomial coefficients for curve fit for y < yl
Polynomial coefficients for curve fit for y < yl
Polynomial coefficients for curve fit for y > yu
Polynomial coefficients for curve fit for y > yu
Polynomial coefficients for curve fit for y > yu
Flow coefficient of damper fully open, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flow coefficient of damper fully open plus fixed resistance, with unit=(kg.m)^(1/2)
Flow coefficient of damper fully closed, with unit=(kg.m)^(1/2)
Flow coefficient of damper fully closed + fixed resistance, with unit=(kg.m)^(1/2)
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= false to simplify equations, assuming, but not enforcing, no flow reversal. Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Temperature of the fluid [K|degC]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow from port_a to port_b as output signal [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Heat flow rate (positive if flowing from outside into the component) [W]
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Thermodynamic pressure in the connection point [Pa|bar]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
= true, if opening is filtered with a 2nd order CriticalDamping filter [:#(type=Boolean)]
Rise time of the filter (time to reach 99.6 % of an opening step) [s]
Order of filter [:#(type=Integer)]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial value of output
Actuator position (0: closed, 1: open)
Actual actuator position
In case of PressureIndependent the model I/O is modified [:#(type=Boolean)]
Analog filter characteristics (CriticalDamping/Bessel/Butterworth/ChebyshevI) [:#(type=Modelica.Blocks.Types.AnalogFilter)]
Type of filter (LowPass/HighPass/BandPass/BandStop) [:#(type=Modelica.Blocks.Types.FilterType)]
Order of filter [:#(type=Integer)]
Cut-off frequency [Hz]
Gain (= amplitude of frequency response at zero frequency)
Pass band ripple for Chebyshev filter (otherwise not used); > 0 required [dB]
Band of band pass/stop filter is f_min (A=-3db*gain) .. f_cut (A=-3db*gain) [Hz]
= true, if amplitude at f_cut = -3db, otherwise unmodified filter [:#(type=Boolean)]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
[:#(type=Integer)]
Initial or guess values of states
Initial or guess values of states
Initial value of output
Nominal value of input (used for scaling the states)
Filter states
der(Filter states)
Filter states
der(Filter states)
[:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]





Pressure drop of fully open damper at nominal mass flow rate [Pa|Pa]
Pressure drop of duct and resistances other than the damper in series, at nominal mass flow rate [Pa|Pa]
Set to true to use deltaM for turbulent transition, else ReC is used [:#(type=Boolean)]
Fraction of nominal mass flow rate where transition to turbulent occurs
Nominal face velocity [m/s]
Face area [m2]
Set to true for round duct, false for square cross section [:#(type=Boolean)]
Reynolds number where transition to turbulent starts
Coefficient a for damper characteristics [1]
Coefficient b for damper characteristics [1]
Lower value for damper curve [1]
Upper value for damper curve [1]
Loss coefficient for y=0 (pressure drop divided by dynamic pressure) [1]
Loss coefficient for y=1 (pressure drop divided by dynamic pressure) [1]
Damper leakage, ratio of flow coefficients k(y=0)/k(y=1)
Set to true to use constant density for flow friction [:#(type=Boolean)]
Flow coefficient of fixed resistance that may be in series with damper, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2).
Flow coefficient of damper, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Density, used to compute fluid volume [kg/m3|g/cm3]
Shape factor used to compute the hydraulic diameter for round ducts
Loss coefficient at the lower limit of the exponential characteristics
Loss coefficient at the upper limit of the exponential characteristics
Polynomial coefficients for curve fit for y < yl
Polynomial coefficients for curve fit for y < yl
Polynomial coefficients for curve fit for y < yl
Polynomial coefficients for curve fit for y > yu
Polynomial coefficients for curve fit for y > yu
Polynomial coefficients for curve fit for y > yu
Flow coefficient of damper fully open, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flow coefficient of damper fully open plus fixed resistance, with unit=(kg.m)^(1/2)
Flow coefficient of damper fully closed, with unit=(kg.m)^(1/2)
Flow coefficient of damper fully closed + fixed resistance, with unit=(kg.m)^(1/2)
Number of ports [:#(type=Integer)]
Set to true to stop the simulation with an error if the medium temperature is outside its allowable range [:#(type=Boolean)]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Allowed flow direction [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Needed to connect to conditional connector [kg/kg]
Needed to connect to conditional connector [kg/kg]
Get the composition (all fractions) from the input connector [:#(type=Boolean)]
Get the composition (independent fractions) from the input connector [:#(type=Boolean)]
Get the trace substances from the input connector [:#(type=Boolean)]
Fixed value of composition [kg/kg]
Fixed value of composition [kg/kg]
Get the pressure from the input connector [:#(type=Boolean)]
Fixed value of pressure [Pa|bar]
Get the temperature from the input connector [:#(type=Boolean)]
Fixed value of temperature [K|degC]
Evaluates to true if the pressure should be checked [:#(type=Boolean)]
Evaluates to true if the pressure should be checked [:#(type=Boolean)]
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Thermodynamic pressure in the connection point [Pa|bar]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Fraction of nominal mass flow rate where transition to turbulent occurs
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
Precomputed coefficient to avoid division by parameter
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Fraction of nominal mass flow rate where transition to turbulent occurs
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
Precomputed coefficient to avoid division by parameter
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Fraction of nominal mass flow rate where transition to turbulent occurs
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
Precomputed coefficient to avoid division by parameter
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= false to simplify equations, assuming, but not enforcing, no flow reversal. Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Temperature of the fluid [K|degC]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow from port_a to port_b as output signal [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Heat flow rate (positive if flowing from outside into the component) [W]
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
= true, if opening is filtered with a 2nd order CriticalDamping filter [:#(type=Boolean)]
Rise time of the filter (time to reach 99.6 % of an opening step) [s]
Order of filter [:#(type=Integer)]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial value of output
Actuator position (0: closed, 1: open)
Actual actuator position
In case of PressureIndependent the model I/O is modified [:#(type=Boolean)]
Analog filter characteristics (CriticalDamping/Bessel/Butterworth/ChebyshevI) [:#(type=Modelica.Blocks.Types.AnalogFilter)]
Type of filter (LowPass/HighPass/BandPass/BandStop) [:#(type=Modelica.Blocks.Types.FilterType)]
Order of filter [:#(type=Integer)]
Cut-off frequency [Hz]
Gain (= amplitude of frequency response at zero frequency)
Pass band ripple for Chebyshev filter (otherwise not used); > 0 required [dB]
Band of band pass/stop filter is f_min (A=-3db*gain) .. f_cut (A=-3db*gain) [Hz]
= true, if amplitude at f_cut = -3db, otherwise unmodified filter [:#(type=Boolean)]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
[:#(type=Integer)]
Initial or guess values of states
Initial or guess values of states
Initial value of output
Nominal value of input (used for scaling the states)
Filter states
der(Filter states)
Filter states
der(Filter states)
[:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]





Pressure drop of fully open damper at nominal mass flow rate [Pa|Pa]
Pressure drop of duct and resistances other than the damper in series, at nominal mass flow rate [Pa|Pa]
Set to true to use deltaM for turbulent transition, else ReC is used [:#(type=Boolean)]
Fraction of nominal mass flow rate where transition to turbulent occurs
Nominal face velocity [m/s]
Face area [m2]
Set to true for round duct, false for square cross section [:#(type=Boolean)]
Reynolds number where transition to turbulent starts
Coefficient a for damper characteristics [1]
Coefficient b for damper characteristics [1]
Lower value for damper curve [1]
Upper value for damper curve [1]
Loss coefficient for y=0 (pressure drop divided by dynamic pressure) [1]
Loss coefficient for y=1 (pressure drop divided by dynamic pressure) [1]
Damper leakage, ratio of flow coefficients k(y=0)/k(y=1)
Set to true to use constant density for flow friction [:#(type=Boolean)]
Flow coefficient of fixed resistance that may be in series with damper, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2).
Flow coefficient of damper, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Density, used to compute fluid volume [kg/m3|g/cm3]
Shape factor used to compute the hydraulic diameter for round ducts
Loss coefficient at the lower limit of the exponential characteristics
Loss coefficient at the upper limit of the exponential characteristics
Polynomial coefficients for curve fit for y < yl
Polynomial coefficients for curve fit for y < yl
Polynomial coefficients for curve fit for y < yl
Polynomial coefficients for curve fit for y > yu
Polynomial coefficients for curve fit for y > yu
Polynomial coefficients for curve fit for y > yu
Flow coefficient of damper fully open, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flow coefficient of damper fully open plus fixed resistance, with unit=(kg.m)^(1/2)
Flow coefficient of damper fully closed, with unit=(kg.m)^(1/2)
Flow coefficient of damper fully closed + fixed resistance, with unit=(kg.m)^(1/2)
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Thermodynamic pressure in the connection point [Pa|bar]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
= true, if opening is filtered with a 2nd order CriticalDamping filter [:#(type=Boolean)]
Rise time of the filter (time to reach 99.6 % of an opening step) [s]
Order of filter [:#(type=Integer)]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial value of output
Actuator position (0: closed, 1: open)
Actual actuator position
In case of PressureIndependent the model I/O is modified [:#(type=Boolean)]
Analog filter characteristics (CriticalDamping/Bessel/Butterworth/ChebyshevI) [:#(type=Modelica.Blocks.Types.AnalogFilter)]
Type of filter (LowPass/HighPass/BandPass/BandStop) [:#(type=Modelica.Blocks.Types.FilterType)]
Order of filter [:#(type=Integer)]
Cut-off frequency [Hz]
Gain (= amplitude of frequency response at zero frequency)
Pass band ripple for Chebyshev filter (otherwise not used); > 0 required [dB]
Band of band pass/stop filter is f_min (A=-3db*gain) .. f_cut (A=-3db*gain) [Hz]
= true, if amplitude at f_cut = -3db, otherwise unmodified filter [:#(type=Boolean)]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
[:#(type=Integer)]
Initial or guess values of states
Initial or guess values of states
Initial value of output
Nominal value of input (used for scaling the states)
Filter states
der(Filter states)
Filter states
der(Filter states)
[:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]





Pressure drop of fully open damper at nominal mass flow rate [Pa|Pa]
Pressure drop of duct and resistances other than the damper in series, at nominal mass flow rate [Pa|Pa]
Set to true to use deltaM for turbulent transition, else ReC is used [:#(type=Boolean)]
Fraction of nominal mass flow rate where transition to turbulent occurs
Nominal face velocity [m/s]
Face area [m2]
Set to true for round duct, false for square cross section [:#(type=Boolean)]
Reynolds number where transition to turbulent starts
Coefficient a for damper characteristics [1]
Coefficient b for damper characteristics [1]
Lower value for damper curve [1]
Upper value for damper curve [1]
Loss coefficient for y=0 (pressure drop divided by dynamic pressure) [1]
Loss coefficient for y=1 (pressure drop divided by dynamic pressure) [1]
Damper leakage, ratio of flow coefficients k(y=0)/k(y=1)
Set to true to use constant density for flow friction [:#(type=Boolean)]
Flow coefficient of fixed resistance that may be in series with damper, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2).
Flow coefficient of damper, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Density, used to compute fluid volume [kg/m3|g/cm3]
Shape factor used to compute the hydraulic diameter for round ducts
Loss coefficient at the lower limit of the exponential characteristics
Loss coefficient at the upper limit of the exponential characteristics
Polynomial coefficients for curve fit for y < yl
Polynomial coefficients for curve fit for y < yl
Polynomial coefficients for curve fit for y < yl
Polynomial coefficients for curve fit for y > yu
Polynomial coefficients for curve fit for y > yu
Polynomial coefficients for curve fit for y > yu
Flow coefficient of damper fully open, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flow coefficient of damper fully open plus fixed resistance, with unit=(kg.m)^(1/2)
Flow coefficient of damper fully closed, with unit=(kg.m)^(1/2)
Flow coefficient of damper fully closed + fixed resistance, with unit=(kg.m)^(1/2)
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Fraction of nominal mass flow rate where transition to turbulent occurs
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
Precomputed coefficient to avoid division by parameter
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Fraction of nominal mass flow rate where transition to turbulent occurs
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
Precomputed coefficient to avoid division by parameter
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Fraction of nominal mass flow rate where transition to turbulent occurs
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
Precomputed coefficient to avoid division by parameter
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Fraction of nominal mass flow rate where transition to turbulent occurs
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
Precomputed coefficient to avoid division by parameter
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Fraction of nominal mass flow rate where transition to turbulent occurs
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
Precomputed coefficient to avoid division by parameter
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= false to simplify equations, assuming, but not enforcing, no flow reversal. Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Temperature of the fluid [K|degC]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow from port_a to port_b as output signal [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Heat flow rate (positive if flowing from outside into the component) [W]
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Fraction of nominal mass flow rate where transition to turbulent occurs
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
Precomputed coefficient to avoid division by parameter
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
= true, if opening is filtered with a 2nd order CriticalDamping filter [:#(type=Boolean)]
Rise time of the filter (time to reach 99.6 % of an opening step) [s]
Order of filter [:#(type=Integer)]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial value of output
Actuator position (0: closed, 1: open)
Actual actuator position
In case of PressureIndependent the model I/O is modified [:#(type=Boolean)]
Analog filter characteristics (CriticalDamping/Bessel/Butterworth/ChebyshevI) [:#(type=Modelica.Blocks.Types.AnalogFilter)]
Type of filter (LowPass/HighPass/BandPass/BandStop) [:#(type=Modelica.Blocks.Types.FilterType)]
Order of filter [:#(type=Integer)]
Cut-off frequency [Hz]
Gain (= amplitude of frequency response at zero frequency)
Pass band ripple for Chebyshev filter (otherwise not used); > 0 required [dB]
Band of band pass/stop filter is f_min (A=-3db*gain) .. f_cut (A=-3db*gain) [Hz]
= true, if amplitude at f_cut = -3db, otherwise unmodified filter [:#(type=Boolean)]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
[:#(type=Integer)]
Initial or guess values of states
Initial or guess values of states
Initial value of output
Nominal value of input (used for scaling the states)
Filter states
der(Filter states)
Filter states
der(Filter states)
[:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]





Pressure drop of fully open damper at nominal mass flow rate [Pa|Pa]
Pressure drop of duct and resistances other than the damper in series, at nominal mass flow rate [Pa|Pa]
Set to true to use deltaM for turbulent transition, else ReC is used [:#(type=Boolean)]
Fraction of nominal mass flow rate where transition to turbulent occurs
Nominal face velocity [m/s]
Face area [m2]
Set to true for round duct, false for square cross section [:#(type=Boolean)]
Reynolds number where transition to turbulent starts
Coefficient a for damper characteristics [1]
Coefficient b for damper characteristics [1]
Lower value for damper curve [1]
Upper value for damper curve [1]
Loss coefficient for y=0 (pressure drop divided by dynamic pressure) [1]
Loss coefficient for y=1 (pressure drop divided by dynamic pressure) [1]
Damper leakage, ratio of flow coefficients k(y=0)/k(y=1)
Set to true to use constant density for flow friction [:#(type=Boolean)]
Flow coefficient of fixed resistance that may be in series with damper, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2).
Flow coefficient of damper, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Density, used to compute fluid volume [kg/m3|g/cm3]
Shape factor used to compute the hydraulic diameter for round ducts
Loss coefficient at the lower limit of the exponential characteristics
Loss coefficient at the upper limit of the exponential characteristics
Polynomial coefficients for curve fit for y < yl
Polynomial coefficients for curve fit for y < yl
Polynomial coefficients for curve fit for y < yl
Polynomial coefficients for curve fit for y > yu
Polynomial coefficients for curve fit for y > yu
Polynomial coefficients for curve fit for y > yu
Flow coefficient of damper fully open, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flow coefficient of damper fully open plus fixed resistance, with unit=(kg.m)^(1/2)
Flow coefficient of damper fully closed, with unit=(kg.m)^(1/2)
Flow coefficient of damper fully closed + fixed resistance, with unit=(kg.m)^(1/2)
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Fraction of nominal mass flow rate where transition to turbulent occurs
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
Precomputed coefficient to avoid division by parameter
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Thermodynamic pressure in the connection point [Pa|bar]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
= true, if opening is filtered with a 2nd order CriticalDamping filter [:#(type=Boolean)]
Rise time of the filter (time to reach 99.6 % of an opening step) [s]
Order of filter [:#(type=Integer)]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial value of output
Actuator position (0: closed, 1: open)
Actual actuator position
In case of PressureIndependent the model I/O is modified [:#(type=Boolean)]
Analog filter characteristics (CriticalDamping/Bessel/Butterworth/ChebyshevI) [:#(type=Modelica.Blocks.Types.AnalogFilter)]
Type of filter (LowPass/HighPass/BandPass/BandStop) [:#(type=Modelica.Blocks.Types.FilterType)]
Order of filter [:#(type=Integer)]
Cut-off frequency [Hz]
Gain (= amplitude of frequency response at zero frequency)
Pass band ripple for Chebyshev filter (otherwise not used); > 0 required [dB]
Band of band pass/stop filter is f_min (A=-3db*gain) .. f_cut (A=-3db*gain) [Hz]
= true, if amplitude at f_cut = -3db, otherwise unmodified filter [:#(type=Boolean)]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
[:#(type=Integer)]
Initial or guess values of states
Initial or guess values of states
Initial value of output
Nominal value of input (used for scaling the states)
Filter states
der(Filter states)
Filter states
der(Filter states)
[:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]





Pressure drop of fully open damper at nominal mass flow rate [Pa|Pa]
Pressure drop of duct and resistances other than the damper in series, at nominal mass flow rate [Pa|Pa]
Set to true to use deltaM for turbulent transition, else ReC is used [:#(type=Boolean)]
Fraction of nominal mass flow rate where transition to turbulent occurs
Nominal face velocity [m/s]
Face area [m2]
Set to true for round duct, false for square cross section [:#(type=Boolean)]
Reynolds number where transition to turbulent starts
Coefficient a for damper characteristics [1]
Coefficient b for damper characteristics [1]
Lower value for damper curve [1]
Upper value for damper curve [1]
Loss coefficient for y=0 (pressure drop divided by dynamic pressure) [1]
Loss coefficient for y=1 (pressure drop divided by dynamic pressure) [1]
Damper leakage, ratio of flow coefficients k(y=0)/k(y=1)
Set to true to use constant density for flow friction [:#(type=Boolean)]
Flow coefficient of fixed resistance that may be in series with damper, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2).
Flow coefficient of damper, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Density, used to compute fluid volume [kg/m3|g/cm3]
Shape factor used to compute the hydraulic diameter for round ducts
Loss coefficient at the lower limit of the exponential characteristics
Loss coefficient at the upper limit of the exponential characteristics
Polynomial coefficients for curve fit for y < yl
Polynomial coefficients for curve fit for y < yl
Polynomial coefficients for curve fit for y < yl
Polynomial coefficients for curve fit for y > yu
Polynomial coefficients for curve fit for y > yu
Polynomial coefficients for curve fit for y > yu
Flow coefficient of damper fully open, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flow coefficient of damper fully open plus fixed resistance, with unit=(kg.m)^(1/2)
Flow coefficient of damper fully closed, with unit=(kg.m)^(1/2)
Flow coefficient of damper fully closed + fixed resistance, with unit=(kg.m)^(1/2)
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
Flag to force error control on m_flow. Set to true if interested in flow rate [:#(type=Boolean)]
= true, use homotopy method [:#(type=Boolean)]
Flow exponent, m=0.5 for turbulent, m=1 for laminar
Set to false to use density and viscosity based on actual medium state, rather than using default values [:#(type=Boolean)]
Pressure difference where laminar and turbulent flow relation coincide. Recommended = 0.1 [Pa|Pa]
Volume flow rate through the component [m3/s]
Average velocity [m/s]
Normalized flow rate where dphi(0)/dpi intersects phi(1)
Flow coefficient, k = V_flow/ dp^m
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density at the medium default properties [kg/m3|g/cm3]
Dynamic viscosity at the medium default properties [Pa.s]
Polynomial coefficient for regularized implementation of flow resistance
Polynomial coefficient for regularized implementation of flow resistance
Polynomial coefficient for regularized implementation of flow resistance
Polynomial coefficient for regularized implementation of flow resistance
Air mass exchanged (for purpose of error control only) [kg]
der(Air mass exchanged (for purpose of error control only)) [kg/s]
Area of orifice [m2]
Discharge coefficient
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
Flag to force error control on m_flow. Set to true if interested in flow rate [:#(type=Boolean)]
= true, use homotopy method [:#(type=Boolean)]
Flow exponent, m=0.5 for turbulent, m=1 for laminar
Set to false to use density and viscosity based on actual medium state, rather than using default values [:#(type=Boolean)]
Pressure difference where laminar and turbulent flow relation coincide. Recommended = 0.1 [Pa|Pa]
Volume flow rate through the component [m3/s]
Average velocity [m/s]
Normalized flow rate where dphi(0)/dpi intersects phi(1)
Flow coefficient, k = V_flow/ dp^m
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density at the medium default properties [kg/m3|g/cm3]
Dynamic viscosity at the medium default properties [Pa.s]
Polynomial coefficient for regularized implementation of flow resistance
Polynomial coefficient for regularized implementation of flow resistance
Polynomial coefficient for regularized implementation of flow resistance
Polynomial coefficient for regularized implementation of flow resistance
Air mass exchanged (for purpose of error control only) [kg]
der(Air mass exchanged (for purpose of error control only)) [kg/s]
Area of orifice [m2]
Discharge coefficient
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
Flag to force error control on m_flow. Set to true if interested in flow rate [:#(type=Boolean)]
= true, use homotopy method [:#(type=Boolean)]
Flow exponent, m=0.5 for turbulent, m=1 for laminar
Set to false to use density and viscosity based on actual medium state, rather than using default values [:#(type=Boolean)]
Pressure difference where laminar and turbulent flow relation coincide. Recommended = 0.1 [Pa|Pa]
Volume flow rate through the component [m3/s]
Average velocity [m/s]
Normalized flow rate where dphi(0)/dpi intersects phi(1)
Flow coefficient, k = V_flow/ dp^m
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density at the medium default properties [kg/m3|g/cm3]
Dynamic viscosity at the medium default properties [Pa.s]
Polynomial coefficient for regularized implementation of flow resistance
Polynomial coefficient for regularized implementation of flow resistance
Polynomial coefficient for regularized implementation of flow resistance
Polynomial coefficient for regularized implementation of flow resistance
Air mass exchanged (for purpose of error control only) [kg]
der(Air mass exchanged (for purpose of error control only)) [kg/s]
Area of orifice [m2]
Discharge coefficient
Number of outputs [:#(type=Integer)]
Connector of Real output signals
Connector of Real output signals
Connector of Real output signals
Connector of Real output signals
= true, if table is defined on file or in function usertab [:#(type=Boolean)]
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
= true, if info message that file is loading is to be printed [:#(type=Boolean)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
Extrapolation of data outside the definition range [:#(type=Modelica.Blocks.Types.Extrapolation)]
Offsets of output signals
Output = offset for time < startTime [s]
Time scale of first table column [s]
Minimum abscissa value defined in table [s]
Maximum abscissa value defined in table [s]
Minimum (scaled) abscissa value defined in table
Maximum (scaled) abscissa value defined in table
Offsets of output signals
Offsets of output signals
Offsets of output signals
Offsets of output signals
[:#(type=Integer)]
Next time event instant [s]
Next scaled time event instant
= 1, if table was successfully read from file

Scaled time
= true, if numberPort enabled [:#(type=Boolean)]
Number to visualize if use_numberPort=false (time varying)
Number of significant digits to be shown [:#(type=Integer)]
= true, if numberPort enabled [:#(type=Boolean)]
Number to visualize if use_numberPort=false (time varying)
Number of significant digits to be shown [:#(type=Integer)]
= true, if numberPort enabled [:#(type=Boolean)]
Number to visualize if use_numberPort=false (time varying)
Number of significant digits to be shown [:#(type=Integer)]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Relative pressure of port_a minus port_b [Pa|Pa]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Relative pressure of port_a minus port_b [Pa|Pa]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Relative pressure of port_a minus port_b [Pa|Pa]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Relative pressure of port_a minus port_b [Pa|Pa]
Connector of setpoint input signal
Control error (set point - measurement)
Type of controller [:#(type=Modelica.Blocks.Types.SimpleController)]
Gain of controller
Time constant of Integrator block [s]
Time constant of Derivative block [s]
Upper limit of output
Lower limit of output
Set-point weight for Proportional block (0..1)
Set-point weight for Derivative block (0..1)
Ni*Ti is time constant of anti-windup compensation
The higher Nd, the more ideal the derivative block
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.InitPID)]
Initial or guess value value for integrator output (= integrator state)
Initial or guess value for state of derivative block
Initial value of output
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Set to true for throttling the water flow rate through a cooling coil controller [:#(type=Boolean)]
Type of controller output reset [:#(type=Buildings.Types.Reset)]
Value to which the controller output is reset if the boolean trigger has a rising edge, used if reset == Buildings.Types.Reset.Parameter
Connector of Real output signal
Gain of upper input
Gain of lower input
Gain value multiplied with input signal [1]
Output signal connector
Gain of upper input
Gain of middle input
Gain of lower input
Connector 2 of Real input signals
Connector of Real output signals
[s]
Switch for sign for reverse action
Boolean flag to enable integral action [:#(type=Boolean)]
Boolean flag to enable derivative action [:#(type=Boolean)]
Internal connector for controller output reset
Gain of upper input
Gain of middle input
Gain of lower input
Connector 3 of Real input signals
Connector of Real output signals
Connector of Real output signal
Gain of upper input
Gain of lower input
Gain value multiplied with input signal [1]
Output signal connector
Gain value multiplied with input signal [1]
Upper limits of input signals
Lower limits of input signals
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator) [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Relative pressure of port_a minus port_b [Pa|Pa]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Independent mixture mass fractions m_i/m close to the connection point if m_flow < 0 [kg/kg]
Relative pressure of port_a minus port_b [Pa|Pa]
Value of Real output
Value of Real output
Number of outputs [:#(type=Integer)]
Connector of Real output signals
= true, if table is defined on file or in function usertab [:#(type=Boolean)]
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
= true, if info message that file is loading is to be printed [:#(type=Boolean)]
Columns of table to be interpolated [:#(type=Integer)]
Smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
Extrapolation of data outside the definition range [:#(type=Modelica.Blocks.Types.Extrapolation)]
Offsets of output signals
Output = offset for time < startTime [s]
Time scale of first table column [s]
Minimum abscissa value defined in table [s]
Maximum abscissa value defined in table [s]
Minimum (scaled) abscissa value defined in table
Maximum (scaled) abscissa value defined in table
Offsets of output signals
[:#(type=Integer)]
Next time event instant [s]
Next scaled time event instant
= 1, if table was successfully read from file

Scaled time
Number of outputs [:#(type=Integer)]
Connector of Real output signals
= true, if table is defined on file or in function usertab [:#(type=Boolean)]
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
= true, if info message that file is loading is to be printed [:#(type=Boolean)]
Columns of table to be interpolated [:#(type=Integer)]
Smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
Extrapolation of data outside the definition range [:#(type=Modelica.Blocks.Types.Extrapolation)]
Offsets of output signals
Output = offset for time < startTime [s]
Time scale of first table column [s]
Minimum abscissa value defined in table [s]
Maximum abscissa value defined in table [s]
Minimum (scaled) abscissa value defined in table
Maximum (scaled) abscissa value defined in table
Offsets of output signals
[:#(type=Integer)]
Next time event instant [s]
Next scaled time event instant
= 1, if table was successfully read from file

Scaled time
Number of outputs [:#(type=Integer)]
Connector of Real output signals
= true, if table is defined on file or in function usertab [:#(type=Boolean)]
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
= true, if info message that file is loading is to be printed [:#(type=Boolean)]
Columns of table to be interpolated [:#(type=Integer)]
Smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
Extrapolation of data outside the definition range [:#(type=Modelica.Blocks.Types.Extrapolation)]
Offsets of output signals
Output = offset for time < startTime [s]
Time scale of first table column [s]
Minimum abscissa value defined in table [s]
Maximum abscissa value defined in table [s]
Minimum (scaled) abscissa value defined in table
Maximum (scaled) abscissa value defined in table
Offsets of output signals
[:#(type=Integer)]
Next time event instant [s]
Next scaled time event instant
= 1, if table was successfully read from file

Scaled time
Connector of measurement input signal
Control error (set point - measurement)
Type of controller [:#(type=Modelica.Blocks.Types.SimpleController)]
Gain of controller
Time constant of Integrator block [s]
Time constant of Derivative block [s]
Upper limit of output
Lower limit of output
Set-point weight for Proportional block (0..1)
Set-point weight for Derivative block (0..1)
Ni*Ti is time constant of anti-windup compensation
The higher Nd, the more ideal the derivative block
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.InitPID)]
Initial or guess value value for integrator output (= integrator state)
Initial or guess value for state of derivative block
Initial value of output
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Set to true for throttling the water flow rate through a cooling coil controller [:#(type=Boolean)]
Type of controller output reset [:#(type=Buildings.Types.Reset)]
Value to which the controller output is reset if the boolean trigger has a rising edge, used if reset == Buildings.Types.Reset.Parameter
Connector of Real output signal
Gain of upper input
Gain of lower input
Gain value multiplied with input signal [1]
Output signal connector
Gain of upper input
Gain of middle input
Gain of lower input
Connector 2 of Real input signals
Connector of Real output signals
[s]
Switch for sign for reverse action
Boolean flag to enable integral action [:#(type=Boolean)]
Boolean flag to enable derivative action [:#(type=Boolean)]
Internal connector for controller output reset
Gain of upper input
Gain of middle input
Gain of lower input
Connector 3 of Real input signals
Connector of Real output signals
Connector of Real output signal
Gain of upper input
Gain of lower input
Gain value multiplied with input signal [1]
Output signal connector
Gain value multiplied with input signal [1]
Upper limits of input signals
Lower limits of input signals
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator) [:#(type=Boolean)]
Value of Real output
Control error (set point - measurement)
Type of controller [:#(type=Modelica.Blocks.Types.SimpleController)]
Gain of controller
Time constant of Integrator block [s]
Time constant of Derivative block [s]
Upper limit of output
Lower limit of output
Set-point weight for Proportional block (0..1)
Set-point weight for Derivative block (0..1)
Ni*Ti is time constant of anti-windup compensation
The higher Nd, the more ideal the derivative block
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.InitPID)]
Initial or guess value value for integrator output (= integrator state)
Initial or guess value for state of derivative block
Initial value of output
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Set to true for throttling the water flow rate through a cooling coil controller [:#(type=Boolean)]
Type of controller output reset [:#(type=Buildings.Types.Reset)]
Value to which the controller output is reset if the boolean trigger has a rising edge, used if reset == Buildings.Types.Reset.Parameter
Connector of Real output signal
Gain of upper input
Gain of lower input
Gain value multiplied with input signal [1]
Output signal connector
Gain of upper input
Gain of middle input
Gain of lower input
Connector 2 of Real input signals
Connector of Real output signals
[s]
Switch for sign for reverse action
Boolean flag to enable integral action [:#(type=Boolean)]
Boolean flag to enable derivative action [:#(type=Boolean)]
Internal connector for controller output reset
Gain of upper input
Gain of middle input
Gain of lower input
Connector 3 of Real input signals
Connector of Real output signals
Connector of Real output signal
Gain of upper input
Gain of lower input
Gain value multiplied with input signal [1]
Output signal connector
Gain value multiplied with input signal [1]
Upper limits of input signals
Lower limits of input signals
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator) [:#(type=Boolean)]
Value of Real output
Control error (set point - measurement)
Type of controller [:#(type=Modelica.Blocks.Types.SimpleController)]
Gain of controller
Time constant of Integrator block [s]
Time constant of Derivative block [s]
Upper limit of output
Lower limit of output
Set-point weight for Proportional block (0..1)
Set-point weight for Derivative block (0..1)
Ni*Ti is time constant of anti-windup compensation
The higher Nd, the more ideal the derivative block
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.InitPID)]
Initial or guess value value for integrator output (= integrator state)
Initial or guess value for state of derivative block
Initial value of output
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Set to true for throttling the water flow rate through a cooling coil controller [:#(type=Boolean)]
Type of controller output reset [:#(type=Buildings.Types.Reset)]
Value to which the controller output is reset if the boolean trigger has a rising edge, used if reset == Buildings.Types.Reset.Parameter
Connector of Real output signal
Gain of upper input
Gain of lower input
Gain value multiplied with input signal [1]
Output signal connector
Gain of upper input
Gain of middle input
Gain of lower input
Connector 2 of Real input signals
Connector of Real output signals
[s]
Switch for sign for reverse action
Boolean flag to enable integral action [:#(type=Boolean)]
Boolean flag to enable derivative action [:#(type=Boolean)]
Internal connector for controller output reset
Gain of upper input
Gain of middle input
Gain of lower input
Connector 3 of Real input signals
Connector of Real output signals
Connector of Real output signal
Gain of upper input
Gain of lower input
Gain value multiplied with input signal [1]
Output signal connector
Gain value multiplied with input signal [1]
Upper limits of input signals
Lower limits of input signals
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator) [:#(type=Boolean)]
Control error (set point - measurement)
Type of controller [:#(type=Modelica.Blocks.Types.SimpleController)]
Gain of controller
Time constant of Integrator block [s]
Time constant of Derivative block [s]
Upper limit of output
Lower limit of output
Set-point weight for Proportional block (0..1)
Set-point weight for Derivative block (0..1)
Ni*Ti is time constant of anti-windup compensation
The higher Nd, the more ideal the derivative block
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.InitPID)]
Initial or guess value value for integrator output (= integrator state)
Initial or guess value for state of derivative block
Initial value of output
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Set to true for throttling the water flow rate through a cooling coil controller [:#(type=Boolean)]
Type of controller output reset [:#(type=Buildings.Types.Reset)]
Value to which the controller output is reset if the boolean trigger has a rising edge, used if reset == Buildings.Types.Reset.Parameter
Connector of Real output signal
Gain of upper input
Gain of lower input
Gain value multiplied with input signal [1]
Output signal connector
Gain of upper input
Gain of middle input
Gain of lower input
Connector 2 of Real input signals
Connector of Real output signals
[s]
Switch for sign for reverse action
Boolean flag to enable integral action [:#(type=Boolean)]
Boolean flag to enable derivative action [:#(type=Boolean)]
Internal connector for controller output reset
Gain of upper input
Gain of middle input
Gain of lower input
Connector 3 of Real input signals
Connector of Real output signals
Connector of Real output signal
Gain of upper input
Gain of lower input
Gain value multiplied with input signal [1]
Output signal connector
Gain value multiplied with input signal [1]
Upper limits of input signals
Lower limits of input signals
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator) [:#(type=Boolean)]
Control error (set point - measurement)
Type of controller [:#(type=Modelica.Blocks.Types.SimpleController)]
Gain of controller
Time constant of Integrator block [s]
Time constant of Derivative block [s]
Upper limit of output
Lower limit of output
Set-point weight for Proportional block (0..1)
Set-point weight for Derivative block (0..1)
Ni*Ti is time constant of anti-windup compensation
The higher Nd, the more ideal the derivative block
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.InitPID)]
Initial or guess value value for integrator output (= integrator state)
Initial or guess value for state of derivative block
Initial value of output
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Set to true for throttling the water flow rate through a cooling coil controller [:#(type=Boolean)]
Type of controller output reset [:#(type=Buildings.Types.Reset)]
Value to which the controller output is reset if the boolean trigger has a rising edge, used if reset == Buildings.Types.Reset.Parameter
Connector of Real output signal
Gain of upper input
Gain of lower input
Gain value multiplied with input signal [1]
Output signal connector
Gain of upper input
Gain of middle input
Gain of lower input
Connector 2 of Real input signals
Connector of Real output signals
[s]
Switch for sign for reverse action
Boolean flag to enable integral action [:#(type=Boolean)]
Boolean flag to enable derivative action [:#(type=Boolean)]
Internal connector for controller output reset
Gain of upper input
Gain of middle input
Gain of lower input
Connector 3 of Real input signals
Connector of Real output signals
Connector of Real output signal
Gain of upper input
Gain of lower input
Gain value multiplied with input signal [1]
Output signal connector
Gain value multiplied with input signal [1]
Upper limits of input signals
Lower limits of input signals
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator) [:#(type=Boolean)]
= false to simplify equations, assuming, but not enforcing, no flow reversal [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Start value for m_flow, used to avoid a warning if not set in m_flow, and to avoid m_flow.start in parameter window [kg/s]
Start value for dp, used to avoid a warning if not set in dp, and to avoid dp.start in parameter window [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Fraction of nominal mass flow rate where transition to turbulent occurs
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
Precomputed coefficient to avoid division by parameter
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero. Used only if Medium.nX > 1 [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Sensible plus latent heat flow rate transferred into the medium [W]
Density of medium [kg/m3|g/cm3]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Molar masses of components [kg/mol]
Molar masses of components [kg/mol]
Mass fraction of air [kg/kg]
Temperature difference used to compute enthalpy [K,]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Masses of independent components in the fluid [kg]
der(Masses of independent components in the fluid) [kg/s]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
[kg/s]
[kg/s]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid mass [kg/m3|g/cm3]
Vector with zero everywhere except where species is
Start value for specific enthalpy [J/kg]
If true, then port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero, and equations are simplified [:#(type=Boolean)]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero. Used only if Medium.nX > 1 [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Sensible plus latent heat flow rate transferred into the medium [W]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Density of medium [kg/m3|g/cm3]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Molar masses of components [kg/mol]
Molar masses of components [kg/mol]
Mass fraction of air [kg/kg]
Temperature difference used to compute enthalpy [K,]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Masses of independent components in the fluid [kg]
der(Masses of independent components in the fluid) [kg/s]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
[W]
[W]
[W]
[W]
[W]
[W]
[kg/s]
[kg/s]
[kg/s]
[kg/s]
[kg/s]
[kg/s]
[kg/s]
[kg/s]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid mass [kg/m3|g/cm3]
Vector with zero everywhere except where species is
Start value for specific enthalpy [J/kg]
If true, then port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero, and equations are simplified [:#(type=Boolean)]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero. Used only if Medium.nX > 1 [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Sensible plus latent heat flow rate transferred into the medium [W]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Density of medium [kg/m3|g/cm3]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Molar masses of components [kg/mol]
Molar masses of components [kg/mol]
Mass fraction of air [kg/kg]
Temperature difference used to compute enthalpy [K,]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Masses of independent components in the fluid [kg]
der(Masses of independent components in the fluid) [kg/s]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
[W]
[W]
[W]
[W]
[W]
[W]
[kg/s]
[kg/s]
[kg/s]
[kg/s]
[kg/s]
[kg/s]
[kg/s]
[kg/s]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid mass [kg/m3|g/cm3]
Vector with zero everywhere except where species is
Start value for specific enthalpy [J/kg]
If true, then port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero, and equations are simplified [:#(type=Boolean)]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero. Used only if Medium.nX > 1 [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Sensible plus latent heat flow rate transferred into the medium [W]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Density of medium [kg/m3|g/cm3]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Molar masses of components [kg/mol]
Molar masses of components [kg/mol]
Mass fraction of air [kg/kg]
Temperature difference used to compute enthalpy [K,]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Masses of independent components in the fluid [kg]
der(Masses of independent components in the fluid) [kg/s]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
[W]
[W]
[W]
[W]
[W]
[W]
[kg/s]
[kg/s]
[kg/s]
[kg/s]
[kg/s]
[kg/s]
[kg/s]
[kg/s]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Density, used to compute fluid mass [kg/m3|g/cm3]
Vector with zero everywhere except where species is
Start value for specific enthalpy [J/kg]
If true, then port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero, and equations are simplified [:#(type=Boolean)]
Needed to connect to conditional connector [kg/s]
Connector of Real output signal
Gain of upper input
Gain of lower input
Connector of Real output signal
der(Connector of Real output signal)
Integrator gain [1]
Type of initialization (1: no init, 2: steady state, 3,4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of output (= state)
Type of integrator reset [:#(type=Buildings.Types.Reset)]
Value to which integrator is reset, used if reset = Buildings.Types.Reset.Parameter
Internal connector for integrator reset
Needed to use conditional connector trigger [:#(type=Boolean)]
Gains [1]
Time constants (T>0 required; T=0 is ideal derivative block) [s]
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of state
Initial value of output (= state)
State of block
der(State of block)
[:#(type=Boolean)]
Connector of Real output signal
Gain of upper input
Gain of lower input
Connector of Real output signal
der(Connector of Real output signal)
Integrator gain [1]
Type of initialization (1: no init, 2: steady state, 3,4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of output (= state)
Type of integrator reset [:#(type=Buildings.Types.Reset)]
Value to which integrator is reset, used if reset = Buildings.Types.Reset.Parameter
Internal connector for integrator reset
Needed to use conditional connector trigger [:#(type=Boolean)]
Gains [1]
Time constants (T>0 required; T=0 is ideal derivative block) [s]
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of state
Initial value of output (= state)
State of block
der(State of block)
[:#(type=Boolean)]
Connector of Real output signal
Gain of upper input
Gain of lower input
Connector of Real output signal
der(Connector of Real output signal)
Integrator gain [1]
Type of initialization (1: no init, 2: steady state, 3,4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of output (= state)
Type of integrator reset [:#(type=Buildings.Types.Reset)]
Value to which integrator is reset, used if reset = Buildings.Types.Reset.Parameter
Internal connector for integrator reset
Needed to use conditional connector trigger [:#(type=Boolean)]
Gains [1]
Time constants (T>0 required; T=0 is ideal derivative block) [s]
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of state
Initial value of output (= state)
State of block
der(State of block)
[:#(type=Boolean)]
Connector of Real output signal
Gain of upper input
Gain of lower input
Connector of Real output signal
der(Connector of Real output signal)
Integrator gain [1]
Type of initialization (1: no init, 2: steady state, 3,4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of output (= state)
Type of integrator reset [:#(type=Buildings.Types.Reset)]
Value to which integrator is reset, used if reset = Buildings.Types.Reset.Parameter
Internal connector for integrator reset
Needed to use conditional connector trigger [:#(type=Boolean)]
Gains [1]
Time constants (T>0 required; T=0 is ideal derivative block) [s]
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of state
Initial value of output (= state)
State of block
der(State of block)
[:#(type=Boolean)]
Connector of Real output signal
Gain of upper input
Gain of lower input
Connector of Real output signal
der(Connector of Real output signal)
Integrator gain [1]
Type of initialization (1: no init, 2: steady state, 3,4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of output (= state)
Type of integrator reset [:#(type=Buildings.Types.Reset)]
Value to which integrator is reset, used if reset = Buildings.Types.Reset.Parameter
Internal connector for integrator reset
Needed to use conditional connector trigger [:#(type=Boolean)]
Gains [1]
Time constants (T>0 required; T=0 is ideal derivative block) [s]
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of state
Initial value of output (= state)
State of block
der(State of block)
[:#(type=Boolean)]
Connector of Real output signal
Gain of upper input
Gain of lower input
Connector of Real output signal
der(Connector of Real output signal)
Integrator gain [1]
Type of initialization (1: no init, 2: steady state, 3,4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of output (= state)
Type of integrator reset [:#(type=Buildings.Types.Reset)]
Value to which integrator is reset, used if reset = Buildings.Types.Reset.Parameter
Internal connector for integrator reset
Needed to use conditional connector trigger [:#(type=Boolean)]
Gains [1]
Time constants (T>0 required; T=0 is ideal derivative block) [s]
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of state
Initial value of output (= state)
State of block
der(State of block)
[:#(type=Boolean)]

